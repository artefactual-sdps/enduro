/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnduroIngestSip } from './EnduroIngestSip';
import {
    EnduroIngestSipFromJSON,
    EnduroIngestSipFromJSONTyped,
    EnduroIngestSipToJSON,
} from './EnduroIngestSip';
import type { EnduroPage } from './EnduroPage';
import {
    EnduroPageFromJSON,
    EnduroPageFromJSONTyped,
    EnduroPageToJSON,
} from './EnduroPage';

/**
 * 
 * @export
 * @interface SIPs
 */
export interface SIPs {
    /**
     * 
     * @type {Array<EnduroIngestSip>}
     * @memberof SIPs
     */
    items: Array<EnduroIngestSip>;
    /**
     * 
     * @type {EnduroPage}
     * @memberof SIPs
     */
    page: EnduroPage;
}

/**
 * Check if a given object implements the SIPs interface.
 */
export function instanceOfSIPs(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "page" in value;

    return isInstance;
}

export function SIPsFromJSON(json: any): SIPs {
    return SIPsFromJSONTyped(json, false);
}

export function SIPsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SIPs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(EnduroIngestSipFromJSON)),
        'page': EnduroPageFromJSON(json['page']),
    };
}

export function SIPsToJSON(value?: SIPs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(EnduroIngestSipToJSON)),
        'page': EnduroPageToJSON(value.page),
    };
}

