/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * SIP describes an ingest SIP type.
 * @export
 * @interface EnduroIngestSip
 */
export interface EnduroIngestSip {
    /**
     * Identifier of AIP
     * @type {string}
     * @memberof EnduroIngestSip
     */
    aipId?: string;
    /**
     * Completion datetime
     * @type {Date}
     * @memberof EnduroIngestSip
     */
    completedAt?: Date;
    /**
     * Creation datetime
     * @type {Date}
     * @memberof EnduroIngestSip
     */
    createdAt: Date;
    /**
     * Package type in case of failure (SIP or PIP)
     * @type {string}
     * @memberof EnduroIngestSip
     */
    failedAs?: EnduroIngestSipFailedAsEnum;
    /**
     * Object key of the failed package in the internal bucket
     * @type {string}
     * @memberof EnduroIngestSip
     */
    failedKey?: string;
    /**
     * Name of the SIP
     * @type {string}
     * @memberof EnduroIngestSip
     */
    name?: string;
    /**
     * Start datetime
     * @type {Date}
     * @memberof EnduroIngestSip
     */
    startedAt?: Date;
    /**
     * Status of the SIP
     * @type {string}
     * @memberof EnduroIngestSip
     */
    status: EnduroIngestSipStatusEnum;
    /**
     * Identifier of SIP
     * @type {string}
     * @memberof EnduroIngestSip
     */
    uuid: string;
}


/**
 * @export
 */
export const EnduroIngestSipFailedAsEnum = {
    Sip: 'SIP',
    Pip: 'PIP'
} as const;
export type EnduroIngestSipFailedAsEnum = typeof EnduroIngestSipFailedAsEnum[keyof typeof EnduroIngestSipFailedAsEnum];

/**
 * @export
 */
export const EnduroIngestSipStatusEnum = {
    Error: 'error',
    Failed: 'failed',
    Queued: 'queued',
    Processing: 'processing',
    Pending: 'pending',
    Ingested: 'ingested'
} as const;
export type EnduroIngestSipStatusEnum = typeof EnduroIngestSipStatusEnum[keyof typeof EnduroIngestSipStatusEnum];


/**
 * Check if a given object implements the EnduroIngestSip interface.
 */
export function instanceOfEnduroIngestSip(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "uuid" in value;

    return isInstance;
}

export function EnduroIngestSipFromJSON(json: any): EnduroIngestSip {
    return EnduroIngestSipFromJSONTyped(json, false);
}

export function EnduroIngestSipFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnduroIngestSip {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aipId': !exists(json, 'aip_id') ? undefined : json['aip_id'],
        'completedAt': !exists(json, 'completed_at') ? undefined : (new Date(json['completed_at'])),
        'createdAt': (new Date(json['created_at'])),
        'failedAs': !exists(json, 'failed_as') ? undefined : json['failed_as'],
        'failedKey': !exists(json, 'failed_key') ? undefined : json['failed_key'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'startedAt': !exists(json, 'started_at') ? undefined : (new Date(json['started_at'])),
        'status': json['status'],
        'uuid': json['uuid'],
    };
}

export function EnduroIngestSipToJSON(value?: EnduroIngestSip | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aip_id': value.aipId,
        'completed_at': value.completedAt === undefined ? undefined : (value.completedAt.toISOString()),
        'created_at': (value.createdAt.toISOString()),
        'failed_as': value.failedAs,
        'failed_key': value.failedKey,
        'name': value.name,
        'started_at': value.startedAt === undefined ? undefined : (value.startedAt.toISOString()),
        'status': value.status,
        'uuid': value.uuid,
    };
}

