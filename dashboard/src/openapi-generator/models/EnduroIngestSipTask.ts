/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * SIPTask describes a SIP workflow task.
 * @export
 * @interface EnduroIngestSipTask
 */
export interface EnduroIngestSipTask {
    /**
     * 
     * @type {Date}
     * @memberof EnduroIngestSipTask
     */
    completedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof EnduroIngestSipTask
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EnduroIngestSipTask
     */
    note?: string;
    /**
     * 
     * @type {Date}
     * @memberof EnduroIngestSipTask
     */
    startedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof EnduroIngestSipTask
     */
    status: EnduroIngestSipTaskStatusEnum;
    /**
     * Identifier of the task
     * @type {string}
     * @memberof EnduroIngestSipTask
     */
    uuid: string;
    /**
     * Identifier of related workflow
     * @type {string}
     * @memberof EnduroIngestSipTask
     */
    workflowUuid: string;
}


/**
 * @export
 */
export const EnduroIngestSipTaskStatusEnum = {
    Unspecified: 'unspecified',
    InProgress: 'in progress',
    Done: 'done',
    Error: 'error',
    Queued: 'queued',
    Pending: 'pending',
    Failed: 'failed'
} as const;
export type EnduroIngestSipTaskStatusEnum = typeof EnduroIngestSipTaskStatusEnum[keyof typeof EnduroIngestSipTaskStatusEnum];


/**
 * Check if a given object implements the EnduroIngestSipTask interface.
 */
export function instanceOfEnduroIngestSipTask(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "startedAt" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "workflowUuid" in value;

    return isInstance;
}

export function EnduroIngestSipTaskFromJSON(json: any): EnduroIngestSipTask {
    return EnduroIngestSipTaskFromJSONTyped(json, false);
}

export function EnduroIngestSipTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnduroIngestSipTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'completedAt': !exists(json, 'completed_at') ? undefined : (new Date(json['completed_at'])),
        'name': json['name'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'startedAt': (new Date(json['started_at'])),
        'status': json['status'],
        'uuid': json['uuid'],
        'workflowUuid': json['workflow_uuid'],
    };
}

export function EnduroIngestSipTaskToJSON(value?: EnduroIngestSipTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'completed_at': value.completedAt === undefined ? undefined : (value.completedAt.toISOString()),
        'name': value.name,
        'note': value.note,
        'started_at': (value.startedAt.toISOString()),
        'status': value.status,
        'uuid': value.uuid,
        'workflow_uuid': value.workflowUuid,
    };
}

