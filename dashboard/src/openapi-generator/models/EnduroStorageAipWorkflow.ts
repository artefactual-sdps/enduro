/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnduroStorageAipTask } from './EnduroStorageAipTask';
import {
    EnduroStorageAipTaskFromJSON,
    EnduroStorageAipTaskFromJSONTyped,
    EnduroStorageAipTaskToJSON,
} from './EnduroStorageAipTask';

/**
 * AIPWorkflow describes a workflow of an AIP.
 * @export
 * @interface EnduroStorageAipWorkflow
 */
export interface EnduroStorageAipWorkflow {
    /**
     * Identifier of related AIP
     * @type {string}
     * @memberof EnduroStorageAipWorkflow
     */
    aipUuid: string;
    /**
     * 
     * @type {Date}
     * @memberof EnduroStorageAipWorkflow
     */
    completedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof EnduroStorageAipWorkflow
     */
    startedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof EnduroStorageAipWorkflow
     */
    status: EnduroStorageAipWorkflowStatusEnum;
    /**
     * 
     * @type {Array<EnduroStorageAipTask>}
     * @memberof EnduroStorageAipWorkflow
     */
    tasks?: Array<EnduroStorageAipTask>;
    /**
     * 
     * @type {string}
     * @memberof EnduroStorageAipWorkflow
     */
    temporalId: string;
    /**
     * 
     * @type {string}
     * @memberof EnduroStorageAipWorkflow
     */
    type: EnduroStorageAipWorkflowTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EnduroStorageAipWorkflow
     */
    uuid: string;
}


/**
 * @export
 */
export const EnduroStorageAipWorkflowStatusEnum = {
    Unspecified: 'unspecified',
    InProgress: 'in progress',
    Done: 'done',
    Error: 'error',
    Queued: 'queued',
    Pending: 'pending',
    Canceled: 'canceled'
} as const;
export type EnduroStorageAipWorkflowStatusEnum = typeof EnduroStorageAipWorkflowStatusEnum[keyof typeof EnduroStorageAipWorkflowStatusEnum];

/**
 * @export
 */
export const EnduroStorageAipWorkflowTypeEnum = {
    Unspecified: 'unspecified',
    UploadAip: 'upload aip',
    MoveAip: 'move aip',
    DeleteAip: 'delete aip'
} as const;
export type EnduroStorageAipWorkflowTypeEnum = typeof EnduroStorageAipWorkflowTypeEnum[keyof typeof EnduroStorageAipWorkflowTypeEnum];


/**
 * Check if a given object implements the EnduroStorageAipWorkflow interface.
 */
export function instanceOfEnduroStorageAipWorkflow(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "aipUuid" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "temporalId" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "uuid" in value;

    return isInstance;
}

export function EnduroStorageAipWorkflowFromJSON(json: any): EnduroStorageAipWorkflow {
    return EnduroStorageAipWorkflowFromJSONTyped(json, false);
}

export function EnduroStorageAipWorkflowFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnduroStorageAipWorkflow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aipUuid': json['aip_uuid'],
        'completedAt': !exists(json, 'completed_at') ? undefined : (new Date(json['completed_at'])),
        'startedAt': !exists(json, 'started_at') ? undefined : (new Date(json['started_at'])),
        'status': json['status'],
        'tasks': !exists(json, 'tasks') ? undefined : ((json['tasks'] as Array<any>).map(EnduroStorageAipTaskFromJSON)),
        'temporalId': json['temporal_id'],
        'type': json['type'],
        'uuid': json['uuid'],
    };
}

export function EnduroStorageAipWorkflowToJSON(value?: EnduroStorageAipWorkflow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aip_uuid': value.aipUuid,
        'completed_at': value.completedAt === undefined ? undefined : (value.completedAt.toISOString()),
        'started_at': value.startedAt === undefined ? undefined : (value.startedAt.toISOString()),
        'status': value.status,
        'tasks': value.tasks === undefined ? undefined : ((value.tasks as Array<any>).map(EnduroStorageAipTaskToJSON)),
        'temporal_id': value.temporalId,
        'type': value.type,
        'uuid': value.uuid,
    };
}

