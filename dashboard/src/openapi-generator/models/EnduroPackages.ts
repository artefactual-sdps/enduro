/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnduroPage } from './EnduroPage';
import {
    EnduroPageFromJSON,
    EnduroPageFromJSONTyped,
    EnduroPageToJSON,
} from './EnduroPage';
import type { EnduroStoredPackage } from './EnduroStoredPackage';
import {
    EnduroStoredPackageFromJSON,
    EnduroStoredPackageFromJSONTyped,
    EnduroStoredPackageToJSON,
} from './EnduroStoredPackage';

/**
 * 
 * @export
 * @interface EnduroPackages
 */
export interface EnduroPackages {
    /**
     * 
     * @type {Array<EnduroStoredPackage>}
     * @memberof EnduroPackages
     */
    items: Array<EnduroStoredPackage>;
    /**
     * 
     * @type {EnduroPage}
     * @memberof EnduroPackages
     */
    page: EnduroPage;
}

/**
 * Check if a given object implements the EnduroPackages interface.
 */
export function instanceOfEnduroPackages(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "page" in value;

    return isInstance;
}

export function EnduroPackagesFromJSON(json: any): EnduroPackages {
    return EnduroPackagesFromJSONTyped(json, false);
}

export function EnduroPackagesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnduroPackages {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(EnduroStoredPackageFromJSON)),
        'page': EnduroPageFromJSON(json['page']),
    };
}

export function EnduroPackagesToJSON(value?: EnduroPackages | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(EnduroStoredPackageToJSON)),
        'page': EnduroPageToJSON(value.page),
    };
}

