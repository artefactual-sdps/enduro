/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EnduroPoststorage } from './EnduroPoststorage';
import {
    EnduroPoststorageFromJSON,
    EnduroPoststorageFromJSONTyped,
    EnduroPoststorageToJSON,
} from './EnduroPoststorage';
import type { EnduroPreprocessing } from './EnduroPreprocessing';
import {
    EnduroPreprocessingFromJSON,
    EnduroPreprocessingFromJSONTyped,
    EnduroPreprocessingToJSON,
} from './EnduroPreprocessing';

/**
 * 
 * @export
 * @interface EnduroAbout
 */
export interface EnduroAbout {
    /**
     * 
     * @type {Array<EnduroPoststorage>}
     * @memberof EnduroAbout
     */
    poststorage?: Array<EnduroPoststorage>;
    /**
     * 
     * @type {EnduroPreprocessing}
     * @memberof EnduroAbout
     */
    preprocessing: EnduroPreprocessing;
    /**
     * 
     * @type {string}
     * @memberof EnduroAbout
     */
    preservationSystem: string;
    /**
     * 
     * @type {number}
     * @memberof EnduroAbout
     */
    uploadMaxSize: number;
    /**
     * 
     * @type {string}
     * @memberof EnduroAbout
     */
    version: string;
}

/**
 * Check if a given object implements the EnduroAbout interface.
 */
export function instanceOfEnduroAbout(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "preprocessing" in value;
    isInstance = isInstance && "preservationSystem" in value;
    isInstance = isInstance && "uploadMaxSize" in value;
    isInstance = isInstance && "version" in value;

    return isInstance;
}

export function EnduroAboutFromJSON(json: any): EnduroAbout {
    return EnduroAboutFromJSONTyped(json, false);
}

export function EnduroAboutFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnduroAbout {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'poststorage': !exists(json, 'poststorage') ? undefined : ((json['poststorage'] as Array<any>).map(EnduroPoststorageFromJSON)),
        'preprocessing': EnduroPreprocessingFromJSON(json['preprocessing']),
        'preservationSystem': json['preservation_system'],
        'uploadMaxSize': json['upload_max_size'],
        'version': json['version'],
    };
}

export function EnduroAboutToJSON(value?: EnduroAbout | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'poststorage': value.poststorage === undefined ? undefined : ((value.poststorage as Array<any>).map(EnduroPoststorageToJSON)),
        'preprocessing': EnduroPreprocessingToJSON(value.preprocessing),
        'preservation_system': value.preservationSystem,
        'upload_max_size': value.uploadMaxSize,
        'version': value.version,
    };
}

