/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LocationConfig
 */
export interface LocationConfig {
    /**
     * Union type name, one of:
     * - "s3"
     * - "sftp"
     * @type {string}
     * @memberof LocationConfig
     */
    type: LocationConfigTypeEnum;
    /**
     * JSON formatted union value
     * @type {string}
     * @memberof LocationConfig
     */
    value: string;
}


/**
 * @export
 */
export const LocationConfigTypeEnum = {
    S3: 's3',
    Sftp: 'sftp'
} as const;
export type LocationConfigTypeEnum = typeof LocationConfigTypeEnum[keyof typeof LocationConfigTypeEnum];


/**
 * Check if a given object implements the LocationConfig interface.
 */
export function instanceOfLocationConfig(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function LocationConfigFromJSON(json: any): LocationConfig {
    return LocationConfigFromJSONTyped(json, false);
}

export function LocationConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['Type'],
        'value': json['Value'],
    };
}

export function LocationConfigToJSON(value?: LocationConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Type': value.type,
        'Value': value.value,
    };
}

