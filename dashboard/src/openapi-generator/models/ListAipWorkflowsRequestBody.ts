/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ListAipWorkflowsRequestBody
 */
export interface ListAipWorkflowsRequestBody {
    /**
     * 
     * @type {string}
     * @memberof ListAipWorkflowsRequestBody
     */
    status?: ListAipWorkflowsRequestBodyStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof ListAipWorkflowsRequestBody
     */
    type?: ListAipWorkflowsRequestBodyTypeEnum;
}


/**
 * @export
 */
export const ListAipWorkflowsRequestBodyStatusEnum = {
    Unspecified: 'unspecified',
    InProgress: 'in progress',
    Done: 'done',
    Error: 'error',
    Queued: 'queued',
    Pending: 'pending',
    Canceled: 'canceled'
} as const;
export type ListAipWorkflowsRequestBodyStatusEnum = typeof ListAipWorkflowsRequestBodyStatusEnum[keyof typeof ListAipWorkflowsRequestBodyStatusEnum];

/**
 * @export
 */
export const ListAipWorkflowsRequestBodyTypeEnum = {
    Unspecified: 'unspecified',
    UploadAip: 'upload aip',
    MoveAip: 'move aip',
    DeleteAip: 'delete aip'
} as const;
export type ListAipWorkflowsRequestBodyTypeEnum = typeof ListAipWorkflowsRequestBodyTypeEnum[keyof typeof ListAipWorkflowsRequestBodyTypeEnum];


/**
 * Check if a given object implements the ListAipWorkflowsRequestBody interface.
 */
export function instanceOfListAipWorkflowsRequestBody(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ListAipWorkflowsRequestBodyFromJSON(json: any): ListAipWorkflowsRequestBody {
    return ListAipWorkflowsRequestBodyFromJSONTyped(json, false);
}

export function ListAipWorkflowsRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListAipWorkflowsRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function ListAipWorkflowsRequestBodyToJSON(value?: ListAipWorkflowsRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'type': value.type,
    };
}

