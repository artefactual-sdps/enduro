/* tslint:disable */
/* eslint-disable */
/**
 * Enduro API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AIPStatusUpdatedEvent
 */
export interface AIPStatusUpdatedEvent {
    /**
     * 
     * @type {string}
     * @memberof AIPStatusUpdatedEvent
     */
    status: AIPStatusUpdatedEventStatusEnum;
    /**
     * Identifier of AIP
     * @type {string}
     * @memberof AIPStatusUpdatedEvent
     */
    uuid: string;
}


/**
 * @export
 */
export const AIPStatusUpdatedEventStatusEnum = {
    Unspecified: 'unspecified',
    Stored: 'stored',
    Pending: 'pending',
    Processing: 'processing',
    Deleted: 'deleted',
    Queued: 'queued'
} as const;
export type AIPStatusUpdatedEventStatusEnum = typeof AIPStatusUpdatedEventStatusEnum[keyof typeof AIPStatusUpdatedEventStatusEnum];


/**
 * Check if a given object implements the AIPStatusUpdatedEvent interface.
 */
export function instanceOfAIPStatusUpdatedEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "uuid" in value;

    return isInstance;
}

export function AIPStatusUpdatedEventFromJSON(json: any): AIPStatusUpdatedEvent {
    return AIPStatusUpdatedEventFromJSONTyped(json, false);
}

export function AIPStatusUpdatedEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AIPStatusUpdatedEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'uuid': json['uuid'],
    };
}

export function AIPStatusUpdatedEventToJSON(value?: AIPStatusUpdatedEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'uuid': value.uuid,
    };
}

