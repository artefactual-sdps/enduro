apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      serviceAccountName: sdps
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.4
          command:
            [
              "/opt/keycloak/bin/kc.sh",
              "start-dev",
              "--import-realm",
              "--http-port=7470",
            ]
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: password
          ports:
            - containerPort: 7470
          volumeMounts:
            - name: realm-config
              mountPath: /opt/keycloak/data/import
          resources: {}
      volumes:
        - name: realm-config
          configMap:
            name: keycloak-realm-config
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  selector:
    app: keycloak
  ports:
    - port: 7470
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-secret
type: Opaque
stringData:
  username: keycloak
  password: keycloak123
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm-config
data:
  artefactual-realm.json: |
    {
      "id": "edc1624d-4b30-4f22-a6d0-3a171fe08a6a",
      "realm": "artefactual",
      "enabled": true,
      "users": [
        {
          "username": "admin",
          "email": "admin@example.com",
          "enabled": true,
          "emailVerified": true,
          "firstName": "-",
          "lastName": "-",
          "credentials": [
            {
              "type": "password",
              "value": "admin123"
            }
          ],
          "attributes": {
            "enduro": [
              "*"
            ],
            "minio": [
              "consoleAdmin"
            ]
          }
        },
        {
          "username": "operator",
          "email": "operator@example.com",
          "enabled": true,
          "emailVerified": true,
          "firstName": "-",
          "lastName": "-",
          "credentials": [
            {
              "type": "password",
              "value": "operator123"
            }
          ],
          "attributes": {
            "enduro": [
              "ingest:sips:download",
              "ingest:sips:list",
              "ingest:sips:read",
              "ingest:sips:upload",
              "ingest:sips:workflows:list",
              "storage:locations:list",
              "storage:locations:aips:list",
              "storage:locations:read",
              "storage:aips:deletion:request",
              "storage:aips:download",
              "storage:aips:list",
              "storage:aips:move",
              "storage:aips:read",
              "storage:aips:submit",
              "storage:aips:workflows:list"
            ],
            "minio": [
              "consoleAdmin"
            ]
          }
        },
        {
          "username": "readonly",
          "email": "readonly@example.com",
          "enabled": true,
          "emailVerified": true,
          "firstName": "-",
          "lastName": "-",
          "credentials": [
            {
              "type": "password",
              "value": "readonly123"
            }
          ],
          "attributes": {
            "enduro": [
              "ingest:sips:list",
              "ingest:sips:read",
              "ingest:sips:workflows:list",
              "storage:locations:list",
              "storage:locations:aips:list",
              "storage:locations:read",
              "storage:aips:read"
            ]
          }
        }
      ],
      "clients": [
        {
          "id": "09162191-963a-4de1-bd5f-c3476502ee7d",
          "clientId": "enduro",
          "name": "Enduro",
          "enabled": true,
          "publicClient": true,
          "redirectUris": ["http://localhost:8080/user/signin-callback"],
          "attributes": {
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "http://localhost:8080/user/signout-callback"
          },
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "id": "227b056a-cc39-4209-99b0-bfa929ca892f",
              "name": "access-token-aud",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "config": {
                "included.client.audience": "enduro",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "fa523562-823d-4a8d-9214-e237a20fd599",
          "clientId": "temporal",
          "name": "Temporal",
          "enabled": true,
          "secret": "R0oJNfvLrUiSyHnB9tAATMPcrcW2xRdK",
          "redirectUris": ["http://localhost:7440/auth/sso/callback"],
          "protocol": "openid-connect"
        },
        {
          "id": "414cb0db-7ea3-4f4b-a14a-ed5963fd4d3c",
          "clientId": "minio",
          "name": "MinIO",
          "enabled": true,
          "secret": "K5do3lZeHEzR3ajzCEudH4OGe7KWUmfe",
          "redirectUris": ["http://localhost:7460/oauth_callback"],
          "protocol": "openid-connect"
        },
        {
          "id": "42c7a9e6-d81c-4b3f-aaeb-32de8dea0bf2",
          "clientId": "grafana",
          "name": "Grafana",
          "enabled": true,
          "secret": "wi8sSTRwP5lA2NuogV5bL6GmIyzVF2HP",
          "redirectUris": ["http://localhost:7490/login/generic_oauth"],
          "protocol": "openid-connect",
          "directAccessGrantsEnabled": true
        }
      ],
      "clientScopes": [
        {
          "id": "67ff2631-851b-4f78-bc31-5c244f7b75ae",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "0f26d157-ad6a-4d19-a4c7-4fa626790c11",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "414e3cd5-ab28-4a21-bcd3-2f82deb82866",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "3f8aa381-3540-47fd-a613-4b1558af7b92",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "a9eb9329-e63b-4429-a947-b368b315483c",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "c6ba4b9e-f12a-49c2-8332-63a2fe4da94e",
          "name": "enduro",
          "description": "Custom scope for Enduro attributes",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true"
          },
          "protocolMappers": [
            {
              "id": "7e537fed-d8cb-4c32-858c-97c38e48d302",
              "name": "enduro-scope-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "config": {
                "multivalued": "true",
                "user.attribute": "enduro",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "enduro",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "5a80ac85-4aa1-4c17-8db9-a4ff0c6d505c",
          "name": "minio",
          "description": "Custom scope for MinIO policies",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true"
          },
          "protocolMappers": [
            {
              "id": "d7424a01-3209-40d3-b8a9-cb1058ae8547",
              "name": "minio-scope-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "config": {
                "multivalued": "true",
                "user.attribute": "minio",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "minio",
                "jsonType.label": "String"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "profile",
        "email"
      ],
      "defaultOptionalClientScopes": [
        "enduro",
        "minio"
      ]
    }
