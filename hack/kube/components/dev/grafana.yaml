---
# Source: grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
  namespace: enduro-sdps
---
# Source: grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana
  namespace: enduro-sdps
  labels:
    app.kubernetes.io/name: grafana
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: "YWRtaW4="
---
# Source: grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: enduro-sdps
  labels:
    app.kubernetes.io/name: grafana
data:
  grafana.ini: |
    [analytics]
    reporting_enabled = false
    check_for_updates = true
    check_for_plugin_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = ''
    root_url = http://localhost:7490
    [users]
    default_theme = system
    [dashboards]
    default_home_dashboard_path = /var/lib/grafana/dashboards/home.json
    [auth.generic_oauth]
    enabled = true
    name = Keycloak
    allow_sign_up = true
    client_id = grafana
    client_secret = wi8sSTRwP5lA2NuogV5bL6GmIyzVF2HP
    scopes = openid email profile
    email_attribute_path = email
    login_attribute_path = username
    name_attribute_path = full_name
    auth_url = http://keycloak:7470/realms/artefactual/protocol/openid-connect/auth
    token_url = http://keycloak:7470/realms/artefactual/protocol/openid-connect/token
    api_url = http://keycloak:7470/realms/artefactual/protocol/openid-connect/userinfo
    signout_redirect_url = http://keycloak:7470/realms/artefactual/protocol/openid-connect/logout?post_logout_redirect_uri=http%3A%2F%2Flocalhost:7490%2Flogin/generic_oauth
    role_attribute_path = "'Admin'"
    skip_org_role_sync = false
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      apiVersion: 1
      basicAuth: false
      editable: false
      isDefault: true
      jsonData:
        httpMethod: GET
        tlsSkipVerify: true
      name: Tempo
      orgId: 1
      type: tempo
      uid: tempo
      url: http://grafana-tempo:3200
      version: 1
  default.yaml: |
    apiVersion: 1
    providers:
    - name: Default
      type: file
      options:
        path: /var/lib/grafana/dashboards
  home.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 3,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "tempo",
            "uid": "tempo"
          },
          "description": "",
          "gridPos": {
            "h": 7,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "Howdy!",
            "mode": "markdown"
          },
          "pluginVersion": "11.2.2",
          "targets": [
            {
              "datasource": {
                "type": "tempo",
                "uid": "tempo"
              },
              "limit": 20,
              "queryType": "traceql",
              "refId": "A",
              "tableType": "traces"
            }
          ],
          "title": "Hello World",
          "type": "text"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 2,
          "panels": [],
          "title": "Traces and spans",
          "type": "row"
        },
        {
          "datasource": {
            "default": true,
            "type": "tempo",
            "uid": "tempo"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Trace Service"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 118
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Trace Name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 107
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Start time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 160
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "id": 4,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "11.2.2",
          "targets": [
            {
              "datasource": {
                "type": "tempo",
                "uid": "tempo"
              },
              "limit": 20,
              "query": "{name=\"StartWorkflow:processing-workflow\"}",
              "queryType": "traceql",
              "refId": "A",
              "tableType": "spans"
            }
          ],
          "title": "Processing workflows",
          "type": "table"
        },
        {
          "datasource": {
            "default": true,
            "type": "tempo",
            "uid": "tempo"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Trace Service"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 115
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Trace Name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 109
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Start time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 166
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "id": 3,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "11.2.2",
          "targets": [
            {
              "datasource": {
                "type": "tempo",
                "uid": "tempo"
              },
              "limit": 20,
              "query": "{name=\"api\"}",
              "queryType": "traceql",
              "refId": "A",
              "tableType": "spans"
            }
          ],
          "title": "API requests",
          "type": "table"
        }
      ],
      "refresh": "",
      "schemaVersion": 39,
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Home",
      "uid": "de0u0l0scrri8e",
      "version": 1,
      "weekStart": "monday"
    }
---
# Source: grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana-clusterrole
rules: []
---
# Source: grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana-clusterrolebinding
  labels:
    app.kubernetes.io/name: grafana
subjects:
  - kind: ServiceAccount
    name: grafana
    namespace: enduro-sdps
roleRef:
  kind: ClusterRole
  name: grafana-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: grafana
  namespace: enduro-sdps
  labels:
    app.kubernetes.io/name: grafana
rules: []
---
# Source: grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana
  namespace: enduro-sdps
  labels:
    app.kubernetes.io/name: grafana
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana
subjects:
  - kind: ServiceAccount
    name: grafana
    namespace: enduro-sdps
---
# Source: grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: enduro-sdps
  labels:
    app.kubernetes.io/name: grafana
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
---
# Source: grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: enduro-sdps
  labels:
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
      annotations:
        kubectl.kubernetes.io/default-container: grafana
    spec:
      serviceAccountName: grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      enableServiceLinks: true
      containers:
        - name: grafana
          image: "docker.io/grafana/grafana:11.2.2"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/default.yaml"
              subPath: "default.yaml"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: "datasources.yaml"
            - name: config
              mountPath: "/var/lib/grafana/dashboards/home.json"
              subPath: "home.json"
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
            - name: gossip-tcp
              containerPort: 9094
              protocol: TCP
            - name: gossip-udp
              containerPort: 9094
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: grafana
        - name: storage
          emptyDir: {}
