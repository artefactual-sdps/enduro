apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      serviceAccountName: sdps
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
            - name: MYSQL_DATABASE
              value: enduro
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: mysql-data
              mountPath: /var/lib/mysql
          resources: {}
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-persistentvolumeclaim
        - name: mysql-initdb
          configMap:
            name: mysql-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-persistentvolumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-configmap
data:
  initdb.sh: |
    mysql --socket /var/lib/mysql/mysql.sock -u root -p$MYSQL_ROOT_PASSWORD --execute "
      CREATE DATABASE IF NOT EXISTS enduro_storage;
      GRANT ALL PRIVILEGES ON enduro_storage.* TO '$MYSQL_USER'@'%';
      CREATE DATABASE IF NOT EXISTS temporal;
      GRANT ALL PRIVILEGES ON temporal.* TO '$MYSQL_USER'@'%';
      CREATE DATABASE IF NOT EXISTS temporal_visibility;
      GRANT ALL PRIVILEGES ON temporal_visibility.* TO '$MYSQL_USER'@'%';
    "
