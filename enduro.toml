# This is the configuration file valid for the development environment.

debug = true
debugListen = "127.0.0.1:9001"
verbosity = 2

[temporal]
namespace = "default"
address = "temporal.enduro-sdps:7233"
taskQueue = "global"

[api]
listen = "0.0.0.0:9000"
debug = false
corsOrigin = "http://localhost"

[api.auth]
enabled = true

[api.auth.oidc]
providerURL = "http://dex:5556"
clientID = "enduro"
clientSecret = "ZXhhbXBsZS1hcHAtc2VjcmV0"

[api.auth.ticket.redis]
address = "redis://redis.enduro-sdps:6379"
prefix = "enduro"

[event]
redisAddress = "redis://redis.enduro-sdps:6379"
redisChannel = "enduro-events"

[database]
driver = "mysql"
dsn = "enduro:enduro123@tcp(mysql.enduro-sdps:3306)/enduro"
migrate = true

[watcher.embedded]
name = "dev-minio"
redisAddress = "redis://redis.enduro-sdps:6379"
redisList = "minio-events"
endpoint = "http://minio.enduro-sdps:9000"
pathStyle = true
key = "minio"
secret = "minio123"
region = "us-west-1"
bucket = "sips"
stripTopLevelDir = true

[storage]
enduroAddress = "enduro-internal:9000"

[storage.database]
driver = "mysql"
dsn = "enduro:enduro123@tcp(mysql.enduro-sdps:3306)/enduro_storage"
migrate = true

[storage.internal]
endpoint = "http://minio.enduro-sdps:9000"
pathStyle = true
key = "minio"
secret = "minio123"
region = "us-west-1"
bucket = "aips"

[failedtransfers]
endpoint = "http://minio.enduro-sdps:9000"
pathStyle = true
key = "minio"
secret = "minio123"
region = "us-west-1"
bucket = "failed-transfers"

[failedsips]
endpoint = "http://minio.enduro-sdps:9000"
pathStyle = true
key = "minio"
secret = "minio123"
region = "us-west-1"
bucket = "failed-sips"

# Change the taskqueue setting to your prefered preservation system, by default it is a3m.
[preservation]
taskqueue = "a3m"

[a3m]
address = "127.0.0.1:7000"
shareDir = "/home/a3m/.local/share/a3m/share"

# capacity limits the number of transfers a worker can process at one time
# (default: 1)
capacity = 1

[a3m.processing]
AssignUuidsToDirectories                     = true
ExamineContents                              = true
GenerateTransferStructureReport              = true
DocumentEmptyDirectories                     = true
ExtractPackages                              = true
DeletePackagesAfterExtraction                = true
IdentifyTransfer                             = true
IdentifySubmissionAndMetadata                = true
IdentifyBeforeNormalization                  = true
Normalize                                    = true
TranscribeFiles                              = true
PerformPolicyChecksOnOriginals               = true
PerformPolicyChecksOnPreservationDerivatives = true
AipCompressionLevel                          = 1
AipCompressionAlgorithm                      = 6

[am]
address = ""
user = "" # Secret: set with env var ENDURO_AM_USER.
apiKey = "" # Secret: set with env var ENDURO_AM_APIKEY.
processingConfig = "automated"

# capacity limits the number of transfers a worker can process at one time
# (default: 1)
capacity = 1

# pollInterval is the time to wait between AM polling requests in a string
# format compatible with https://pkg.go.dev/time#ParseDuration (Default: 10s).
pollInterval = "10s"

# transferDeadline is the maximum time to wait for a transfer to complete in a
# format compatible with https://pkg.go.dev/time#ParseDuration. Set to "0" for
# no time limit.
transferDeadline = "1h"

[am.sftp]
host = "" # The Archivematica Storage Service hostname.
port = ""
user = ""
knownHostsFile = ""
remoteDir = "/transfer_source"

[am.sftp.privateKey]
path = ""
passphrase = "" # Secret: set (if required) with env var ENDURO_AM_SFTP_PRIVATEKEY_PASSPHRASE.

[upload]
endpoint = "http://minio.enduro-sdps:9000"
pathStyle = true
key = "minio"
secret = "minio123"
region = "us-west-1"
bucket = "sips"
