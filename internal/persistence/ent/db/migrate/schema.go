// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SipColumns holds the columns for the "sip" table.
	SipColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString, Size: 2048},
		{Name: "aip_id", Type: field.TypeUUID, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"error", "failed", "queued", "processing", "pending", "ingested"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "failed_as", Type: field.TypeEnum, Nullable: true, Enums: []string{"SIP", "PIP"}},
		{Name: "failed_key", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "uploader_id", Type: field.TypeInt, Nullable: true},
	}
	// SipTable holds the schema information for the "sip" table.
	SipTable = &schema.Table{
		Name:       "sip",
		Columns:    SipColumns,
		PrimaryKey: []*schema.Column{SipColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sip_user_uploaded_sips",
				Columns:    []*schema.Column{SipColumns[10]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "sip_name_idx",
				Unique:  false,
				Columns: []*schema.Column{SipColumns[2]},
				Annotation: &entsql.IndexAnnotation{
					Prefix: 50,
				},
			},
			{
				Name:    "sip_aip_id_idx",
				Unique:  false,
				Columns: []*schema.Column{SipColumns[3]},
			},
			{
				Name:    "sip_status_idx",
				Unique:  false,
				Columns: []*schema.Column{SipColumns[4]},
			},
			{
				Name:    "sip_created_at_idx",
				Unique:  false,
				Columns: []*schema.Column{SipColumns[5]},
			},
			{
				Name:    "sip_started_at_idx",
				Unique:  false,
				Columns: []*schema.Column{SipColumns[6]},
			},
			{
				Name:    "sip_uploader_id_idx",
				Unique:  false,
				Columns: []*schema.Column{SipColumns[10]},
			},
		},
	}
	// TaskColumns holds the columns for the "task" table.
	TaskColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString, Size: 2048},
		{Name: "status", Type: field.TypeInt8},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "note", Type: field.TypeString, Size: 2147483647},
		{Name: "workflow_id", Type: field.TypeInt},
	}
	// TaskTable holds the schema information for the "task" table.
	TaskTable = &schema.Table{
		Name:       "task",
		Columns:    TaskColumns,
		PrimaryKey: []*schema.Column{TaskColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_workflow_tasks",
				Columns:    []*schema.Column{TaskColumns[7]},
				RefColumns: []*schema.Column{WorkflowColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "oidc_iss", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "oidc_sub", Type: field.TypeString, Nullable: true, Size: 1024},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_oidc_iss_idx",
				Unique:  false,
				Columns: []*schema.Column{UserColumns[5]},
				Annotation: &entsql.IndexAnnotation{
					Prefix: 50,
				},
			},
			{
				Name:    "user_oidc_sub_idx",
				Unique:  false,
				Columns: []*schema.Column{UserColumns[6]},
				Annotation: &entsql.IndexAnnotation{
					Prefix: 50,
				},
			},
		},
	}
	// WorkflowColumns holds the columns for the "workflow" table.
	WorkflowColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "temporal_id", Type: field.TypeString, Size: 255},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"create aip", "create and review aip"}},
		{Name: "status", Type: field.TypeInt8},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "sip_id", Type: field.TypeInt},
	}
	// WorkflowTable holds the schema information for the "workflow" table.
	WorkflowTable = &schema.Table{
		Name:       "workflow",
		Columns:    WorkflowColumns,
		PrimaryKey: []*schema.Column{WorkflowColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_sip_workflows",
				Columns:    []*schema.Column{WorkflowColumns[7]},
				RefColumns: []*schema.Column{SipColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SipTable,
		TaskTable,
		UserTable,
		WorkflowTable,
	}
)

func init() {
	SipTable.ForeignKeys[0].RefTable = UserTable
	SipTable.Annotation = &entsql.Annotation{
		Table: "sip",
	}
	TaskTable.ForeignKeys[0].RefTable = WorkflowTable
	TaskTable.Annotation = &entsql.Annotation{
		Table: "task",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
	WorkflowTable.ForeignKeys[0].RefTable = SipTable
	WorkflowTable.Annotation = &entsql.Annotation{
		Table: "workflow",
	}
}
