openapi: 3.0.3
info:
    title: Enduro API
    version: 0.0.1
servers:
    - url: http://localhost:9000
paths:
    /about:
        get:
            tags:
                - about
            summary: about about
            description: Get information about the system
            operationId: about#about
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EnduroAbout'
                            example:
                                poststorage:
                                    - task_queue: abc123
                                      workflow_name: abc123
                                preprocessing:
                                    enabled: false
                                    task_queue: abc123
                                    workflow_name: abc123
                                preservation_system: abc123
                                version: abc123
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
            security:
                - jwt_header_Authorization: []
    /ingest/monitor:
        get:
            tags:
                - ingest
            summary: monitor ingest
            description: Obtain access to the /monitor WebSocket
            operationId: ingest#monitor
            parameters:
                - name: enduro-ws-ticket
                  in: cookie
                  allowEmptyValue: true
                  schema:
                    type: string
                    example: abc123
                  example: abc123
            responses:
                "101":
                    description: Switching Protocols response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MonitorEvent'
                            example:
                                event:
                                    Type: sip_created_event
                                    Value: '{"id":1,"item":{"aip_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","completed_at":"1970-01-01T00:00:01Z","created_at":"1970-01-01T00:00:01Z","id":1,"location_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","name":"abc123","run_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","started_at":"1970-01-01T00:00:01Z","status":"in progress","workflow_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"}}'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "500":
                    description: 'not_available: Internal Server Error response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - ingest
            summary: monitor_request ingest
            description: Request access to the /monitor WebSocket
            operationId: ingest#monitor_request
            responses:
                "200":
                    description: OK response.
                    headers:
                        Set-Cookie:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "500":
                    description: 'not_available: Internal Server Error response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - ingest:sips:list
                    - ingest:sips:actions:list
                    - ingest:sips:move
                    - ingest:sips:read
                    - ingest:sips:review
                    - ingest:sips:upload
    /ingest/sips:
        get:
            tags:
                - ingest
            summary: list_sips ingest
            description: List all ingested SIPs
            operationId: ingest#list_sips
            parameters:
                - name: name
                  in: query
                  allowEmptyValue: true
                  schema:
                    type: string
                    example: abc123
                  example: abc123
                - name: aip_id
                  in: query
                  description: Identifier of AIP
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                - name: earliest_created_time
                  in: query
                  allowEmptyValue: true
                  schema:
                    type: string
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                  example: "1970-01-01T00:00:01Z"
                - name: latest_created_time
                  in: query
                  allowEmptyValue: true
                  schema:
                    type: string
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                  example: "1970-01-01T00:00:01Z"
                - name: location_id
                  in: query
                  description: Identifier of storage location
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Identifier of storage location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                - name: status
                  in: query
                  allowEmptyValue: true
                  schema:
                    type: string
                    example: in progress
                    enum:
                        - new
                        - in progress
                        - done
                        - error
                        - unknown
                        - queued
                        - abandoned
                        - pending
                  example: in progress
                - name: limit
                  in: query
                  description: Limit number of results to return
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Limit number of results to return
                    example: 1
                    format: int64
                  example: 1
                - name: offset
                  in: query
                  description: Offset from the beginning of the found set
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Offset from the beginning of the found set
                    example: 1
                    format: int64
                  example: 1
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SIPs'
                            example:
                                items:
                                    - aip_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                      completed_at: "1970-01-01T00:00:01Z"
                                      created_at: "1970-01-01T00:00:01Z"
                                      id: 1
                                      location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                      name: abc123
                                      run_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                      started_at: "1970-01-01T00:00:01Z"
                                      status: in progress
                                      workflow_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                page:
                                    limit: 1
                                    offset: 1
                                    total: 1
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
            security:
                - jwt_header_Authorization:
                    - ingest:sips:list
    /ingest/sips/{id}:
        get:
            tags:
                - ingest
            summary: show_sip ingest
            description: Show SIP by ID
            operationId: ingest#show_sip
            parameters:
                - name: id
                  in: path
                  description: Identifier of SIP to show
                  required: true
                  schema:
                    type: integer
                    description: Identifier of SIP to show
                    example: 1
                    format: int64
                  example: 1
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EnduroIngestSip'
                            example:
                                aip_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                completed_at: "1970-01-01T00:00:01Z"
                                created_at: "1970-01-01T00:00:01Z"
                                id: 1
                                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                name: abc123
                                run_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                started_at: "1970-01-01T00:00:01Z"
                                status: in progress
                                workflow_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: SIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SIPNotFound'
                            example:
                                id: 1
                                message: abc123
                "409":
                    description: 'not_available: Conflict response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - ingest:sips:read
    /ingest/sips/{id}/confirm:
        post:
            tags:
                - ingest
            summary: confirm_sip ingest
            description: Signal the SIP has been reviewed and accepted
            operationId: ingest#confirm_sip
            parameters:
                - name: id
                  in: path
                  description: Identifier of SIP to look up
                  required: true
                  schema:
                    type: integer
                    description: Identifier of SIP to look up
                    example: 1
                    format: int64
                  example: 1
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfirmSipRequestBody'
                        example:
                            location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "202":
                    description: Accepted response.
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: SIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SIPNotFound'
                            example:
                                id: 1
                                message: abc123
                "409":
                    description: 'not_available: Conflict response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - ingest:sips:review
    /ingest/sips/{id}/move:
        get:
            tags:
                - ingest
            summary: move_sip_status ingest
            description: Retrieve the status of a permanent storage location move of the SIP
            operationId: ingest#move_sip_status
            parameters:
                - name: id
                  in: path
                  description: Identifier of SIP to move
                  required: true
                  schema:
                    type: integer
                    description: Identifier of SIP to move
                    example: 1
                    format: int64
                  example: 1
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MoveStatusResult'
                            example:
                                done: false
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: SIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SIPNotFound'
                            example:
                                id: 1
                                message: abc123
                "424":
                    description: 'failed_dependency: Failed Dependency response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - ingest:sips:move
        post:
            tags:
                - ingest
            summary: move_sip ingest
            description: Move a SIP to a permanent storage location
            operationId: ingest#move_sip
            parameters:
                - name: id
                  in: path
                  description: Identifier of SIP to move
                  required: true
                  schema:
                    type: integer
                    description: Identifier of SIP to move
                    example: 1
                    format: int64
                  example: 1
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfirmSipRequestBody'
                        example:
                            location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "202":
                    description: Accepted response.
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: SIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SIPNotFound'
                            example:
                                id: 1
                                message: abc123
                "409":
                    description: 'not_available: Conflict response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - ingest:sips:move
    /ingest/sips/{id}/preservation-actions:
        get:
            tags:
                - ingest
            summary: list_sip_preservation_actions ingest
            description: List all preservation actions for a SIP
            operationId: ingest#list_sip_preservation_actions
            parameters:
                - name: id
                  in: path
                  description: Identifier of SIP to look up
                  required: true
                  schema:
                    type: integer
                    description: Identifier of SIP to look up
                    example: 1
                    format: int64
                  example: 1
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SIPPreservationActions'
                            example:
                                actions:
                                    - completed_at: "1970-01-01T00:00:01Z"
                                      id: 1
                                      sip_id: 1
                                      started_at: "1970-01-01T00:00:01Z"
                                      status: in progress
                                      tasks:
                                        - completed_at: "1970-01-01T00:00:01Z"
                                          id: 1
                                          name: abc123
                                          note: abc123
                                          preservation_action_id: 1
                                          started_at: "1970-01-01T00:00:01Z"
                                          status: in progress
                                          task_id: abc123
                                      type: create aip
                                      workflow_id: abc123
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: SIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SIPNotFound'
                            example:
                                id: 1
                                message: abc123
            security:
                - jwt_header_Authorization:
                    - ingest:sips:actions:list
    /ingest/sips/{id}/reject:
        post:
            tags:
                - ingest
            summary: reject_sip ingest
            description: Signal the SIP has been reviewed and rejected
            operationId: ingest#reject_sip
            parameters:
                - name: id
                  in: path
                  description: Identifier of SIP to look up
                  required: true
                  schema:
                    type: integer
                    description: Identifier of SIP to look up
                    example: 1
                    format: int64
                  example: 1
            responses:
                "202":
                    description: Accepted response.
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: SIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SIPNotFound'
                            example:
                                id: 1
                                message: abc123
                "409":
                    description: 'not_available: Conflict response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - ingest:sips:review
    /ingest/sips/upload:
        post:
            tags:
                - ingest
            summary: upload_sip ingest
            description: Upload a SIP to trigger an ingest workflow
            operationId: ingest#upload_sip
            parameters:
                - name: Content-Type
                  in: header
                  description: Content-Type header, must define value for multipart boundary.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Content-Type header, must define value for multipart boundary.
                    default: multipart/form-data; boundary=goa
                    example: multipart/form-data; boundary=goa
                    pattern: multipart/[^;]+; boundary=.+
                  example: multipart/form-data; boundary=goa
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'invalid_multipart_request: Error returned when the request body is not a valid multipart content.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "500":
                    description: 'internal_error: Fault while processing upload.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - ingest:sips:upload
    /storage/aips:
        post:
            tags:
                - storage
            summary: create_aip storage
            description: Create a new AIP
            operationId: storage#create_aip
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAipRequestBody'
                        example:
                            location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                            name: abc123
                            object_key: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                            status: in_review
                            uuid: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIP'
                            example:
                                created_at: "1970-01-01T00:00:01Z"
                                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                name: abc123
                                object_key: abc123
                                status: in_review
                                uuid: abc123
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
            security:
                - jwt_header_Authorization:
                    - storage:aips:create
    /storage/aips/{uuid}:
        get:
            tags:
                - storage
            summary: show_aip storage
            description: Show AIP by AIPID
            operationId: storage#show_aip
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of AIP
                  required: true
                  schema:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIP'
                            example:
                                created_at: "1970-01-01T00:00:01Z"
                                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                name: abc123
                                object_key: abc123
                                status: in_review
                                uuid: abc123
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: AIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIPNotFound'
                            example:
                                message: abc123
                                uuid: abc123
            security:
                - jwt_header_Authorization:
                    - storage:aips:read
    /storage/aips/{uuid}/download:
        get:
            tags:
                - storage
            summary: download_aip storage
            description: Download AIP by AIPID
            operationId: storage#download_aip
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of AIP
                  required: true
                  schema:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: string
                                example:
                                    - 97
                                    - 98
                                    - 99
                                    - 49
                                    - 50
                                    - 51
                                format: binary
                            example:
                                - 97
                                - 98
                                - 99
                                - 49
                                - 50
                                - 51
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: AIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIPNotFound'
                            example:
                                message: abc123
                                uuid: abc123
            security:
                - jwt_header_Authorization:
                    - storage:aips:download
    /storage/aips/{uuid}/reject:
        post:
            tags:
                - storage
            summary: reject_aip storage
            description: Reject an AIP
            operationId: storage#reject_aip
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of AIP
                  required: true
                  schema:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "202":
                    description: Accepted response.
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: AIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIPNotFound'
                            example:
                                message: abc123
                                uuid: abc123
                "409":
                    description: 'not_available: Conflict response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - storage:aips:review
    /storage/aips/{uuid}/store:
        get:
            tags:
                - storage
            summary: move_aip_status storage
            description: Retrieve the status of a permanent storage location move of the AIP
            operationId: storage#move_aip_status
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of AIP
                  required: true
                  schema:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MoveStatusResult'
                            example:
                                done: false
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: AIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIPNotFound'
                            example:
                                message: abc123
                                uuid: abc123
                "424":
                    description: 'failed_dependency: Failed Dependency response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - storage:aips:move
        post:
            tags:
                - storage
            summary: move_aip storage
            description: Move an AIP to a permanent storage location
            operationId: storage#move_aip
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of AIP
                  required: true
                  schema:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfirmSipRequestBody'
                        example:
                            location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "202":
                    description: Accepted response.
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: AIP not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIPNotFound'
                            example:
                                message: abc123
                                uuid: abc123
                "409":
                    description: 'not_available: Conflict response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - storage:aips:move
    /storage/aips/{uuid}/submit:
        post:
            tags:
                - storage
            summary: submit_aip storage
            description: Start the submission of an AIP
            operationId: storage#submit_aip
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of AIP
                  required: true
                  schema:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SubmitAipRequestBody'
                        example:
                            name: abc123
            responses:
                "202":
                    description: Accepted response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubmitAIPResult'
                            example:
                                url: abc123
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "409":
                    description: 'not_available: Conflict response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - storage:aips:submit
    /storage/aips/{uuid}/update:
        post:
            tags:
                - storage
            summary: update_aip storage
            description: Signal that an AIP submission is complete
            operationId: storage#update_aip
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of AIP
                  required: true
                  schema:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "202":
                    description: Accepted response.
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "409":
                    description: 'not_available: Conflict response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
            security:
                - jwt_header_Authorization:
                    - storage:aips:submit
    /storage/locations:
        get:
            tags:
                - storage
            summary: list_locations storage
            description: List locations
            operationId: storage#list_locations
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LocationResponseCollection'
                            example:
                                - created_at: "1970-01-01T00:00:01Z"
                                  description: abc123
                                  name: abc123
                                  purpose: aip_store
                                  source: minio
                                  uuid: abc123
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
            security:
                - jwt_header_Authorization:
                    - storage:locations:list
        post:
            tags:
                - storage
            summary: create_location storage
            description: Create a storage location
            operationId: storage#create_location
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateLocationRequestBody'
                        example:
                            config:
                                Type: s3
                                Value: '{"bucket":"abc123","endpoint":"abc123","key":"abc123","path_style":false,"profile":"abc123","region":"abc123","secret":"abc123","token":"abc123"}'
                            description: abc123
                            name: abc123
                            purpose: aip_store
                            source: minio
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLocationResult'
                            example:
                                uuid: abc123
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
            security:
                - jwt_header_Authorization:
                    - storage:locations:create
    /storage/locations/{uuid}:
        get:
            tags:
                - storage
            summary: show_location storage
            description: Show location by UUID
            operationId: storage#show_location
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of location
                  required: true
                  schema:
                    type: string
                    description: Identifier of location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Location'
                            example:
                                config:
                                    Type: s3
                                    Value: '{"bucket":"abc123","endpoint":"abc123","key":"abc123","path_style":false,"profile":"abc123","region":"abc123","secret":"abc123","token":"abc123"}'
                                created_at: "1970-01-01T00:00:01Z"
                                description: abc123
                                name: abc123
                                purpose: aip_store
                                source: minio
                                uuid: abc123
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: Storage location not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIPNotFound'
                            example:
                                message: abc123
                                uuid: abc123
            security:
                - jwt_header_Authorization:
                    - storage:locations:read
    /storage/locations/{uuid}/aips:
        get:
            tags:
                - storage
            summary: list_location_aips storage
            description: List all the AIPs stored in the location with UUID
            operationId: storage#list_location_aips
            parameters:
                - name: uuid
                  in: path
                  description: Identifier of location
                  required: true
                  schema:
                    type: string
                    description: Identifier of location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                  example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIPResponseCollection'
                            example:
                                - created_at: "1970-01-01T00:00:01Z"
                                  location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                                  name: abc123
                                  object_key: abc123
                                  status: in_review
                                  uuid: abc123
                "400":
                    description: 'not_valid: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "403":
                    description: 'forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: abc123
                            example: abc123
                "404":
                    description: 'not_found: Storage location not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AIPNotFound'
                            example:
                                message: abc123
                                uuid: abc123
            security:
                - jwt_header_Authorization:
                    - storage:locations:aips:list
    /swagger/swagger.json:
        get:
            tags:
                - swagger
            summary: Download gen/http/openapi.json
            description: JSON document containing the API swagger definition.
            operationId: swagger#/swagger/swagger.json
            responses:
                "200":
                    description: File downloaded
            security:
                - jwt_header_: []
components:
    schemas:
        AIP:
            type: object
            properties:
                created_at:
                    type: string
                    description: Creation datetime
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                location_id:
                    type: string
                    description: Identifier of storage location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                name:
                    type: string
                    example: abc123
                object_key:
                    type: string
                    example: abc123
                status:
                    type: string
                    description: Status of the AIP
                    default: unspecified
                    example: in_review
                    enum:
                        - unspecified
                        - in_review
                        - rejected
                        - stored
                        - moving
                uuid:
                    type: string
                    example: abc123
            example:
                created_at: "1970-01-01T00:00:01Z"
                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                name: abc123
                object_key: abc123
                status: in_review
                uuid: abc123
            required:
                - name
                - uuid
                - status
                - object_key
                - created_at
        AIPNotFound:
            type: object
            properties:
                message:
                    type: string
                    description: Message of error
                    example: abc123
                uuid:
                    type: string
                    description: Identifier of missing AIP
                    example: abc123
            description: AIP not found
            example:
                message: abc123
                uuid: abc123
            required:
                - message
                - uuid
        AIPResponse:
            type: object
            properties:
                created_at:
                    type: string
                    description: Creation datetime
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                location_id:
                    type: string
                    description: Identifier of storage location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                name:
                    type: string
                    example: abc123
                object_key:
                    type: string
                    example: abc123
                status:
                    type: string
                    description: Status of the AIP
                    default: unspecified
                    example: in_review
                    enum:
                        - unspecified
                        - in_review
                        - rejected
                        - stored
                        - moving
                uuid:
                    type: string
                    example: abc123
            description: An AIP describes an AIP retrieved by the storage service. (default view)
            example:
                created_at: "1970-01-01T00:00:01Z"
                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                name: abc123
                object_key: abc123
                status: in_review
                uuid: abc123
            required:
                - name
                - uuid
                - status
                - object_key
                - created_at
        AIPResponseCollection:
            type: array
            items:
                $ref: '#/components/schemas/AIPResponse'
            description: list_location_aips_response_body is the result type for an array of AIPResponse (default view)
            example:
                - created_at: "1970-01-01T00:00:01Z"
                  location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                  name: abc123
                  object_key: abc123
                  status: in_review
                  uuid: abc123
        ConfirmSipRequestBody:
            type: object
            properties:
                location_id:
                    type: string
                    description: Identifier of storage location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            example:
                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            required:
                - location_id
        CreateAipRequestBody:
            type: object
            properties:
                location_id:
                    type: string
                    description: Identifier of the AIP's storage location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                name:
                    type: string
                    description: Name of the AIP
                    example: abc123
                object_key:
                    type: string
                    description: ObjectKey of the AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                status:
                    type: string
                    description: Status of the the AIP
                    default: unspecified
                    example: in_review
                    enum:
                        - unspecified
                        - in_review
                        - rejected
                        - stored
                        - moving
                uuid:
                    type: string
                    description: Identifier of the AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
            example:
                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                name: abc123
                object_key: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                status: in_review
                uuid: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            required:
                - uuid
                - name
                - object_key
        CreateLocationRequestBody:
            type: object
            properties:
                config:
                    type: object
                    properties:
                        Type:
                            type: string
                            description: |-
                                Union type name, one of:
                                - "amss"
                                - "s3"
                                - "sftp"
                                - "url"
                            example: s3
                            enum:
                                - amss
                                - s3
                                - sftp
                                - url
                        Value:
                            type: string
                            description: JSON encoded union value
                            example: '{"bucket":"abc123","endpoint":"abc123","key":"abc123","path_style":false,"profile":"abc123","region":"abc123","secret":"abc123","token":"abc123"}'
                    example:
                        Type: s3
                        Value: '{"bucket":"abc123","endpoint":"abc123","key":"abc123","path_style":false,"profile":"abc123","region":"abc123","secret":"abc123","token":"abc123"}'
                    required:
                        - Type
                        - Value
                description:
                    type: string
                    example: abc123
                name:
                    type: string
                    example: abc123
                purpose:
                    type: string
                    example: aip_store
                    enum:
                        - unspecified
                        - aip_store
                source:
                    type: string
                    example: minio
                    enum:
                        - unspecified
                        - minio
                        - sftp
                        - amss
            example:
                config:
                    Type: s3
                    Value: '{"bucket":"abc123","endpoint":"abc123","key":"abc123","path_style":false,"profile":"abc123","region":"abc123","secret":"abc123","token":"abc123"}'
                description: abc123
                name: abc123
                purpose: aip_store
                source: minio
            required:
                - name
                - source
                - purpose
        CreateLocationResult:
            type: object
            properties:
                uuid:
                    type: string
                    example: abc123
            example:
                uuid: abc123
            required:
                - uuid
        EnduroAbout:
            type: object
            properties:
                poststorage:
                    $ref: '#/components/schemas/EnduroPoststorageCollection'
                preprocessing:
                    $ref: '#/components/schemas/EnduroPreprocessing'
                preservation_system:
                    type: string
                    example: abc123
                version:
                    type: string
                    example: abc123
            example:
                poststorage:
                    - task_queue: abc123
                      workflow_name: abc123
                preprocessing:
                    enabled: false
                    task_queue: abc123
                    workflow_name: abc123
                preservation_system: abc123
                version: abc123
            required:
                - version
                - preservation_system
                - preprocessing
        EnduroIngestSip:
            type: object
            properties:
                aip_id:
                    type: string
                    description: Identifier of AIP
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                completed_at:
                    type: string
                    description: Completion datetime
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                created_at:
                    type: string
                    description: Creation datetime
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                id:
                    type: integer
                    description: Identifier of SIP
                    example: 1
                    format: int64
                location_id:
                    type: string
                    description: Identifier of storage location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                name:
                    type: string
                    description: Name of the SIP
                    example: abc123
                run_id:
                    type: string
                    description: Identifier of latest processing workflow run
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
                started_at:
                    type: string
                    description: Start datetime
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                status:
                    type: string
                    description: Status of the SIP
                    default: new
                    example: in progress
                    enum:
                        - new
                        - in progress
                        - done
                        - error
                        - unknown
                        - queued
                        - abandoned
                        - pending
                workflow_id:
                    type: string
                    description: Identifier of processing workflow
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    format: uuid
            description: SIP describes an ingest SIP type.
            example:
                aip_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                completed_at: "1970-01-01T00:00:01Z"
                created_at: "1970-01-01T00:00:01Z"
                id: 1
                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                name: abc123
                run_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                started_at: "1970-01-01T00:00:01Z"
                status: in progress
                workflow_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            required:
                - id
                - status
                - created_at
        EnduroIngestSipPreservationAction:
            type: object
            properties:
                completed_at:
                    type: string
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                id:
                    type: integer
                    example: 1
                    format: int64
                sip_id:
                    type: integer
                    example: 1
                    format: int64
                started_at:
                    type: string
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                status:
                    type: string
                    example: in progress
                    enum:
                        - unspecified
                        - in progress
                        - done
                        - error
                        - queued
                        - pending
                tasks:
                    $ref: '#/components/schemas/SIPPreservationTaskCollection'
                type:
                    type: string
                    example: create aip
                    enum:
                        - unspecified
                        - create aip
                        - create and review aip
                        - move package
                workflow_id:
                    type: string
                    example: abc123
            description: SIPPreservationAction describes a preservation action of a SIP.
            example:
                completed_at: "1970-01-01T00:00:01Z"
                id: 1
                sip_id: 1
                started_at: "1970-01-01T00:00:01Z"
                status: in progress
                tasks:
                    - completed_at: "1970-01-01T00:00:01Z"
                      id: 1
                      name: abc123
                      note: abc123
                      preservation_action_id: 1
                      started_at: "1970-01-01T00:00:01Z"
                      status: in progress
                      task_id: abc123
                type: create aip
                workflow_id: abc123
            required:
                - id
                - workflow_id
                - type
                - status
                - started_at
        EnduroIngestSipPreservationTask:
            type: object
            properties:
                completed_at:
                    type: string
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                id:
                    type: integer
                    example: 1
                    format: int64
                name:
                    type: string
                    example: abc123
                note:
                    type: string
                    example: abc123
                preservation_action_id:
                    type: integer
                    example: 1
                    format: int64
                started_at:
                    type: string
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                status:
                    type: string
                    example: in progress
                    enum:
                        - unspecified
                        - in progress
                        - done
                        - error
                        - queued
                        - pending
                task_id:
                    type: string
                    example: abc123
            description: SIPPreservationTask describes a SIP preservation action task.
            example:
                completed_at: "1970-01-01T00:00:01Z"
                id: 1
                name: abc123
                note: abc123
                preservation_action_id: 1
                started_at: "1970-01-01T00:00:01Z"
                status: in progress
                task_id: abc123
            required:
                - id
                - task_id
                - name
                - status
                - started_at
        EnduroPage:
            type: object
            properties:
                limit:
                    type: integer
                    description: Maximum items per page
                    example: 1
                    format: int64
                offset:
                    type: integer
                    description: Offset from first result to start of page
                    example: 1
                    format: int64
                total:
                    type: integer
                    description: Total result count before paging
                    example: 1
                    format: int64
            description: Page represents a subset of search results.
            example:
                limit: 1
                offset: 1
                total: 1
            required:
                - limit
                - offset
                - total
        EnduroPoststorage:
            type: object
            properties:
                task_queue:
                    type: string
                    example: abc123
                workflow_name:
                    type: string
                    example: abc123
            example:
                task_queue: abc123
                workflow_name: abc123
            required:
                - workflow_name
                - task_queue
        EnduroPoststorageCollection:
            type: array
            items:
                $ref: '#/components/schemas/EnduroPoststorage'
            example:
                - task_queue: abc123
                  workflow_name: abc123
        EnduroPreprocessing:
            type: object
            properties:
                enabled:
                    type: boolean
                    example: false
                task_queue:
                    type: string
                    example: abc123
                workflow_name:
                    type: string
                    example: abc123
            example:
                enabled: false
                task_queue: abc123
                workflow_name: abc123
            required:
                - enabled
                - workflow_name
                - task_queue
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: false
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: false
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: false
            example:
                fault: false
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: false
                timeout: false
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        Location:
            type: object
            properties:
                config:
                    type: object
                    properties:
                        Type:
                            type: string
                            description: |-
                                Union type name, one of:
                                - "amss"
                                - "s3"
                                - "sftp"
                                - "url"
                            example: s3
                            enum:
                                - amss
                                - s3
                                - sftp
                                - url
                        Value:
                            type: string
                            description: JSON encoded union value
                            example: '{"bucket":"abc123","endpoint":"abc123","key":"abc123","path_style":false,"profile":"abc123","region":"abc123","secret":"abc123","token":"abc123"}'
                    example:
                        Type: s3
                        Value: '{"bucket":"abc123","endpoint":"abc123","key":"abc123","path_style":false,"profile":"abc123","region":"abc123","secret":"abc123","token":"abc123"}'
                    required:
                        - Type
                        - Value
                created_at:
                    type: string
                    description: Creation datetime
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                description:
                    type: string
                    description: Description of the location
                    example: abc123
                name:
                    type: string
                    description: Name of location
                    example: abc123
                purpose:
                    type: string
                    description: Purpose of the location
                    default: unspecified
                    example: aip_store
                    enum:
                        - unspecified
                        - aip_store
                source:
                    type: string
                    description: Data source of the location
                    default: unspecified
                    example: minio
                    enum:
                        - unspecified
                        - minio
                        - sftp
                        - amss
                uuid:
                    type: string
                    example: abc123
            example:
                config:
                    Type: s3
                    Value: '{"bucket":"abc123","endpoint":"abc123","key":"abc123","path_style":false,"profile":"abc123","region":"abc123","secret":"abc123","token":"abc123"}'
                created_at: "1970-01-01T00:00:01Z"
                description: abc123
                name: abc123
                purpose: aip_store
                source: minio
                uuid: abc123
            required:
                - name
                - source
                - purpose
                - uuid
                - created_at
        LocationResponse:
            type: object
            properties:
                created_at:
                    type: string
                    description: Creation datetime
                    example: "1970-01-01T00:00:01Z"
                    format: date-time
                description:
                    type: string
                    description: Description of the location
                    example: abc123
                name:
                    type: string
                    description: Name of location
                    example: abc123
                purpose:
                    type: string
                    description: Purpose of the location
                    default: unspecified
                    example: aip_store
                    enum:
                        - unspecified
                        - aip_store
                source:
                    type: string
                    description: Data source of the location
                    default: unspecified
                    example: minio
                    enum:
                        - unspecified
                        - minio
                        - sftp
                        - amss
                uuid:
                    type: string
                    example: abc123
            description: A Location describes a location retrieved by the storage service. (default view)
            example:
                created_at: "1970-01-01T00:00:01Z"
                description: abc123
                name: abc123
                purpose: aip_store
                source: minio
                uuid: abc123
            required:
                - name
                - source
                - purpose
                - uuid
                - created_at
        LocationResponseCollection:
            type: array
            items:
                $ref: '#/components/schemas/LocationResponse'
            description: list_locations_response_body is the result type for an array of LocationResponse (default view)
            example:
                - created_at: "1970-01-01T00:00:01Z"
                  description: abc123
                  name: abc123
                  purpose: aip_store
                  source: minio
                  uuid: abc123
        MonitorEvent:
            type: object
            properties:
                event:
                    type: object
                    properties:
                        Type:
                            type: string
                            description: |-
                                Union type name, one of:
                                - "monitor_ping_event"
                                - "sip_created_event"
                                - "sip_updated_event"
                                - "sip_status_updated_event"
                                - "sip_location_updated_event"
                                - "sip_preservation_action_created_event"
                                - "sip_preservation_action_updated_event"
                                - "sip_preservation_task_created_event"
                                - "sip_preservation_task_updated_event"
                            example: sip_created_event
                            enum:
                                - monitor_ping_event
                                - sip_created_event
                                - sip_updated_event
                                - sip_status_updated_event
                                - sip_location_updated_event
                                - sip_preservation_action_created_event
                                - sip_preservation_action_updated_event
                                - sip_preservation_task_created_event
                                - sip_preservation_task_updated_event
                        Value:
                            type: string
                            description: JSON encoded union value
                            example: '{"id":1,"item":{"aip_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","completed_at":"1970-01-01T00:00:01Z","created_at":"1970-01-01T00:00:01Z","id":1,"location_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","name":"abc123","run_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","started_at":"1970-01-01T00:00:01Z","status":"in progress","workflow_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"}}'
                    example:
                        Type: sip_created_event
                        Value: '{"id":1,"item":{"aip_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","completed_at":"1970-01-01T00:00:01Z","created_at":"1970-01-01T00:00:01Z","id":1,"location_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","name":"abc123","run_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","started_at":"1970-01-01T00:00:01Z","status":"in progress","workflow_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"}}'
                    required:
                        - Type
                        - Value
            example:
                event:
                    Type: sip_created_event
                    Value: '{"id":1,"item":{"aip_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","completed_at":"1970-01-01T00:00:01Z","created_at":"1970-01-01T00:00:01Z","id":1,"location_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","name":"abc123","run_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5","started_at":"1970-01-01T00:00:01Z","status":"in progress","workflow_id":"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"}}'
        MonitorPingEvent:
            type: object
            properties:
                message:
                    type: string
                    example: abc123
            example:
                message: abc123
        MoveStatusResult:
            type: object
            properties:
                done:
                    type: boolean
                    example: false
            example:
                done: false
            required:
                - done
        SIPCollection:
            type: array
            items:
                $ref: '#/components/schemas/EnduroIngestSip'
            example:
                - aip_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                  completed_at: "1970-01-01T00:00:01Z"
                  created_at: "1970-01-01T00:00:01Z"
                  id: 1
                  location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                  name: abc123
                  run_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                  started_at: "1970-01-01T00:00:01Z"
                  status: in progress
                  workflow_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
        SIPCreatedEvent:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of SIP
                    example: 1
                    format: int64
                item:
                    $ref: '#/components/schemas/EnduroIngestSip'
            example:
                id: 1
                item:
                    aip_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    completed_at: "1970-01-01T00:00:01Z"
                    created_at: "1970-01-01T00:00:01Z"
                    id: 1
                    location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    name: abc123
                    run_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    started_at: "1970-01-01T00:00:01Z"
                    status: in progress
                    workflow_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            required:
                - id
                - item
        SIPLocationUpdatedEvent:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of SIP
                    example: 1
                    format: int64
                location_id:
                    type: string
                    description: Identifier of storage location
                    example: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            example:
                id: 1
                location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            required:
                - id
                - location_id
        SIPNotFound:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of missing SIP
                    example: 1
                    format: int64
                message:
                    type: string
                    description: Message of error
                    example: abc123
            description: SIP not found
            example:
                id: 1
                message: abc123
            required:
                - message
                - id
        SIPPreservationActionCollection:
            type: array
            items:
                $ref: '#/components/schemas/EnduroIngestSipPreservationAction'
            example:
                - completed_at: "1970-01-01T00:00:01Z"
                  id: 1
                  sip_id: 1
                  started_at: "1970-01-01T00:00:01Z"
                  status: in progress
                  tasks:
                    - completed_at: "1970-01-01T00:00:01Z"
                      id: 1
                      name: abc123
                      note: abc123
                      preservation_action_id: 1
                      started_at: "1970-01-01T00:00:01Z"
                      status: in progress
                      task_id: abc123
                  type: create aip
                  workflow_id: abc123
        SIPPreservationActionCreatedEvent:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of preservation action
                    example: 1
                    format: int64
                item:
                    $ref: '#/components/schemas/EnduroIngestSipPreservationAction'
            example:
                id: 1
                item:
                    completed_at: "1970-01-01T00:00:01Z"
                    id: 1
                    sip_id: 1
                    started_at: "1970-01-01T00:00:01Z"
                    status: in progress
                    tasks:
                        - completed_at: "1970-01-01T00:00:01Z"
                          id: 1
                          name: abc123
                          note: abc123
                          preservation_action_id: 1
                          started_at: "1970-01-01T00:00:01Z"
                          status: in progress
                          task_id: abc123
                    type: create aip
                    workflow_id: abc123
            required:
                - id
                - item
        SIPPreservationActionUpdatedEvent:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of preservation action
                    example: 1
                    format: int64
                item:
                    $ref: '#/components/schemas/EnduroIngestSipPreservationAction'
            example:
                id: 1
                item:
                    completed_at: "1970-01-01T00:00:01Z"
                    id: 1
                    sip_id: 1
                    started_at: "1970-01-01T00:00:01Z"
                    status: in progress
                    tasks:
                        - completed_at: "1970-01-01T00:00:01Z"
                          id: 1
                          name: abc123
                          note: abc123
                          preservation_action_id: 1
                          started_at: "1970-01-01T00:00:01Z"
                          status: in progress
                          task_id: abc123
                    type: create aip
                    workflow_id: abc123
            required:
                - id
                - item
        SIPPreservationActions:
            type: object
            properties:
                actions:
                    $ref: '#/components/schemas/SIPPreservationActionCollection'
            example:
                actions:
                    - completed_at: "1970-01-01T00:00:01Z"
                      id: 1
                      sip_id: 1
                      started_at: "1970-01-01T00:00:01Z"
                      status: in progress
                      tasks:
                        - completed_at: "1970-01-01T00:00:01Z"
                          id: 1
                          name: abc123
                          note: abc123
                          preservation_action_id: 1
                          started_at: "1970-01-01T00:00:01Z"
                          status: in progress
                          task_id: abc123
                      type: create aip
                      workflow_id: abc123
        SIPPreservationTaskCollection:
            type: array
            items:
                $ref: '#/components/schemas/EnduroIngestSipPreservationTask'
            example:
                - completed_at: "1970-01-01T00:00:01Z"
                  id: 1
                  name: abc123
                  note: abc123
                  preservation_action_id: 1
                  started_at: "1970-01-01T00:00:01Z"
                  status: in progress
                  task_id: abc123
        SIPPreservationTaskCreatedEvent:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of preservation task
                    example: 1
                    format: int64
                item:
                    $ref: '#/components/schemas/EnduroIngestSipPreservationTask'
            example:
                id: 1
                item:
                    completed_at: "1970-01-01T00:00:01Z"
                    id: 1
                    name: abc123
                    note: abc123
                    preservation_action_id: 1
                    started_at: "1970-01-01T00:00:01Z"
                    status: in progress
                    task_id: abc123
            required:
                - id
                - item
        SIPPreservationTaskUpdatedEvent:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of preservation task
                    example: 1
                    format: int64
                item:
                    $ref: '#/components/schemas/EnduroIngestSipPreservationTask'
            example:
                id: 1
                item:
                    completed_at: "1970-01-01T00:00:01Z"
                    id: 1
                    name: abc123
                    note: abc123
                    preservation_action_id: 1
                    started_at: "1970-01-01T00:00:01Z"
                    status: in progress
                    task_id: abc123
            required:
                - id
                - item
        SIPStatusUpdatedEvent:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of SIP
                    example: 1
                    format: int64
                status:
                    type: string
                    example: in progress
                    enum:
                        - new
                        - in progress
                        - done
                        - error
                        - unknown
                        - queued
                        - abandoned
                        - pending
            example:
                id: 1
                status: in progress
            required:
                - id
                - status
        SIPUpdatedEvent:
            type: object
            properties:
                id:
                    type: integer
                    description: Identifier of SIP
                    example: 1
                    format: int64
                item:
                    $ref: '#/components/schemas/EnduroIngestSip'
            example:
                id: 1
                item:
                    aip_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    completed_at: "1970-01-01T00:00:01Z"
                    created_at: "1970-01-01T00:00:01Z"
                    id: 1
                    location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    name: abc123
                    run_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                    started_at: "1970-01-01T00:00:01Z"
                    status: in progress
                    workflow_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
            required:
                - id
                - item
        SIPs:
            type: object
            properties:
                items:
                    $ref: '#/components/schemas/SIPCollection'
                page:
                    $ref: '#/components/schemas/EnduroPage'
            example:
                items:
                    - aip_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                      completed_at: "1970-01-01T00:00:01Z"
                      created_at: "1970-01-01T00:00:01Z"
                      id: 1
                      location_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                      name: abc123
                      run_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                      started_at: "1970-01-01T00:00:01Z"
                      status: in progress
                      workflow_id: d1845cb6-a5ea-474a-9ab8-26f9bcd919f5
                page:
                    limit: 1
                    offset: 1
                    total: 1
            required:
                - items
                - page
        SubmitAIPResult:
            type: object
            properties:
                url:
                    type: string
                    example: abc123
            example:
                url: abc123
            required:
                - url
        SubmitAipRequestBody:
            type: object
            properties:
                name:
                    type: string
                    example: abc123
            example:
                name: abc123
            required:
                - name
    securitySchemes:
        jwt_header_Authorization:
            type: http
            description: Secures endpoint by requiring a valid JWT token.
            scheme: bearer
tags:
    - name: about
      description: The about service provides information about the system.
    - name: ingest
      description: The ingest service manages ingested SIPs.
    - name: storage
      description: The storage service manages locations and AIPs.
    - name: swagger
      description: The swagger service serves the API swagger definition.
security:
    - jwt_header_: []
