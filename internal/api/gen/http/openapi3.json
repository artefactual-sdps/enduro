{
  "components": {
    "schemas": {
      "AIPCollection": {
        "example": [
          {
            "created_at": "1970-01-01T00:00:01Z",
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "name": "abc123",
            "object_key": "abc123",
            "status": "stored",
            "uuid": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroStorageAip"
        },
        "type": "array"
      },
      "AIPResponse": {
        "description": "An AIP describes an AIP retrieved by the storage service. (default view)",
        "example": {
          "created_at": "1970-01-01T00:00:01Z",
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "object_key": "abc123",
          "status": "stored",
          "uuid": "abc123"
        },
        "properties": {
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "object_key": {
            "example": "abc123",
            "type": "string"
          },
          "status": {
            "default": "unspecified",
            "description": "Status of the AIP",
            "enum": [
              "unspecified",
              "stored",
              "pending",
              "processing",
              "deleted",
              "queued"
            ],
            "example": "stored",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name",
          "uuid",
          "status",
          "object_key",
          "created_at"
        ],
        "type": "object"
      },
      "AIPResponseCollection": {
        "description": "list_location_aips_response_body is the result type for an array of AIPResponse (default view)",
        "example": [
          {
            "created_at": "1970-01-01T00:00:01Z",
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "name": "abc123",
            "object_key": "abc123",
            "status": "stored",
            "uuid": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/AIPResponse"
        },
        "type": "array"
      },
      "AIPTaskCollection": {
        "example": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "name": "abc123",
            "note": "abc123",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "uuid": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroStorageAipTask"
        },
        "type": "array"
      },
      "AIPWorkflowCollection": {
        "example": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "tasks": [
              {
                "completed_at": "1970-01-01T00:00:01Z",
                "name": "abc123",
                "note": "abc123",
                "started_at": "1970-01-01T00:00:01Z",
                "status": "in progress",
                "uuid": "abc123"
              }
            ],
            "temporal_id": "abc123",
            "type": "upload aip",
            "uuid": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroStorageAipWorkflow"
        },
        "type": "array"
      },
      "AIPWorkflows": {
        "example": {
          "workflows": [
            {
              "completed_at": "1970-01-01T00:00:01Z",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "tasks": [
                {
                  "completed_at": "1970-01-01T00:00:01Z",
                  "name": "abc123",
                  "note": "abc123",
                  "started_at": "1970-01-01T00:00:01Z",
                  "status": "in progress",
                  "uuid": "abc123"
                }
              ],
              "temporal_id": "abc123",
              "type": "upload aip",
              "uuid": "abc123"
            }
          ]
        },
        "properties": {
          "workflows": {
            "$ref": "#/components/schemas/AIPWorkflowCollection"
          }
        },
        "type": "object"
      },
      "AIPs": {
        "example": {
          "items": [
            {
              "created_at": "1970-01-01T00:00:01Z",
              "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "name": "abc123",
              "object_key": "abc123",
              "status": "stored",
              "uuid": "abc123"
            }
          ],
          "page": {
            "limit": 1,
            "offset": 1,
            "total": 1
          }
        },
        "properties": {
          "items": {
            "$ref": "#/components/schemas/AIPCollection"
          },
          "page": {
            "$ref": "#/components/schemas/EnduroPage"
          }
        },
        "required": [
          "items",
          "page"
        ],
        "type": "object"
      },
      "CancelAipDeletionRequestBody": {
        "example": {
          "check": false
        },
        "properties": {
          "check": {
            "description": "If check is true, check user authorization to cancel deletion but don't execute the cancellation.",
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ConfirmSipRequestBody": {
        "example": {
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          }
        },
        "required": [
          "location_id"
        ],
        "type": "object"
      },
      "CreateAipRequestBody": {
        "example": {
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "object_key": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "status": "stored",
          "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "location_id": {
            "description": "Identifier of the AIP's storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "name": {
            "description": "Name of the AIP",
            "example": "abc123",
            "type": "string"
          },
          "object_key": {
            "description": "ObjectKey of the AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "default": "unspecified",
            "description": "Status of the the AIP",
            "enum": [
              "unspecified",
              "stored",
              "pending",
              "processing",
              "deleted",
              "queued"
            ],
            "example": "stored",
            "type": "string"
          },
          "uuid": {
            "description": "Identifier of the AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "name",
          "object_key"
        ],
        "type": "object"
      },
      "CreateLocationRequestBody": {
        "example": {
          "config": {
            "Type": "s3",
            "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
          },
          "description": "abc123",
          "name": "abc123",
          "purpose": "aip_store",
          "source": "minio"
        },
        "properties": {
          "config": {
            "example": {
              "Type": "s3",
              "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
            },
            "properties": {
              "Type": {
                "description": "Union type name, one of:\n- \"amss\"\n- \"s3\"\n- \"sftp\"\n- \"url\"",
                "enum": [
                  "amss",
                  "s3",
                  "sftp",
                  "url"
                ],
                "example": "s3",
                "type": "string"
              },
              "Value": {
                "description": "JSON encoded union value",
                "example": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}",
                "type": "string"
              }
            },
            "required": [
              "Type",
              "Value"
            ],
            "type": "object"
          },
          "description": {
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "purpose": {
            "enum": [
              "unspecified",
              "aip_store"
            ],
            "example": "aip_store",
            "type": "string"
          },
          "source": {
            "enum": [
              "unspecified",
              "minio",
              "sftp",
              "amss"
            ],
            "example": "minio",
            "type": "string"
          }
        },
        "required": [
          "name",
          "source",
          "purpose"
        ],
        "type": "object"
      },
      "EnduroAbout": {
        "example": {
          "poststorage": [
            {
              "task_queue": "abc123",
              "workflow_name": "abc123"
            }
          ],
          "preprocessing": {
            "enabled": false,
            "task_queue": "abc123",
            "workflow_name": "abc123"
          },
          "preservation_system": "abc123",
          "upload_max_size": 1,
          "version": "abc123"
        },
        "properties": {
          "poststorage": {
            "$ref": "#/components/schemas/EnduroPoststorageCollection"
          },
          "preprocessing": {
            "$ref": "#/components/schemas/EnduroPreprocessing"
          },
          "preservation_system": {
            "example": "abc123",
            "type": "string"
          },
          "upload_max_size": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "version": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "version",
          "preservation_system",
          "preprocessing",
          "upload_max_size"
        ],
        "type": "object"
      },
      "EnduroIngestSip": {
        "description": "SIP describes an ingest SIP type.",
        "example": {
          "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "completed_at": "1970-01-01T00:00:01Z",
          "created_at": "1970-01-01T00:00:01Z",
          "failed_as": "PIP",
          "failed_key": "abc123",
          "name": "abc123",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "failed",
          "uploader_email": "abc123",
          "uploader_name": "abc123",
          "uploader_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "aip_id": {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "completed_at": {
            "description": "Completion datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "failed_as": {
            "description": "Package type in case of failure (SIP or PIP)",
            "enum": [
              "SIP",
              "PIP"
            ],
            "example": "PIP",
            "type": "string"
          },
          "failed_key": {
            "description": "Object key of the failed package in the internal bucket",
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "description": "Name of the SIP",
            "example": "abc123",
            "type": "string"
          },
          "started_at": {
            "description": "Start datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of the SIP",
            "enum": [
              "error",
              "failed",
              "queued",
              "processing",
              "pending",
              "ingested"
            ],
            "example": "failed",
            "type": "string"
          },
          "uploader_email": {
            "description": "Email of the user who uploaded the SIP",
            "example": "abc123",
            "type": "string"
          },
          "uploader_name": {
            "description": "Name of the user who uploaded the SIP",
            "example": "abc123",
            "type": "string"
          },
          "uploader_uuid": {
            "description": "UUID of the user who uploaded the SIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "uuid": {
            "description": "Identifier of SIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "status",
          "created_at"
        ],
        "type": "object"
      },
      "EnduroIngestSipTask": {
        "description": "SIPTask describes a SIP workflow task.",
        "example": {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "name": "abc123",
          "note": "abc123",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "task_id": "abc123",
          "workflow_id": 1
        },
        "properties": {
          "completed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "note": {
            "example": "abc123",
            "type": "string"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "unspecified",
              "in progress",
              "done",
              "error",
              "queued",
              "pending",
              "failed"
            ],
            "example": "in progress",
            "type": "string"
          },
          "task_id": {
            "example": "abc123",
            "type": "string"
          },
          "workflow_id": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "task_id",
          "name",
          "status",
          "started_at"
        ],
        "type": "object"
      },
      "EnduroIngestSipWorkflow": {
        "description": "SIPWorkflow describes a workflow of a SIP.",
        "example": {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "sip_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "tasks": [
            {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "name": "abc123",
              "note": "abc123",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "task_id": "abc123",
              "workflow_id": 1
            }
          ],
          "temporal_id": "abc123",
          "type": "create and review aip"
        },
        "properties": {
          "completed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "sip_uuid": {
            "description": "Identifier of related SIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "unspecified",
              "in progress",
              "done",
              "error",
              "queued",
              "pending",
              "failed"
            ],
            "example": "in progress",
            "type": "string"
          },
          "tasks": {
            "$ref": "#/components/schemas/SIPTaskCollection"
          },
          "temporal_id": {
            "example": "abc123",
            "type": "string"
          },
          "type": {
            "enum": [
              "create aip",
              "create and review aip"
            ],
            "example": "create and review aip",
            "type": "string"
          }
        },
        "required": [
          "id",
          "temporal_id",
          "type",
          "status",
          "started_at",
          "sip_uuid"
        ],
        "type": "object"
      },
      "EnduroIngestUser": {
        "description": "User describes an Enduro user.",
        "example": {
          "created_at": "1970-01-01T00:00:01Z",
          "email": "nobody@example.com",
          "name": "Jane Doe",
          "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "created_at": {
            "description": "Creation date & time of the user",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Email of the user",
            "example": "nobody@example.com",
            "type": "string"
          },
          "name": {
            "description": "Name of the user",
            "example": "Jane Doe",
            "type": "string"
          },
          "uuid": {
            "description": "Identifier of the user",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "email",
          "name",
          "created_at"
        ],
        "type": "object"
      },
      "EnduroPage": {
        "description": "Page represents a subset of search results.",
        "example": {
          "limit": 1,
          "offset": 1,
          "total": 1
        },
        "properties": {
          "limit": {
            "description": "Maximum items per page",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "offset": {
            "description": "Offset from first result to start of page",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "total": {
            "description": "Total result count before paging",
            "example": 1,
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "limit",
          "offset",
          "total"
        ],
        "type": "object"
      },
      "EnduroPoststorage": {
        "example": {
          "task_queue": "abc123",
          "workflow_name": "abc123"
        },
        "properties": {
          "task_queue": {
            "example": "abc123",
            "type": "string"
          },
          "workflow_name": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "workflow_name",
          "task_queue"
        ],
        "type": "object"
      },
      "EnduroPoststorageCollection": {
        "example": [
          {
            "task_queue": "abc123",
            "workflow_name": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroPoststorage"
        },
        "type": "array"
      },
      "EnduroPreprocessing": {
        "example": {
          "enabled": false,
          "task_queue": "abc123",
          "workflow_name": "abc123"
        },
        "properties": {
          "enabled": {
            "example": false,
            "type": "boolean"
          },
          "task_queue": {
            "example": "abc123",
            "type": "string"
          },
          "workflow_name": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "workflow_name",
          "task_queue"
        ],
        "type": "object"
      },
      "EnduroStorageAip": {
        "description": "An AIP describes an AIP retrieved by the storage service.",
        "example": {
          "created_at": "1970-01-01T00:00:01Z",
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "object_key": "abc123",
          "status": "stored",
          "uuid": "abc123"
        },
        "properties": {
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "object_key": {
            "example": "abc123",
            "type": "string"
          },
          "status": {
            "default": "unspecified",
            "description": "Status of the AIP",
            "enum": [
              "unspecified",
              "stored",
              "pending",
              "processing",
              "deleted",
              "queued"
            ],
            "example": "stored",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name",
          "uuid",
          "status",
          "object_key",
          "created_at"
        ],
        "type": "object"
      },
      "EnduroStorageAipTask": {
        "description": "AIPTask describes an AIP workflow task.",
        "example": {
          "completed_at": "1970-01-01T00:00:01Z",
          "name": "abc123",
          "note": "abc123",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "uuid": "abc123"
        },
        "properties": {
          "completed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "note": {
            "example": "abc123",
            "type": "string"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "unspecified",
              "in progress",
              "done",
              "error",
              "queued",
              "pending"
            ],
            "example": "in progress",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "name",
          "status"
        ],
        "type": "object"
      },
      "EnduroStorageAipWorkflow": {
        "description": "AIPWorkflow describes a workflow of an AIP.",
        "example": {
          "completed_at": "1970-01-01T00:00:01Z",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "tasks": [
            {
              "completed_at": "1970-01-01T00:00:01Z",
              "name": "abc123",
              "note": "abc123",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "uuid": "abc123"
            }
          ],
          "temporal_id": "abc123",
          "type": "upload aip",
          "uuid": "abc123"
        },
        "properties": {
          "completed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "unspecified",
              "in progress",
              "done",
              "error",
              "queued",
              "pending",
              "canceled"
            ],
            "example": "in progress",
            "type": "string"
          },
          "tasks": {
            "$ref": "#/components/schemas/AIPTaskCollection"
          },
          "temporal_id": {
            "example": "abc123",
            "type": "string"
          },
          "type": {
            "enum": [
              "unspecified",
              "upload aip",
              "move aip",
              "delete aip"
            ],
            "example": "upload aip",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "temporal_id",
          "type",
          "status"
        ],
        "type": "object"
      },
      "Error": {
        "example": {
          "fault": false,
          "id": "123abc",
          "message": "parameter 'p' must be an integer",
          "name": "bad_request",
          "temporary": false,
          "timeout": false
        },
        "properties": {
          "fault": {
            "description": "Is the error a server-side fault?",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "ID is a unique identifier for this particular occurrence of the problem.",
            "example": "123abc",
            "type": "string"
          },
          "message": {
            "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
            "example": "parameter 'p' must be an integer",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of this class of errors.",
            "example": "bad_request",
            "type": "string"
          },
          "temporary": {
            "description": "Is the error temporary?",
            "example": false,
            "type": "boolean"
          },
          "timeout": {
            "description": "Is the error a timeout?",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "id",
          "message",
          "temporary",
          "timeout",
          "fault"
        ],
        "type": "object"
      },
      "Location": {
        "example": {
          "config": {
            "Type": "s3",
            "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
          },
          "created_at": "1970-01-01T00:00:01Z",
          "description": "abc123",
          "name": "abc123",
          "purpose": "aip_store",
          "source": "minio",
          "uuid": "abc123"
        },
        "properties": {
          "config": {
            "example": {
              "Type": "s3",
              "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
            },
            "properties": {
              "Type": {
                "description": "Union type name, one of:\n- \"amss\"\n- \"s3\"\n- \"sftp\"\n- \"url\"",
                "enum": [
                  "amss",
                  "s3",
                  "sftp",
                  "url"
                ],
                "example": "s3",
                "type": "string"
              },
              "Value": {
                "description": "JSON encoded union value",
                "example": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}",
                "type": "string"
              }
            },
            "required": [
              "Type",
              "Value"
            ],
            "type": "object"
          },
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the location",
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "description": "Name of location",
            "example": "abc123",
            "type": "string"
          },
          "purpose": {
            "default": "unspecified",
            "description": "Purpose of the location",
            "enum": [
              "unspecified",
              "aip_store"
            ],
            "example": "aip_store",
            "type": "string"
          },
          "source": {
            "default": "unspecified",
            "description": "Data source of the location",
            "enum": [
              "unspecified",
              "minio",
              "sftp",
              "amss"
            ],
            "example": "minio",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name",
          "source",
          "purpose",
          "uuid",
          "created_at"
        ],
        "type": "object"
      },
      "LocationResponse": {
        "description": "A Location describes a location retrieved by the storage service. (default view)",
        "example": {
          "created_at": "1970-01-01T00:00:01Z",
          "description": "abc123",
          "name": "abc123",
          "purpose": "aip_store",
          "source": "minio",
          "uuid": "abc123"
        },
        "properties": {
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the location",
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "description": "Name of location",
            "example": "abc123",
            "type": "string"
          },
          "purpose": {
            "default": "unspecified",
            "description": "Purpose of the location",
            "enum": [
              "unspecified",
              "aip_store"
            ],
            "example": "aip_store",
            "type": "string"
          },
          "source": {
            "default": "unspecified",
            "description": "Data source of the location",
            "enum": [
              "unspecified",
              "minio",
              "sftp",
              "amss"
            ],
            "example": "minio",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name",
          "source",
          "purpose",
          "uuid",
          "created_at"
        ],
        "type": "object"
      },
      "LocationResponseCollection": {
        "description": "list_locations_response_body is the result type for an array of LocationResponse (default view)",
        "example": [
          {
            "created_at": "1970-01-01T00:00:01Z",
            "description": "abc123",
            "name": "abc123",
            "purpose": "aip_store",
            "source": "minio",
            "uuid": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/LocationResponse"
        },
        "type": "array"
      },
      "MonitorEvent": {
        "example": {
          "event": {
            "Type": "sip_created_event",
            "Value": "{\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"failed_as\":\"PIP\",\"failed_key\":\"abc123\",\"name\":\"abc123\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"failed\",\"uploader_email\":\"abc123\",\"uploader_name\":\"abc123\",\"uploader_uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"},\"uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}"
          }
        },
        "properties": {
          "event": {
            "example": {
              "Type": "sip_created_event",
              "Value": "{\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"failed_as\":\"PIP\",\"failed_key\":\"abc123\",\"name\":\"abc123\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"failed\",\"uploader_email\":\"abc123\",\"uploader_name\":\"abc123\",\"uploader_uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"},\"uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}"
            },
            "properties": {
              "Type": {
                "description": "Union type name, one of:\n- \"monitor_ping_event\"\n- \"sip_created_event\"\n- \"sip_updated_event\"\n- \"sip_status_updated_event\"\n- \"sip_workflow_created_event\"\n- \"sip_workflow_updated_event\"\n- \"sip_task_created_event\"\n- \"sip_task_updated_event\"",
                "enum": [
                  "monitor_ping_event",
                  "sip_created_event",
                  "sip_updated_event",
                  "sip_status_updated_event",
                  "sip_workflow_created_event",
                  "sip_workflow_updated_event",
                  "sip_task_created_event",
                  "sip_task_updated_event"
                ],
                "example": "sip_created_event",
                "type": "string"
              },
              "Value": {
                "description": "JSON encoded union value",
                "example": "{\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"failed_as\":\"PIP\",\"failed_key\":\"abc123\",\"name\":\"abc123\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"failed\",\"uploader_email\":\"abc123\",\"uploader_name\":\"abc123\",\"uploader_uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"},\"uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}",
                "type": "string"
              }
            },
            "required": [
              "Type",
              "Value"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "MonitorPingEvent": {
        "example": {
          "message": "abc123"
        },
        "properties": {
          "message": {
            "example": "abc123",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MoveStatusResult": {
        "example": {
          "done": false
        },
        "properties": {
          "done": {
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "done"
        ],
        "type": "object"
      },
      "RequestAipDeletionRequestBody": {
        "example": {
          "reason": "abc123"
        },
        "properties": {
          "reason": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "reason"
        ],
        "type": "object"
      },
      "ReviewAipDeletionRequestBody": {
        "example": {
          "approved": false
        },
        "properties": {
          "approved": {
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "approved"
        ],
        "type": "object"
      },
      "SIPCollection": {
        "example": [
          {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "failed_as": "PIP",
            "failed_key": "abc123",
            "name": "abc123",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "failed",
            "uploader_email": "abc123",
            "uploader_name": "abc123",
            "uploader_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroIngestSip"
        },
        "type": "array"
      },
      "SIPCreatedEvent": {
        "example": {
          "item": {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "failed_as": "PIP",
            "failed_key": "abc123",
            "name": "abc123",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "failed",
            "uploader_email": "abc123",
            "uploader_name": "abc123",
            "uploader_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          },
          "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/EnduroIngestSip"
          },
          "uuid": {
            "description": "Identifier of SIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "item"
        ],
        "type": "object"
      },
      "SIPNotFound": {
        "description": "SIP not found",
        "example": {
          "message": "abc123",
          "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "message": {
            "description": "Message of error",
            "example": "abc123",
            "type": "string"
          },
          "uuid": {
            "description": "Identifier of missing SIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "message",
          "uuid"
        ],
        "type": "object"
      },
      "SIPStatusUpdatedEvent": {
        "example": {
          "status": "failed",
          "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "status": {
            "enum": [
              "error",
              "failed",
              "queued",
              "processing",
              "pending",
              "ingested"
            ],
            "example": "failed",
            "type": "string"
          },
          "uuid": {
            "description": "Identifier of SIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "status"
        ],
        "type": "object"
      },
      "SIPTaskCollection": {
        "example": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "note": "abc123",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "task_id": "abc123",
            "workflow_id": 1
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroIngestSipTask"
        },
        "type": "array"
      },
      "SIPTaskCreatedEvent": {
        "example": {
          "id": 1,
          "item": {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "note": "abc123",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "task_id": "abc123",
            "workflow_id": 1
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of task",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroIngestSipTask"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "SIPTaskUpdatedEvent": {
        "example": {
          "id": 1,
          "item": {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "note": "abc123",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "task_id": "abc123",
            "workflow_id": 1
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of task",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroIngestSipTask"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "SIPUpdatedEvent": {
        "example": {
          "item": {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "failed_as": "PIP",
            "failed_key": "abc123",
            "name": "abc123",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "failed",
            "uploader_email": "abc123",
            "uploader_name": "abc123",
            "uploader_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          },
          "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "item": {
            "$ref": "#/components/schemas/EnduroIngestSip"
          },
          "uuid": {
            "description": "Identifier of SIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "item"
        ],
        "type": "object"
      },
      "SIPWorkflowCollection": {
        "example": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "sip_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "tasks": [
              {
                "completed_at": "1970-01-01T00:00:01Z",
                "id": 1,
                "name": "abc123",
                "note": "abc123",
                "started_at": "1970-01-01T00:00:01Z",
                "status": "in progress",
                "task_id": "abc123",
                "workflow_id": 1
              }
            ],
            "temporal_id": "abc123",
            "type": "create and review aip"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroIngestSipWorkflow"
        },
        "type": "array"
      },
      "SIPWorkflowCreatedEvent": {
        "example": {
          "id": 1,
          "item": {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "sip_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "tasks": [
              {
                "completed_at": "1970-01-01T00:00:01Z",
                "id": 1,
                "name": "abc123",
                "note": "abc123",
                "started_at": "1970-01-01T00:00:01Z",
                "status": "in progress",
                "task_id": "abc123",
                "workflow_id": 1
              }
            ],
            "temporal_id": "abc123",
            "type": "create and review aip"
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of workflow",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroIngestSipWorkflow"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "SIPWorkflowUpdatedEvent": {
        "example": {
          "id": 1,
          "item": {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "sip_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "tasks": [
              {
                "completed_at": "1970-01-01T00:00:01Z",
                "id": 1,
                "name": "abc123",
                "note": "abc123",
                "started_at": "1970-01-01T00:00:01Z",
                "status": "in progress",
                "task_id": "abc123",
                "workflow_id": 1
              }
            ],
            "temporal_id": "abc123",
            "type": "create and review aip"
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of workflow",
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroIngestSipWorkflow"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "SIPWorkflows": {
        "example": {
          "workflows": [
            {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "sip_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "tasks": [
                {
                  "completed_at": "1970-01-01T00:00:01Z",
                  "id": 1,
                  "name": "abc123",
                  "note": "abc123",
                  "started_at": "1970-01-01T00:00:01Z",
                  "status": "in progress",
                  "task_id": "abc123",
                  "workflow_id": 1
                }
              ],
              "temporal_id": "abc123",
              "type": "create and review aip"
            }
          ]
        },
        "properties": {
          "workflows": {
            "$ref": "#/components/schemas/SIPWorkflowCollection"
          }
        },
        "type": "object"
      },
      "SIPs": {
        "example": {
          "items": [
            {
              "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "completed_at": "1970-01-01T00:00:01Z",
              "created_at": "1970-01-01T00:00:01Z",
              "failed_as": "PIP",
              "failed_key": "abc123",
              "name": "abc123",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "failed",
              "uploader_email": "abc123",
              "uploader_name": "abc123",
              "uploader_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
            }
          ],
          "page": {
            "limit": 1,
            "offset": 1,
            "total": 1
          }
        },
        "properties": {
          "items": {
            "$ref": "#/components/schemas/SIPCollection"
          },
          "page": {
            "$ref": "#/components/schemas/EnduroPage"
          }
        },
        "required": [
          "items",
          "page"
        ],
        "type": "object"
      },
      "SubmitAIPResult": {
        "example": {
          "url": "abc123"
        },
        "properties": {
          "url": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "SubmitAipRequestBody": {
        "example": {
          "name": "abc123"
        },
        "properties": {
          "name": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UploadSipResponseBody": {
        "example": {
          "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "uuid": {
            "description": "Identifier of uploaded SIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "uuid"
        ],
        "type": "object"
      },
      "UserCollection": {
        "example": [
          {
            "created_at": "1970-01-01T00:00:01Z",
            "email": "nobody@example.com",
            "name": "Jane Doe",
            "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroIngestUser"
        },
        "type": "array"
      },
      "Users": {
        "example": {
          "items": [
            {
              "created_at": "1970-01-01T00:00:01Z",
              "email": "nobody@example.com",
              "name": "Jane Doe",
              "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
            }
          ],
          "page": {
            "limit": 1,
            "offset": 1,
            "total": 1
          }
        },
        "properties": {
          "items": {
            "$ref": "#/components/schemas/UserCollection"
          },
          "page": {
            "$ref": "#/components/schemas/EnduroPage"
          }
        },
        "required": [
          "items",
          "page"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "jwt_header_Authorization": {
        "description": "Secures endpoint by requiring a valid JWT token.",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Enduro API",
    "version": "0.0.1"
  },
  "openapi": "3.0.3",
  "paths": {
    "/about": {
      "get": {
        "description": "Get information about the system",
        "operationId": "about#about",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "poststorage": [
                    {
                      "task_queue": "abc123",
                      "workflow_name": "abc123"
                    }
                  ],
                  "preprocessing": {
                    "enabled": false,
                    "task_queue": "abc123",
                    "workflow_name": "abc123"
                  },
                  "preservation_system": "abc123",
                  "upload_max_size": 1,
                  "version": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroAbout"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "about about",
        "tags": [
          "about"
        ]
      }
    },
    "/ingest/monitor": {
      "get": {
        "description": "Obtain access to the /monitor WebSocket",
        "operationId": "ingest#monitor",
        "parameters": [
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "cookie",
            "name": "enduro-ws-ticket",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "101": {
            "content": {
              "application/json": {
                "example": {
                  "event": {
                    "Type": "sip_created_event",
                    "Value": "{\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"failed_as\":\"PIP\",\"failed_key\":\"abc123\",\"name\":\"abc123\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"failed\",\"uploader_email\":\"abc123\",\"uploader_name\":\"abc123\",\"uploader_uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"},\"uuid\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MonitorEvent"
                }
              }
            },
            "description": "Switching Protocols response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Internal Server Error response."
          }
        },
        "summary": "monitor ingest",
        "tags": [
          "ingest"
        ]
      },
      "post": {
        "description": "Request access to the /monitor WebSocket",
        "operationId": "ingest#monitor_request",
        "responses": {
          "200": {
            "description": "OK response.",
            "headers": {
              "Set-Cookie": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Internal Server Error response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:sips:list",
              "ingest:sips:read",
              "ingest:sips:workflows:list"
            ]
          }
        ],
        "summary": "monitor_request ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips": {
      "get": {
        "description": "List all ingested SIPs",
        "operationId": "ingest#list_sips",
        "parameters": [
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "query",
            "name": "name",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "query",
            "name": "aip_id",
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "1970-01-01T00:00:01Z",
            "in": "query",
            "name": "earliest_created_time",
            "schema": {
              "example": "1970-01-01T00:00:01Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "1970-01-01T00:00:01Z",
            "in": "query",
            "name": "latest_created_time",
            "schema": {
              "example": "1970-01-01T00:00:01Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "failed",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "error",
                "failed",
                "queued",
                "processing",
                "pending",
                "ingested"
              ],
              "example": "failed",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "UUID of the SIP uploader",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "query",
            "name": "uploader_id",
            "schema": {
              "description": "UUID of the SIP uploader",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Limit number of results to return",
            "example": 1,
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Limit number of results to return",
              "example": 1,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Offset from the beginning of the found set",
            "example": 1,
            "in": "query",
            "name": "offset",
            "schema": {
              "description": "Offset from the beginning of the found set",
              "example": 1,
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "completed_at": "1970-01-01T00:00:01Z",
                      "created_at": "1970-01-01T00:00:01Z",
                      "failed_as": "PIP",
                      "failed_key": "abc123",
                      "name": "abc123",
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "failed",
                      "uploader_email": "abc123",
                      "uploader_name": "abc123",
                      "uploader_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                    }
                  ],
                  "page": {
                    "limit": 1,
                    "offset": 1,
                    "total": 1
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPs"
                }
              }
            },
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:sips:list"
            ]
          }
        ],
        "summary": "list_sips ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/upload": {
      "post": {
        "description": "Upload a SIP to trigger an ingest workflow",
        "operationId": "ingest#upload_sip",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Content-Type header, must define value for multipart boundary.",
            "example": "multipart/form-data; boundary=goa",
            "in": "header",
            "name": "Content-Type",
            "schema": {
              "default": "multipart/form-data; boundary=goa",
              "description": "Content-Type header, must define value for multipart boundary.",
              "example": "multipart/form-data; boundary=goa",
              "pattern": "multipart/[^;]+; boundary=.+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "example": {
                  "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/UploadSipResponseBody"
                }
              }
            },
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "invalid_multipart_request: Error returned when the request body is not a valid multipart content."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "internal_error: Fault while processing upload."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:sips:upload"
            ]
          }
        ],
        "summary": "upload_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{uuid}": {
      "get": {
        "description": "Show SIP by ID",
        "operationId": "ingest#show_sip",
        "parameters": [
          {
            "description": "Identifier of SIP to show",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of SIP to show",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "completed_at": "1970-01-01T00:00:01Z",
                  "created_at": "1970-01-01T00:00:01Z",
                  "failed_as": "PIP",
                  "failed_key": "abc123",
                  "name": "abc123",
                  "started_at": "1970-01-01T00:00:01Z",
                  "status": "failed",
                  "uploader_email": "abc123",
                  "uploader_name": "abc123",
                  "uploader_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroIngestSip"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: SIP not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:sips:read"
            ]
          }
        ],
        "summary": "show_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{uuid}/confirm": {
      "post": {
        "description": "Signal the SIP has been reviewed and accepted",
        "operationId": "ingest#confirm_sip",
        "parameters": [
          {
            "description": "Identifier of SIP to look up",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of SIP to look up",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
              },
              "schema": {
                "$ref": "#/components/schemas/ConfirmSipRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: SIP not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:sips:review"
            ]
          }
        ],
        "summary": "confirm_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{uuid}/download": {
      "get": {
        "description": "Download the failed package related to a SIP. It will be the original SIP or the transformed PIP, based on the SIP's `failed_as` value.",
        "operationId": "ingest#download_sip",
        "parameters": [
          {
            "description": "Identifier of the SIP to download",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of the SIP to download",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "cookie",
            "name": "enduro-sip-download-ticket",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK response.",
            "headers": {
              "Content-Disposition": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              },
              "Content-Length": {
                "example": 1,
                "schema": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                }
              },
              "Content-Type": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: SIP not found"
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "internal_error: Internal Server Error response."
          }
        },
        "summary": "download_sip ingest",
        "tags": [
          "ingest"
        ]
      },
      "post": {
        "description": "Request access to SIP download",
        "operationId": "ingest#download_sip_request",
        "parameters": [
          {
            "description": "Identifier of the SIP to download",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of the SIP to download",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "headers": {
              "Set-Cookie": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: SIP not found"
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "internal_error: Internal Server Error response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:sips:download"
            ]
          }
        ],
        "summary": "download_sip_request ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{uuid}/reject": {
      "post": {
        "description": "Signal the SIP has been reviewed and rejected",
        "operationId": "ingest#reject_sip",
        "parameters": [
          {
            "description": "Identifier of SIP to look up",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of SIP to look up",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: SIP not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:sips:review"
            ]
          }
        ],
        "summary": "reject_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{uuid}/workflows": {
      "get": {
        "description": "List all workflows for a SIP",
        "operationId": "ingest#list_sip_workflows",
        "parameters": [
          {
            "description": "Identifier of SIP to look up",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of SIP to look up",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "workflows": [
                    {
                      "completed_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "sip_uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "tasks": [
                        {
                          "completed_at": "1970-01-01T00:00:01Z",
                          "id": 1,
                          "name": "abc123",
                          "note": "abc123",
                          "started_at": "1970-01-01T00:00:01Z",
                          "status": "in progress",
                          "task_id": "abc123",
                          "workflow_id": 1
                        }
                      ],
                      "temporal_id": "abc123",
                      "type": "create and review aip"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPWorkflows"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: SIP not found"
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:sips:workflows:list"
            ]
          }
        ],
        "summary": "list_sip_workflows ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/users": {
      "get": {
        "description": "List all users",
        "operationId": "ingest#list_users",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Email of the user",
            "example": "nobody@example.com",
            "in": "query",
            "name": "email",
            "schema": {
              "description": "Email of the user",
              "example": "nobody@example.com",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Name of the user",
            "example": "Jane Doe",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Name of the user",
              "example": "Jane Doe",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Limit number of results to return",
            "example": 1,
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Limit number of results to return",
              "example": 1,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Offset from the beginning of the found set",
            "example": 1,
            "in": "query",
            "name": "offset",
            "schema": {
              "description": "Offset from the beginning of the found set",
              "example": 1,
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "created_at": "1970-01-01T00:00:01Z",
                      "email": "nobody@example.com",
                      "name": "Jane Doe",
                      "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                    }
                  ],
                  "page": {
                    "limit": 1,
                    "offset": 1,
                    "total": 1
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            },
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "ingest:users:list"
            ]
          }
        ],
        "summary": "list_users ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/storage/aips": {
      "get": {
        "description": "List all AIPs",
        "operationId": "storage#list_aips",
        "parameters": [
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "query",
            "name": "name",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "1970-01-01T00:00:01Z",
            "in": "query",
            "name": "earliest_created_time",
            "schema": {
              "example": "1970-01-01T00:00:01Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "1970-01-01T00:00:01Z",
            "in": "query",
            "name": "latest_created_time",
            "schema": {
              "example": "1970-01-01T00:00:01Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "stored",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "unspecified",
                "stored",
                "pending",
                "processing",
                "deleted",
                "queued"
              ],
              "example": "stored",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Limit number of results to return",
            "example": 1,
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Limit number of results to return",
              "example": 1,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Offset from the beginning of the found set",
            "example": 1,
            "in": "query",
            "name": "offset",
            "schema": {
              "description": "Offset from the beginning of the found set",
              "example": 1,
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "created_at": "1970-01-01T00:00:01Z",
                      "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "name": "abc123",
                      "object_key": "abc123",
                      "status": "stored",
                      "uuid": "abc123"
                    }
                  ],
                  "page": {
                    "limit": 1,
                    "offset": 1,
                    "total": 1
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AIPs"
                }
              }
            },
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:list"
            ]
          }
        ],
        "summary": "list_aips storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Create a new AIP",
        "operationId": "storage#create_aip",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                "name": "abc123",
                "object_key": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                "status": "stored",
                "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateAipRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "created_at": "1970-01-01T00:00:01Z",
                  "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "name": "abc123",
                  "object_key": "abc123",
                  "status": "stored",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroStorageAip"
                }
              }
            },
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:create"
            ]
          }
        ],
        "summary": "create_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}": {
      "get": {
        "description": "Show AIP by AIPID",
        "operationId": "storage#show_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "created_at": "1970-01-01T00:00:01Z",
                  "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "name": "abc123",
                  "object_key": "abc123",
                  "status": "stored",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroStorageAip"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:read"
            ]
          }
        ],
        "summary": "show_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/deletion-cancel": {
      "post": {
        "description": "Cancel an AIP deletion request",
        "operationId": "storage#cancel_aip_deletion",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "check": false
              },
              "schema": {
                "$ref": "#/components/schemas/CancelAipDeletionRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:deletion:request"
            ]
          }
        ],
        "summary": "cancel_aip_deletion storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/deletion-request": {
      "post": {
        "description": "Request an AIP deletion",
        "operationId": "storage#request_aip_deletion",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "reason": "abc123"
              },
              "schema": {
                "$ref": "#/components/schemas/RequestAipDeletionRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:deletion:request"
            ]
          }
        ],
        "summary": "request_aip_deletion storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/deletion-review": {
      "post": {
        "description": "Review an AIP deletion request",
        "operationId": "storage#review_aip_deletion",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "approved": false
              },
              "schema": {
                "$ref": "#/components/schemas/ReviewAipDeletionRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:deletion:review"
            ]
          }
        ],
        "summary": "review_aip_deletion storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/download": {
      "get": {
        "description": "Download AIP by AIPID",
        "operationId": "storage#download_aip",
        "parameters": [
          {
            "description": "Identifier of the AIP to download",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of the AIP to download",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "cookie",
            "name": "enduro-aip-download-ticket",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK response.",
            "headers": {
              "Content-Disposition": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              },
              "Content-Length": {
                "example": 1,
                "schema": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                }
              },
              "Content-Type": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "internal_error: Internal Server Error response."
          }
        },
        "summary": "download_aip storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Request access to AIP download",
        "operationId": "storage#download_aip_request",
        "parameters": [
          {
            "description": "Identifier of the AIP to download",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of the AIP to download",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "headers": {
              "Set-Cookie": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "internal_error: Internal Server Error response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:download"
            ]
          }
        ],
        "summary": "download_aip_request storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/reject": {
      "post": {
        "description": "Reject an AIP",
        "operationId": "storage#reject_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:review"
            ]
          }
        ],
        "summary": "reject_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/store": {
      "get": {
        "description": "Retrieve the status of a permanent storage location move of the AIP",
        "operationId": "storage#move_aip_status",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "done": false
                },
                "schema": {
                  "$ref": "#/components/schemas/MoveStatusResult"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          },
          "424": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "failed_dependency: Failed Dependency response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:move"
            ]
          }
        ],
        "summary": "move_aip_status storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Move an AIP to a permanent storage location",
        "operationId": "storage#move_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
              },
              "schema": {
                "$ref": "#/components/schemas/ConfirmSipRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:move"
            ]
          }
        ],
        "summary": "move_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/submit": {
      "post": {
        "description": "Start the submission of an AIP",
        "operationId": "storage#submit_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "abc123"
              },
              "schema": {
                "$ref": "#/components/schemas/SubmitAipRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "example": {
                  "url": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SubmitAIPResult"
                }
              }
            },
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:submit"
            ]
          }
        ],
        "summary": "submit_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/update": {
      "post": {
        "description": "Signal that an AIP submission is complete",
        "operationId": "storage#update_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:submit"
            ]
          }
        ],
        "summary": "update_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/workflows": {
      "get": {
        "description": "List workflows related to an AIP",
        "operationId": "storage#list_aip_workflows",
        "parameters": [
          {
            "allowEmptyValue": true,
            "example": "in progress",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "unspecified",
                "in progress",
                "done",
                "error",
                "queued",
                "pending",
                "canceled"
              ],
              "example": "in progress",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "upload aip",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                "unspecified",
                "upload aip",
                "move aip",
                "delete aip"
              ],
              "example": "upload aip",
              "type": "string"
            }
          },
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "workflows": [
                    {
                      "completed_at": "1970-01-01T00:00:01Z",
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "tasks": [
                        {
                          "completed_at": "1970-01-01T00:00:01Z",
                          "name": "abc123",
                          "note": "abc123",
                          "started_at": "1970-01-01T00:00:01Z",
                          "status": "in progress",
                          "uuid": "abc123"
                        }
                      ],
                      "temporal_id": "abc123",
                      "type": "upload aip",
                      "uuid": "abc123"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/AIPWorkflows"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: AIP not found"
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:aips:workflows:list"
            ]
          }
        ],
        "summary": "list_aip_workflows storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/locations": {
      "get": {
        "description": "List locations",
        "operationId": "storage#list_locations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "created_at": "1970-01-01T00:00:01Z",
                    "description": "abc123",
                    "name": "abc123",
                    "purpose": "aip_store",
                    "source": "minio",
                    "uuid": "abc123"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/LocationResponseCollection"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:locations:list"
            ]
          }
        ],
        "summary": "list_locations storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Create a storage location",
        "operationId": "storage#create_location",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "config": {
                  "Type": "s3",
                  "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
                },
                "description": "abc123",
                "name": "abc123",
                "purpose": "aip_store",
                "source": "minio"
              },
              "schema": {
                "$ref": "#/components/schemas/CreateLocationRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/UploadSipResponseBody"
                }
              }
            },
            "description": "Created response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:locations:create"
            ]
          }
        ],
        "summary": "create_location storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/locations/{uuid}": {
      "get": {
        "description": "Show location by UUID",
        "operationId": "storage#show_location",
        "parameters": [
          {
            "description": "Identifier of location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of location",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "config": {
                    "Type": "s3",
                    "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
                  },
                  "created_at": "1970-01-01T00:00:01Z",
                  "description": "abc123",
                  "name": "abc123",
                  "purpose": "aip_store",
                  "source": "minio",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: Storage location not found"
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:locations:read"
            ]
          }
        ],
        "summary": "show_location storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/locations/{uuid}/aips": {
      "get": {
        "description": "List all the AIPs stored in the location with UUID",
        "operationId": "storage#list_location_aips",
        "parameters": [
          {
            "description": "Identifier of location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of location",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "created_at": "1970-01-01T00:00:01Z",
                    "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                    "name": "abc123",
                    "object_key": "abc123",
                    "status": "stored",
                    "uuid": "abc123"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/AIPResponseCollection"
                }
              }
            },
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "403": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "forbidden: Forbidden response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SIPNotFound"
                }
              }
            },
            "description": "not_found: Storage location not found"
          }
        },
        "security": [
          {
            "jwt_header_Authorization": [
              "storage:locations:aips:list"
            ]
          }
        ],
        "summary": "list_location_aips storage",
        "tags": [
          "storage"
        ]
      }
    }
  },
  "security": [
    {
      "jwt_header_": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:9000"
    }
  ],
  "tags": [
    {
      "description": "The about service provides information about the system.",
      "name": "about"
    },
    {
      "description": "The ingest service manages ingested SIPs.",
      "name": "ingest"
    },
    {
      "description": "The storage service manages locations and AIPs.",
      "name": "storage"
    }
  ]
}
