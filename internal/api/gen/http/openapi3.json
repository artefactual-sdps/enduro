{
  "components": {
    "schemas": {
      "AddLocationRequestBody": {
        "example": {
          "config": {
            "Type": "sftp",
            "Value": "{\"address\":\"abc123\",\"directory\":\"abc123\",\"password\":\"abc123\",\"username\":\"abc123\"}"
          },
          "description": "abc123",
          "name": "abc123",
          "purpose": "aip_store",
          "source": "minio"
        },
        "properties": {
          "config": {
            "example": {
              "Type": "sftp",
              "Value": "{\"address\":\"abc123\",\"directory\":\"abc123\",\"password\":\"abc123\",\"username\":\"abc123\"}"
            },
            "properties": {
              "Type": {
                "description": "Union type name, one of:\n- \"s3\"\n- \"sftp\"\n- \"url\"",
                "enum": [
                  "s3",
                  "sftp",
                  "url"
                ],
                "example": "sftp",
                "type": "string"
              },
              "Value": {
                "description": "JSON encoded union value",
                "example": "{\"address\":\"abc123\",\"directory\":\"abc123\",\"password\":\"abc123\",\"username\":\"abc123\"}",
                "type": "string"
              }
            },
            "required": [
              "Type",
              "Value"
            ],
            "type": "object"
          },
          "description": {
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "purpose": {
            "enum": [
              "unspecified",
              "aip_store"
            ],
            "example": "aip_store",
            "type": "string"
          },
          "source": {
            "enum": [
              "unspecified",
              "minio",
              "sftp"
            ],
            "example": "minio",
            "type": "string"
          }
        },
        "required": [
          "name",
          "source",
          "purpose"
        ],
        "type": "object"
      },
      "AddLocationResult": {
        "example": {
          "uuid": "abc123"
        },
        "properties": {
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "uuid"
        ],
        "type": "object"
      },
      "ConfirmRequestBody": {
        "example": {
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          }
        },
        "required": [
          "location_id"
        ],
        "type": "object"
      },
      "EnduroMonitorPingEventResponseBody": {
        "description": "EnduroMonitor-Ping-EventResponseBody result type (default view)",
        "example": {
          "message": "abc123"
        },
        "properties": {
          "message": {
            "example": "abc123",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnduroPackageCreatedEventResponseBody": {
        "description": "EnduroPackage-Created-EventResponseBody result type (default view)",
        "example": {
          "id": 1,
          "item": {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "name": "abc123",
            "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of package",
            "example": 1,
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroStoredPackageResponseBody"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "EnduroPackageLocationUpdatedEventResponseBody": {
        "description": "EnduroPackage-Location-Updated-EventResponseBody result type (default view)",
        "example": {
          "id": 1,
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "id": {
            "description": "Identifier of package",
            "example": 1,
            "type": "integer"
          },
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          }
        },
        "required": [
          "id",
          "location_id"
        ],
        "type": "object"
      },
      "EnduroPackagePreservationAction": {
        "description": "PreservationAction describes a preservation action.",
        "example": {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "package_id": 1,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "tasks": [
            {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "name": "abc123",
              "note": "abc123",
              "preservation_action_id": 1,
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "task_id": "abc123"
            }
          ],
          "type": "create-and-review-aip",
          "workflow_id": "abc123"
        },
        "properties": {
          "completed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": 1,
            "type": "integer"
          },
          "package_id": {
            "example": 1,
            "type": "integer"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "unspecified",
              "in progress",
              "done",
              "error",
              "queued",
              "pending"
            ],
            "example": "in progress",
            "type": "string"
          },
          "tasks": {
            "$ref": "#/components/schemas/EnduroPackagePreservationTaskCollection"
          },
          "type": {
            "enum": [
              "create-aip",
              "create-and-review-aip",
              "move-package"
            ],
            "example": "create-and-review-aip",
            "type": "string"
          },
          "workflow_id": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "id",
          "workflow_id",
          "type",
          "status",
          "started_at"
        ],
        "type": "object"
      },
      "EnduroPackagePreservationActionCollection": {
        "example": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "package_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "tasks": [
              {
                "completed_at": "1970-01-01T00:00:01Z",
                "id": 1,
                "name": "abc123",
                "note": "abc123",
                "preservation_action_id": 1,
                "started_at": "1970-01-01T00:00:01Z",
                "status": "in progress",
                "task_id": "abc123"
              }
            ],
            "type": "create-and-review-aip",
            "workflow_id": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroPackagePreservationAction"
        },
        "type": "array"
      },
      "EnduroPackagePreservationActionResponseBodySimple": {
        "description": "PreservationAction describes a preservation action. (simple view)",
        "example": {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "package_id": 1,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "type": "create-and-review-aip",
          "workflow_id": "abc123"
        },
        "properties": {
          "completed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": 1,
            "type": "integer"
          },
          "package_id": {
            "example": 1,
            "type": "integer"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "unspecified",
              "in progress",
              "done",
              "error",
              "queued",
              "pending"
            ],
            "example": "in progress",
            "type": "string"
          },
          "type": {
            "enum": [
              "create-aip",
              "create-and-review-aip",
              "move-package"
            ],
            "example": "create-and-review-aip",
            "type": "string"
          },
          "workflow_id": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "id",
          "workflow_id",
          "type",
          "status",
          "started_at"
        ],
        "type": "object"
      },
      "EnduroPackagePreservationActions": {
        "example": {
          "actions": [
            {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "package_id": 1,
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "tasks": [
                {
                  "completed_at": "1970-01-01T00:00:01Z",
                  "id": 1,
                  "name": "abc123",
                  "note": "abc123",
                  "preservation_action_id": 1,
                  "started_at": "1970-01-01T00:00:01Z",
                  "status": "in progress",
                  "task_id": "abc123"
                }
              ],
              "type": "create-and-review-aip",
              "workflow_id": "abc123"
            }
          ]
        },
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/EnduroPackagePreservationActionCollection"
          }
        },
        "type": "object"
      },
      "EnduroPackagePreservationTask": {
        "description": "PreservationTask describes a preservation action task.",
        "example": {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "name": "abc123",
          "note": "abc123",
          "preservation_action_id": 1,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "task_id": "abc123"
        },
        "properties": {
          "completed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": 1,
            "type": "integer"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "note": {
            "example": "abc123",
            "type": "string"
          },
          "preservation_action_id": {
            "example": 1,
            "type": "integer"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "unspecified",
              "in progress",
              "done",
              "error",
              "queued",
              "pending"
            ],
            "example": "in progress",
            "type": "string"
          },
          "task_id": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "id",
          "task_id",
          "name",
          "status",
          "started_at"
        ],
        "type": "object"
      },
      "EnduroPackagePreservationTaskCollection": {
        "example": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "note": "abc123",
            "preservation_action_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "task_id": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroPackagePreservationTask"
        },
        "type": "array"
      },
      "EnduroPackagePreservationTaskResponseBody": {
        "description": "PreservationTask describes a preservation action task. (default view)",
        "example": {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "name": "abc123",
          "note": "abc123",
          "preservation_action_id": 1,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "task_id": "abc123"
        },
        "properties": {
          "completed_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "example": 1,
            "type": "integer"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "note": {
            "example": "abc123",
            "type": "string"
          },
          "preservation_action_id": {
            "example": 1,
            "type": "integer"
          },
          "started_at": {
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "unspecified",
              "in progress",
              "done",
              "error",
              "queued",
              "pending"
            ],
            "example": "in progress",
            "type": "string"
          },
          "task_id": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "id",
          "task_id",
          "name",
          "status",
          "started_at"
        ],
        "type": "object"
      },
      "EnduroPackageStatusUpdatedEventResponseBody": {
        "description": "EnduroPackage-Status-Updated-EventResponseBody result type (default view)",
        "example": {
          "id": 1,
          "status": "in progress"
        },
        "properties": {
          "id": {
            "description": "Identifier of package",
            "example": 1,
            "type": "integer"
          },
          "status": {
            "enum": [
              "new",
              "in progress",
              "done",
              "error",
              "unknown",
              "queued",
              "pending",
              "abandoned"
            ],
            "example": "in progress",
            "type": "string"
          }
        },
        "required": [
          "id",
          "status"
        ],
        "type": "object"
      },
      "EnduroPackageUpdatedEventResponseBody": {
        "description": "EnduroPackage-Updated-EventResponseBody result type (default view)",
        "example": {
          "id": 1,
          "item": {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "name": "abc123",
            "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of package",
            "example": 1,
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroStoredPackageResponseBody"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "EnduroPreservationActionCreatedEventResponseBody": {
        "description": "EnduroPreservation-Action-Created-EventResponseBody result type (default view)",
        "example": {
          "id": 1,
          "item": {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "package_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "type": "create-and-review-aip",
            "workflow_id": "abc123"
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of preservation action",
            "example": 1,
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroPackagePreservationActionResponseBodySimple"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "EnduroPreservationActionUpdatedEventResponseBody": {
        "description": "EnduroPreservation-Action-Updated-EventResponseBody result type (default view)",
        "example": {
          "id": 1,
          "item": {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "package_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "type": "create-and-review-aip",
            "workflow_id": "abc123"
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of preservation action",
            "example": 1,
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroPackagePreservationActionResponseBodySimple"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "EnduroPreservationTaskCreatedEventResponseBody": {
        "description": "EnduroPreservation-Task-Created-EventResponseBody result type (default view)",
        "example": {
          "id": 1,
          "item": {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "note": "abc123",
            "preservation_action_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "task_id": "abc123"
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of preservation task",
            "example": 1,
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroPackagePreservationTaskResponseBody"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "EnduroPreservationTaskUpdatedEventResponseBody": {
        "description": "EnduroPreservation-Task-Updated-EventResponseBody result type (default view)",
        "example": {
          "id": 1,
          "item": {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "note": "abc123",
            "preservation_action_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "task_id": "abc123"
          }
        },
        "properties": {
          "id": {
            "description": "Identifier of preservation task",
            "example": 1,
            "type": "integer"
          },
          "item": {
            "$ref": "#/components/schemas/EnduroPackagePreservationTaskResponseBody"
          }
        },
        "required": [
          "id",
          "item"
        ],
        "type": "object"
      },
      "EnduroStoredPackage": {
        "description": "StoredPackage describes a package retrieved by the service.",
        "example": {
          "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "completed_at": "1970-01-01T00:00:01Z",
          "created_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "aip_id": {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "completed_at": {
            "description": "Completion datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Identifier of package",
            "example": 1,
            "type": "integer"
          },
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "name": {
            "description": "Name of the package",
            "example": "abc123",
            "type": "string"
          },
          "run_id": {
            "description": "Identifier of latest processing workflow run",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "started_at": {
            "description": "Start datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "default": "new",
            "description": "Status of the package",
            "enum": [
              "new",
              "in progress",
              "done",
              "error",
              "unknown",
              "queued",
              "pending",
              "abandoned"
            ],
            "example": "in progress",
            "type": "string"
          },
          "workflow_id": {
            "description": "Identifier of processing workflow",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "id",
          "status",
          "created_at"
        ],
        "type": "object"
      },
      "EnduroStoredPackageCollection": {
        "example": [
          {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "name": "abc123",
            "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/EnduroStoredPackage"
        },
        "type": "array"
      },
      "EnduroStoredPackageResponseBody": {
        "description": "StoredPackage describes a package retrieved by the service. (default view)",
        "example": {
          "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "completed_at": "1970-01-01T00:00:01Z",
          "created_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        },
        "properties": {
          "aip_id": {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "completed_at": {
            "description": "Completion datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Identifier of package",
            "example": 1,
            "type": "integer"
          },
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "name": {
            "description": "Name of the package",
            "example": "abc123",
            "type": "string"
          },
          "run_id": {
            "description": "Identifier of latest processing workflow run",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          },
          "started_at": {
            "description": "Start datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "default": "new",
            "description": "Status of the package",
            "enum": [
              "new",
              "in progress",
              "done",
              "error",
              "unknown",
              "queued",
              "pending",
              "abandoned"
            ],
            "example": "in progress",
            "type": "string"
          },
          "workflow_id": {
            "description": "Identifier of processing workflow",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "id",
          "status",
          "created_at"
        ],
        "type": "object"
      },
      "Error": {
        "example": {
          "fault": false,
          "id": "123abc",
          "message": "parameter 'p' must be an integer",
          "name": "bad_request",
          "temporary": false,
          "timeout": false
        },
        "properties": {
          "fault": {
            "description": "Is the error a server-side fault?",
            "example": false,
            "type": "boolean"
          },
          "id": {
            "description": "ID is a unique identifier for this particular occurrence of the problem.",
            "example": "123abc",
            "type": "string"
          },
          "message": {
            "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
            "example": "parameter 'p' must be an integer",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of this class of errors.",
            "example": "bad_request",
            "type": "string"
          },
          "temporary": {
            "description": "Is the error temporary?",
            "example": false,
            "type": "boolean"
          },
          "timeout": {
            "description": "Is the error a timeout?",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "id",
          "message",
          "temporary",
          "timeout",
          "fault"
        ],
        "type": "object"
      },
      "ListResponseBody": {
        "example": {
          "items": [
            {
              "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "completed_at": "1970-01-01T00:00:01Z",
              "created_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "name": "abc123",
              "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
            }
          ],
          "next_cursor": "abc123"
        },
        "properties": {
          "items": {
            "$ref": "#/components/schemas/EnduroStoredPackageCollection"
          },
          "next_cursor": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "Location": {
        "example": {
          "config": {
            "Type": "sftp",
            "Value": "{\"address\":\"abc123\",\"directory\":\"abc123\",\"password\":\"abc123\",\"username\":\"abc123\"}"
          },
          "created_at": "1970-01-01T00:00:01Z",
          "description": "abc123",
          "name": "abc123",
          "purpose": "aip_store",
          "source": "minio",
          "uuid": "abc123"
        },
        "properties": {
          "config": {
            "example": {
              "Type": "sftp",
              "Value": "{\"address\":\"abc123\",\"directory\":\"abc123\",\"password\":\"abc123\",\"username\":\"abc123\"}"
            },
            "properties": {
              "Type": {
                "description": "Union type name, one of:\n- \"s3\"\n- \"sftp\"\n- \"url\"",
                "enum": [
                  "s3",
                  "sftp",
                  "url"
                ],
                "example": "sftp",
                "type": "string"
              },
              "Value": {
                "description": "JSON encoded union value",
                "example": "{\"address\":\"abc123\",\"directory\":\"abc123\",\"password\":\"abc123\",\"username\":\"abc123\"}",
                "type": "string"
              }
            },
            "required": [
              "Type",
              "Value"
            ],
            "type": "object"
          },
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the location",
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "description": "Name of location",
            "example": "abc123",
            "type": "string"
          },
          "purpose": {
            "default": "unspecified",
            "description": "Purpose of the location",
            "enum": [
              "unspecified",
              "aip_store"
            ],
            "example": "aip_store",
            "type": "string"
          },
          "source": {
            "default": "unspecified",
            "description": "Data source of the location",
            "enum": [
              "unspecified",
              "minio",
              "sftp"
            ],
            "example": "minio",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name",
          "source",
          "purpose",
          "uuid",
          "created_at"
        ],
        "type": "object"
      },
      "LocationNotFound": {
        "description": "Storage location not found",
        "example": {
          "message": "abc123",
          "uuid": "abc123"
        },
        "properties": {
          "message": {
            "description": "Message of error",
            "example": "abc123",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "message",
          "uuid"
        ],
        "type": "object"
      },
      "LocationResponse": {
        "description": "A Location describes a location retrieved by the storage service. (default view)",
        "example": {
          "created_at": "1970-01-01T00:00:01Z",
          "description": "abc123",
          "name": "abc123",
          "purpose": "aip_store",
          "source": "minio",
          "uuid": "abc123"
        },
        "properties": {
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the location",
            "example": "abc123",
            "type": "string"
          },
          "name": {
            "description": "Name of location",
            "example": "abc123",
            "type": "string"
          },
          "purpose": {
            "default": "unspecified",
            "description": "Purpose of the location",
            "enum": [
              "unspecified",
              "aip_store"
            ],
            "example": "aip_store",
            "type": "string"
          },
          "source": {
            "default": "unspecified",
            "description": "Data source of the location",
            "enum": [
              "unspecified",
              "minio",
              "sftp"
            ],
            "example": "minio",
            "type": "string"
          },
          "uuid": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name",
          "source",
          "purpose",
          "uuid",
          "created_at"
        ],
        "type": "object"
      },
      "LocationResponseCollection": {
        "description": "LocationsResponseBody is the result type for an array of LocationResponse (default view)",
        "example": [
          {
            "created_at": "1970-01-01T00:00:01Z",
            "description": "abc123",
            "name": "abc123",
            "purpose": "aip_store",
            "source": "minio",
            "uuid": "abc123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/LocationResponse"
        },
        "type": "array"
      },
      "MonitorResponseBody": {
        "description": "MonitorResponseBody result type (default view)",
        "example": {
          "monitor_ping_event": {
            "message": "abc123"
          },
          "package_created_event": {
            "id": 1,
            "item": {
              "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "completed_at": "1970-01-01T00:00:01Z",
              "created_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "name": "abc123",
              "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
            }
          },
          "package_location_updated_event": {
            "id": 1,
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          },
          "package_status_updated_event": {
            "id": 1,
            "status": "in progress"
          },
          "package_updated_event": {
            "id": 1,
            "item": {
              "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "completed_at": "1970-01-01T00:00:01Z",
              "created_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "name": "abc123",
              "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
            }
          },
          "preservation_action_created_event": {
            "id": 1,
            "item": {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "package_id": 1,
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "type": "create-and-review-aip",
              "workflow_id": "abc123"
            }
          },
          "preservation_action_updated_event": {
            "id": 1,
            "item": {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "package_id": 1,
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "type": "create-and-review-aip",
              "workflow_id": "abc123"
            }
          },
          "preservation_task_created_event": {
            "id": 1,
            "item": {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "name": "abc123",
              "note": "abc123",
              "preservation_action_id": 1,
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "task_id": "abc123"
            }
          },
          "preservation_task_updated_event": {
            "id": 1,
            "item": {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "name": "abc123",
              "note": "abc123",
              "preservation_action_id": 1,
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "task_id": "abc123"
            }
          }
        },
        "properties": {
          "monitor_ping_event": {
            "$ref": "#/components/schemas/EnduroMonitorPingEventResponseBody"
          },
          "package_created_event": {
            "$ref": "#/components/schemas/EnduroPackageCreatedEventResponseBody"
          },
          "package_location_updated_event": {
            "$ref": "#/components/schemas/EnduroPackageLocationUpdatedEventResponseBody"
          },
          "package_status_updated_event": {
            "$ref": "#/components/schemas/EnduroPackageStatusUpdatedEventResponseBody"
          },
          "package_updated_event": {
            "$ref": "#/components/schemas/EnduroPackageUpdatedEventResponseBody"
          },
          "preservation_action_created_event": {
            "$ref": "#/components/schemas/EnduroPreservationActionCreatedEventResponseBody"
          },
          "preservation_action_updated_event": {
            "$ref": "#/components/schemas/EnduroPreservationActionUpdatedEventResponseBody"
          },
          "preservation_task_created_event": {
            "$ref": "#/components/schemas/EnduroPreservationTaskCreatedEventResponseBody"
          },
          "preservation_task_updated_event": {
            "$ref": "#/components/schemas/EnduroPreservationTaskUpdatedEventResponseBody"
          }
        },
        "type": "object"
      },
      "MoveStatusResult": {
        "example": {
          "done": false
        },
        "properties": {
          "done": {
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "done"
        ],
        "type": "object"
      },
      "Package": {
        "example": {
          "aip_id": "abc123",
          "created_at": "1970-01-01T00:00:01Z",
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "object_key": "abc123",
          "status": "in_review"
        },
        "properties": {
          "aip_id": {
            "example": "abc123",
            "type": "string"
          },
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "object_key": {
            "example": "abc123",
            "type": "string"
          },
          "status": {
            "default": "unspecified",
            "description": "Status of the package",
            "enum": [
              "unspecified",
              "in_review",
              "rejected",
              "stored",
              "moving"
            ],
            "example": "in_review",
            "type": "string"
          }
        },
        "required": [
          "name",
          "aip_id",
          "status",
          "object_key",
          "created_at"
        ],
        "type": "object"
      },
      "PackageNotFound": {
        "description": "Package not found",
        "example": {
          "id": 1,
          "message": "abc123"
        },
        "properties": {
          "id": {
            "description": "Identifier of missing package",
            "example": 1,
            "type": "integer"
          },
          "message": {
            "description": "Message of error",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "message",
          "id"
        ],
        "type": "object"
      },
      "PackageNotFound2": {
        "description": "Storage package not found",
        "example": {
          "aip_id": "abc123",
          "message": "abc123"
        },
        "properties": {
          "aip_id": {
            "description": "Identifier of missing package",
            "example": "abc123",
            "type": "string"
          },
          "message": {
            "description": "Message of error",
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "message",
          "aip_id"
        ],
        "type": "object"
      },
      "PackageResponse": {
        "description": "A Package describes a package retrieved by the storage service. (default view)",
        "example": {
          "aip_id": "abc123",
          "created_at": "1970-01-01T00:00:01Z",
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "object_key": "abc123",
          "status": "in_review"
        },
        "properties": {
          "aip_id": {
            "example": "abc123",
            "type": "string"
          },
          "created_at": {
            "description": "Creation datetime",
            "example": "1970-01-01T00:00:01Z",
            "format": "date-time",
            "type": "string"
          },
          "location_id": {
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "type": "string"
          },
          "name": {
            "example": "abc123",
            "type": "string"
          },
          "object_key": {
            "example": "abc123",
            "type": "string"
          },
          "status": {
            "default": "unspecified",
            "description": "Status of the package",
            "enum": [
              "unspecified",
              "in_review",
              "rejected",
              "stored",
              "moving"
            ],
            "example": "in_review",
            "type": "string"
          }
        },
        "required": [
          "name",
          "aip_id",
          "status",
          "object_key",
          "created_at"
        ],
        "type": "object"
      },
      "PackageResponseCollection": {
        "description": "location_packages_response_body is the result type for an array of PackageResponse (default view)",
        "example": [
          {
            "aip_id": "abc123",
            "created_at": "1970-01-01T00:00:01Z",
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "name": "abc123",
            "object_key": "abc123",
            "status": "in_review"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PackageResponse"
        },
        "type": "array"
      },
      "SubmitRequestBody": {
        "example": {
          "name": "abc123"
        },
        "properties": {
          "name": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "SubmitResult": {
        "example": {
          "url": "abc123"
        },
        "properties": {
          "url": {
            "example": "abc123",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "oauth2_header_Authorization": {
        "description": "Secures endpoints by requiring a valid OAuth2 access token.",
        "flows": {
          "clientCredentials": {
            "refreshUrl": "/oauth2/refresh",
            "scopes": {},
            "tokenUrl": "/oauth2/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "title": "Enduro API",
    "version": "1.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/package": {
      "get": {
        "description": "List all stored packages",
        "operationId": "package#list",
        "parameters": [
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "query",
            "name": "name",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "query",
            "name": "aip_id",
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "1970-01-01T00:00:01Z",
            "in": "query",
            "name": "earliest_created_time",
            "schema": {
              "example": "1970-01-01T00:00:01Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "1970-01-01T00:00:01Z",
            "in": "query",
            "name": "latest_created_time",
            "schema": {
              "example": "1970-01-01T00:00:01Z",
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Identifier of storage location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "query",
            "name": "location_id",
            "schema": {
              "description": "Identifier of storage location",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "example": "in progress",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "new",
                "in progress",
                "done",
                "error",
                "unknown",
                "queued",
                "pending",
                "abandoned"
              ],
              "example": "in progress",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Pagination cursor",
            "example": "abc123",
            "in": "query",
            "name": "cursor",
            "schema": {
              "description": "Pagination cursor",
              "example": "abc123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "completed_at": "1970-01-01T00:00:01Z",
                      "created_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "name": "abc123",
                      "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                    }
                  ],
                  "next_cursor": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/ListResponseBody"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "list package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/monitor": {
      "get": {
        "operationId": "package#monitor",
        "parameters": [
          {
            "allowEmptyValue": true,
            "example": "abc123",
            "in": "cookie",
            "name": "enduro-ws-ticket",
            "schema": {
              "example": "abc123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "101": {
            "content": {
              "application/json": {
                "example": {
                  "monitor_ping_event": {
                    "message": "abc123"
                  },
                  "package_created_event": {
                    "id": 1,
                    "item": {
                      "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "completed_at": "1970-01-01T00:00:01Z",
                      "created_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "name": "abc123",
                      "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                    }
                  },
                  "package_location_updated_event": {
                    "id": 1,
                    "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                  },
                  "package_status_updated_event": {
                    "id": 1,
                    "status": "in progress"
                  },
                  "package_updated_event": {
                    "id": 1,
                    "item": {
                      "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "completed_at": "1970-01-01T00:00:01Z",
                      "created_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "name": "abc123",
                      "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                    }
                  },
                  "preservation_action_created_event": {
                    "id": 1,
                    "item": {
                      "completed_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "package_id": 1,
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "type": "create-and-review-aip",
                      "workflow_id": "abc123"
                    }
                  },
                  "preservation_action_updated_event": {
                    "id": 1,
                    "item": {
                      "completed_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "package_id": 1,
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "type": "create-and-review-aip",
                      "workflow_id": "abc123"
                    }
                  },
                  "preservation_task_created_event": {
                    "id": 1,
                    "item": {
                      "completed_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "name": "abc123",
                      "note": "abc123",
                      "preservation_action_id": 1,
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "task_id": "abc123"
                    }
                  },
                  "preservation_task_updated_event": {
                    "id": 1,
                    "item": {
                      "completed_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "name": "abc123",
                      "note": "abc123",
                      "preservation_action_id": 1,
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "task_id": "abc123"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MonitorResponseBody"
                }
              }
            },
            "description": "Switching Protocols response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Internal Server Error response."
          }
        },
        "summary": "monitor package",
        "tags": [
          "package"
        ]
      },
      "post": {
        "description": "Request access to the /monitor WebSocket.",
        "operationId": "package#monitor_request",
        "responses": {
          "200": {
            "description": "OK response.",
            "headers": {
              "Set-Cookie": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Internal Server Error response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "monitor_request package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}": {
      "get": {
        "description": "Show package by ID",
        "operationId": "package#show",
        "parameters": [
          {
            "description": "Identifier of package to show",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of package to show",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "completed_at": "1970-01-01T00:00:01Z",
                  "created_at": "1970-01-01T00:00:01Z",
                  "id": 1,
                  "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "name": "abc123",
                  "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "started_at": "1970-01-01T00:00:01Z",
                  "status": "in progress",
                  "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroStoredPackage"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound"
                }
              }
            },
            "description": "not_found: Package not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "show package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}/confirm": {
      "post": {
        "description": "Signal the package has been reviewed and accepted",
        "operationId": "package#confirm",
        "parameters": [
          {
            "description": "Identifier of package to look up",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of package to look up",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
              },
              "schema": {
                "$ref": "#/components/schemas/ConfirmRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound"
                }
              }
            },
            "description": "not_found: Package not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "confirm package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}/move": {
      "get": {
        "description": "Retrieve the status of a permanent storage location move of the package",
        "operationId": "package#move_status",
        "parameters": [
          {
            "description": "Identifier of package to move",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of package to move",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "done": false
                },
                "schema": {
                  "$ref": "#/components/schemas/MoveStatusResult"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound"
                }
              }
            },
            "description": "not_found: Package not found"
          },
          "424": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "failed_dependency: Failed Dependency response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "move_status package",
        "tags": [
          "package"
        ]
      },
      "post": {
        "description": "Move a package to a permanent storage location",
        "operationId": "package#move",
        "parameters": [
          {
            "description": "Identifier of package to move",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of package to move",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
              },
              "schema": {
                "$ref": "#/components/schemas/ConfirmRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound"
                }
              }
            },
            "description": "not_found: Package not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "move package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}/preservation-actions": {
      "get": {
        "description": "List all preservation actions by ID",
        "operationId": "package#preservation_actions",
        "parameters": [
          {
            "description": "Identifier of package to look up",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of package to look up",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "actions": [
                    {
                      "completed_at": "1970-01-01T00:00:01Z",
                      "id": 1,
                      "package_id": 1,
                      "started_at": "1970-01-01T00:00:01Z",
                      "status": "in progress",
                      "tasks": [
                        {
                          "completed_at": "1970-01-01T00:00:01Z",
                          "id": 1,
                          "name": "abc123",
                          "note": "abc123",
                          "preservation_action_id": 1,
                          "started_at": "1970-01-01T00:00:01Z",
                          "status": "in progress",
                          "task_id": "abc123"
                        }
                      ],
                      "type": "create-and-review-aip",
                      "workflow_id": "abc123"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/EnduroPackagePreservationActions"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound"
                }
              }
            },
            "description": "not_found: Package not found"
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "preservation_actions package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}/reject": {
      "post": {
        "description": "Signal the package has been reviewed and rejected",
        "operationId": "package#reject",
        "parameters": [
          {
            "description": "Identifier of package to look up",
            "example": 1,
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifier of package to look up",
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound"
                }
              }
            },
            "description": "not_found: Package not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "reject package",
        "tags": [
          "package"
        ]
      }
    },
    "/storage/location": {
      "get": {
        "description": "List locations",
        "operationId": "storage#locations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "created_at": "1970-01-01T00:00:01Z",
                    "description": "abc123",
                    "name": "abc123",
                    "purpose": "aip_store",
                    "source": "minio",
                    "uuid": "abc123"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/LocationResponseCollection"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "locations storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Add a storage location",
        "operationId": "storage#add_location",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "config": {
                  "Type": "sftp",
                  "Value": "{\"address\":\"abc123\",\"directory\":\"abc123\",\"password\":\"abc123\",\"username\":\"abc123\"}"
                },
                "description": "abc123",
                "name": "abc123",
                "purpose": "aip_store",
                "source": "minio"
              },
              "schema": {
                "$ref": "#/components/schemas/AddLocationRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/AddLocationResult"
                }
              }
            },
            "description": "Created response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "add_location storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/location/{uuid}": {
      "get": {
        "description": "Show location by UUID",
        "operationId": "storage#show_location",
        "parameters": [
          {
            "description": "Identifier of location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of location",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "config": {
                    "Type": "sftp",
                    "Value": "{\"address\":\"abc123\",\"directory\":\"abc123\",\"password\":\"abc123\",\"username\":\"abc123\"}"
                  },
                  "created_at": "1970-01-01T00:00:01Z",
                  "description": "abc123",
                  "name": "abc123",
                  "purpose": "aip_store",
                  "source": "minio",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/LocationNotFound"
                }
              }
            },
            "description": "not_found: Storage location not found"
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "show_location storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/location/{uuid}/packages": {
      "get": {
        "description": "List all the packages stored in the location with UUID",
        "operationId": "storage#location_packages",
        "parameters": [
          {
            "description": "Identifier of location",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "description": "Identifier of location",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "aip_id": "abc123",
                    "created_at": "1970-01-01T00:00:01Z",
                    "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                    "name": "abc123",
                    "object_key": "abc123",
                    "status": "in_review"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/PackageResponseCollection"
                }
              }
            },
            "description": "OK response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "message": "abc123",
                  "uuid": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/LocationNotFound"
                }
              }
            },
            "description": "not_found: Storage location not found"
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "location_packages storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}": {
      "get": {
        "description": "Show package by AIPID",
        "operationId": "storage#show",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "abc123",
                  "created_at": "1970-01-01T00:00:01Z",
                  "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
                  "name": "abc123",
                  "object_key": "abc123",
                  "status": "in_review"
                },
                "schema": {
                  "$ref": "#/components/schemas/Package"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "abc123",
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound2"
                }
              }
            },
            "description": "not_found: Storage package not found"
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "show storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/download": {
      "get": {
        "description": "Download package by AIPID",
        "operationId": "storage#download",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": "YWJjMTIz",
                "schema": {
                  "example": "YWJjMTIz",
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "abc123",
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound2"
                }
              }
            },
            "description": "not_found: Storage package not found"
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "download storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/reject": {
      "post": {
        "description": "Reject a package",
        "operationId": "storage#reject",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "abc123",
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound2"
                }
              }
            },
            "description": "not_found: Storage package not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "reject storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/store": {
      "get": {
        "description": "Retrieve the status of a permanent storage location move of the package",
        "operationId": "storage#move_status",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "done": false
                },
                "schema": {
                  "$ref": "#/components/schemas/MoveStatusResult"
                }
              }
            },
            "description": "OK response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "abc123",
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound2"
                }
              }
            },
            "description": "not_found: Storage package not found"
          },
          "424": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "failed_dependency: Failed Dependency response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "move_status storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Move a package to a permanent storage location",
        "operationId": "storage#move",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
              },
              "schema": {
                "$ref": "#/components/schemas/ConfirmRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "aip_id": "abc123",
                  "message": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/PackageNotFound2"
                }
              }
            },
            "description": "not_found: Storage package not found"
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "move storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/submit": {
      "post": {
        "description": "Start the submission of a package",
        "operationId": "storage#submit",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "abc123"
              },
              "schema": {
                "$ref": "#/components/schemas/SubmitRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "example": {
                  "url": "abc123"
                },
                "schema": {
                  "$ref": "#/components/schemas/SubmitResult"
                }
              }
            },
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "submit storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/update": {
      "post": {
        "description": "Signal the storage service that an upload is complete",
        "operationId": "storage#update",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "schema": {
              "description": "Identifier of AIP",
              "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_valid: Bad Request response."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "409": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "not_available: Conflict response."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "update storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/swagger/swagger.json": {
      "get": {
        "description": "JSON document containing the API swagger definition.",
        "operationId": "swagger#/swagger/swagger.json",
        "responses": {
          "200": {
            "description": "File downloaded"
          }
        },
        "security": [
          {
            "oauth2__": []
          }
        ],
        "summary": "Download gen/http/openapi.json",
        "tags": [
          "swagger"
        ]
      }
    },
    "/upload/upload": {
      "post": {
        "operationId": "upload#upload",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Content-Type header, must define value for multipart boundary.",
            "example": "multipart/form-data; boundary=goa",
            "in": "header",
            "name": "Content-Type",
            "schema": {
              "default": "multipart/form-data; boundary=goa",
              "description": "Content-Type header, must define value for multipart boundary.",
              "example": "multipart/form-data; boundary=goa",
              "pattern": "multipart/[^;]+; boundary=.+",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "invalid_multipart_request: Error returned when the request body is not a valid multipart content."
          },
          "401": {
            "content": {
              "application/json": {
                "example": "abc123",
                "schema": {
                  "example": "abc123",
                  "type": "string"
                }
              }
            },
            "description": "unauthorized: Unauthorized response."
          },
          "500": {
            "content": {
              "application/vnd.goa.error": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "internal_error: Fault while processing upload."
          }
        },
        "security": [
          {
            "oauth2_header_Authorization": []
          }
        ],
        "summary": "upload upload",
        "tags": [
          "upload"
        ]
      }
    }
  },
  "security": [
    {
      "oauth2__": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:9000"
    }
  ],
  "tags": [
    {
      "description": "The package service manages packages being transferred to a3m.",
      "name": "package"
    },
    {
      "description": "The storage service manages the storage of packages.",
      "name": "storage"
    },
    {
      "description": "The swagger service serves the API swagger definition.",
      "name": "swagger"
    },
    {
      "description": "The upload service handles file submissions to the SIPs bucket.",
      "name": "upload"
    }
  ]
}
