{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "EnduroPackagePreservationActionResponseBody": {
      "description": "PreservationAction describes a preservation action. (default view)",
      "example": {
        "completed_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "package_id": 1,
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "tasks": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "note": "abc123",
            "preservation_action_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "task_id": "abc123"
          }
        ],
        "type": "create aip",
        "workflow_id": "abc123"
      },
      "properties": {
        "completed_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "package_id": {
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "started_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "unspecified",
            "in progress",
            "done",
            "error",
            "queued",
            "pending"
          ],
          "example": "in progress",
          "type": "string"
        },
        "tasks": {
          "$ref": "#/definitions/EnduroPackagePreservationTaskResponseBodyCollection"
        },
        "type": {
          "enum": [
            "unspecified",
            "create aip",
            "create and review aip",
            "move package"
          ],
          "example": "create aip",
          "type": "string"
        },
        "workflow_id": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "id",
        "workflow_id",
        "type",
        "status",
        "started_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.package-preservation-action; view=default",
      "type": "object"
    },
    "EnduroPackagePreservationActionResponseBodyCollection": {
      "description": "EnduroPackage-Preservation-ActionCollectionResponseBody is the result type for an array of EnduroPackage-Preservation-ActionResponseBody (default view)",
      "example": [
        {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "package_id": 1,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "tasks": [
            {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "name": "abc123",
              "note": "abc123",
              "preservation_action_id": 1,
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "task_id": "abc123"
            }
          ],
          "type": "create aip",
          "workflow_id": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/EnduroPackagePreservationActionResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.package-preservation-action; type=collection; view=default",
      "type": "array"
    },
    "EnduroPackagePreservationTaskResponseBody": {
      "description": "PreservationTask describes a preservation action task. (default view)",
      "example": {
        "completed_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "name": "abc123",
        "note": "abc123",
        "preservation_action_id": 1,
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "task_id": "abc123"
      },
      "properties": {
        "completed_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "note": {
          "example": "abc123",
          "type": "string"
        },
        "preservation_action_id": {
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "started_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "unspecified",
            "in progress",
            "done",
            "error",
            "queued",
            "pending"
          ],
          "example": "in progress",
          "type": "string"
        },
        "task_id": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "id",
        "task_id",
        "name",
        "status",
        "started_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.package-preservation-task; view=default",
      "type": "object"
    },
    "EnduroPackagePreservationTaskResponseBodyCollection": {
      "description": "EnduroPackage-Preservation-TaskCollectionResponseBody is the result type for an array of EnduroPackage-Preservation-TaskResponseBody (default view)",
      "example": [
        {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "name": "abc123",
          "note": "abc123",
          "preservation_action_id": 1,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "task_id": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/EnduroPackagePreservationTaskResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.package-preservation-task; type=collection; view=default",
      "type": "array"
    },
    "EnduroStoredPackageResponseBody": {
      "description": "StoredPackage describes a package retrieved by the service. (default view)",
      "example": {
        "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "completed_at": "1970-01-01T00:00:01Z",
        "created_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "completed_at": {
          "description": "Completion datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Identifier of package",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "description": "Name of the package",
          "example": "abc123",
          "type": "string"
        },
        "run_id": {
          "description": "Identifier of latest processing workflow run",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "started_at": {
          "description": "Start datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "default": "new",
          "description": "Status of the package",
          "enum": [
            "new",
            "in progress",
            "done",
            "error",
            "unknown",
            "queued",
            "abandoned",
            "pending"
          ],
          "example": "in progress",
          "type": "string"
        },
        "workflow_id": {
          "description": "Identifier of processing workflow",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.stored-package; view=default",
      "type": "object"
    },
    "EnduroStoredPackageResponseBodyCollection": {
      "description": "EnduroStored-PackageCollectionResponseBody is the result type for an array of EnduroStored-PackageResponseBody (default view)",
      "example": [
        {
          "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "completed_at": "1970-01-01T00:00:01Z",
          "created_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        }
      ],
      "items": {
        "$ref": "#/definitions/EnduroStoredPackageResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.stored-package; type=collection; view=default",
      "type": "array"
    },
    "LocationResponse": {
      "description": "A Location describes a location retrieved by the storage service. (default view)",
      "example": {
        "created_at": "1970-01-01T00:00:01Z",
        "description": "abc123",
        "name": "abc123",
        "purpose": "aip_store",
        "source": "minio",
        "uuid": "abc123"
      },
      "properties": {
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "Description of the location",
          "example": "abc123",
          "type": "string"
        },
        "name": {
          "description": "Name of location",
          "example": "abc123",
          "type": "string"
        },
        "purpose": {
          "default": "unspecified",
          "description": "Purpose of the location",
          "enum": [
            "unspecified",
            "aip_store"
          ],
          "example": "aip_store",
          "type": "string"
        },
        "source": {
          "default": "unspecified",
          "description": "Data source of the location",
          "enum": [
            "unspecified",
            "minio",
            "sftp",
            "amss"
          ],
          "example": "minio",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name",
        "source",
        "purpose",
        "uuid",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage-location; view=default",
      "type": "object"
    },
    "PackageConfirmNotAvailableResponseBody": {
      "description": "confirm_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageConfirmNotFoundResponseBody": {
      "description": "Package not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing package",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "PackageConfirmNotFoundResponseBody",
      "type": "object"
    },
    "PackageConfirmNotValidResponseBody": {
      "description": "confirm_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageConfirmRequestBody": {
      "example": {
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        }
      },
      "required": [
        "location_id"
      ],
      "title": "PackageConfirmRequestBody",
      "type": "object"
    },
    "PackageListResponseBody": {
      "example": {
        "items": [
          {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "name": "abc123",
            "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        ],
        "next_cursor": "abc123"
      },
      "properties": {
        "items": {
          "$ref": "#/definitions/EnduroStoredPackageResponseBodyCollection"
        },
        "next_cursor": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "items"
      ],
      "title": "PackageListResponseBody",
      "type": "object"
    },
    "PackageMonitorNotAvailableResponseBody": {
      "description": "monitor_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageMonitorRequestNotAvailableResponseBody": {
      "description": "monitor_request_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageMonitorResponseBody": {
      "example": {
        "event": {
          "Type": "package_created_event",
          "Value": "{\"id\":1,\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"id\":1,\"location_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"name\":\"abc123\",\"run_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"in progress\",\"workflow_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}}"
        }
      },
      "properties": {
        "event": {
          "example": {
            "Type": "package_created_event",
            "Value": "{\"id\":1,\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"id\":1,\"location_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"name\":\"abc123\",\"run_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"in progress\",\"workflow_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}}"
          },
          "properties": {
            "Type": {
              "description": "Union type name, one of:\n- \"monitor_ping_event\"\n- \"package_created_event\"\n- \"package_updated_event\"\n- \"package_status_updated_event\"\n- \"package_location_updated_event\"\n- \"preservation_action_created_event\"\n- \"preservation_action_updated_event\"\n- \"preservation_task_created_event\"\n- \"preservation_task_updated_event\"",
              "enum": [
                "monitor_ping_event",
                "package_created_event",
                "package_updated_event",
                "package_status_updated_event",
                "package_location_updated_event",
                "preservation_action_created_event",
                "preservation_action_updated_event",
                "preservation_task_created_event",
                "preservation_task_updated_event"
              ],
              "example": "package_created_event",
              "type": "string"
            },
            "Value": {
              "description": "JSON encoded union value",
              "example": "{\"id\":1,\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"id\":1,\"location_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"name\":\"abc123\",\"run_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"in progress\",\"workflow_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}}",
              "type": "string"
            }
          },
          "required": [
            "Type",
            "Value"
          ],
          "type": "object"
        }
      },
      "title": "PackageMonitorResponseBody",
      "type": "object"
    },
    "PackageMoveNotAvailableResponseBody": {
      "description": "move_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageMoveNotFoundResponseBody": {
      "description": "Package not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing package",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "PackageMoveNotFoundResponseBody",
      "type": "object"
    },
    "PackageMoveNotValidResponseBody": {
      "description": "move_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageMoveRequestBody": {
      "example": {
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        }
      },
      "required": [
        "location_id"
      ],
      "title": "PackageMoveRequestBody",
      "type": "object"
    },
    "PackageMoveStatusFailedDependencyResponseBody": {
      "description": "move_status_failed_dependency_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageMoveStatusNotFoundResponseBody": {
      "description": "Package not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing package",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "PackageMoveStatusNotFoundResponseBody",
      "type": "object"
    },
    "PackageMoveStatusResponseBody": {
      "example": {
        "done": false
      },
      "properties": {
        "done": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "done"
      ],
      "title": "PackageMoveStatusResponseBody",
      "type": "object"
    },
    "PackagePreservationActionsNotFoundResponseBody": {
      "description": "Package not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing package",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "PackagePreservationActionsNotFoundResponseBody",
      "type": "object"
    },
    "PackagePreservationActionsResponseBody": {
      "description": "preservation_actions_response_body result type (default view)",
      "example": {
        "actions": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "package_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "tasks": [
              {
                "completed_at": "1970-01-01T00:00:01Z",
                "id": 1,
                "name": "abc123",
                "note": "abc123",
                "preservation_action_id": 1,
                "started_at": "1970-01-01T00:00:01Z",
                "status": "in progress",
                "task_id": "abc123"
              }
            ],
            "type": "create aip",
            "workflow_id": "abc123"
          }
        ]
      },
      "properties": {
        "actions": {
          "$ref": "#/definitions/EnduroPackagePreservationActionResponseBodyCollection"
        }
      },
      "title": "Mediatype identifier: application/vnd.enduro.package-preservation-actions; view=default",
      "type": "object"
    },
    "PackageRejectNotAvailableResponseBody": {
      "description": "reject_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageRejectNotFoundResponseBody": {
      "description": "Package not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing package",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "PackageRejectNotFoundResponseBody",
      "type": "object"
    },
    "PackageRejectNotValidResponseBody": {
      "description": "reject_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageResponse": {
      "description": "A Package describes a package retrieved by the storage service. (default view)",
      "example": {
        "aip_id": "abc123",
        "created_at": "1970-01-01T00:00:01Z",
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "object_key": "abc123",
        "status": "in_review"
      },
      "properties": {
        "aip_id": {
          "example": "abc123",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "object_key": {
          "example": "abc123",
          "type": "string"
        },
        "status": {
          "default": "unspecified",
          "description": "Status of the package",
          "enum": [
            "unspecified",
            "in_review",
            "rejected",
            "stored",
            "moving"
          ],
          "example": "in_review",
          "type": "string"
        }
      },
      "required": [
        "name",
        "aip_id",
        "status",
        "object_key",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage-package; view=default",
      "type": "object"
    },
    "PackageShowNotAvailableResponseBody": {
      "description": "show_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "PackageShowNotFoundResponseBody": {
      "description": "Package not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing package",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "PackageShowNotFoundResponseBody",
      "type": "object"
    },
    "PackageShowResponseBody": {
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "completed_at": "1970-01-01T00:00:01Z",
        "created_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "completed_at": {
          "description": "Completion datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Identifier of package",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "description": "Name of the package",
          "example": "abc123",
          "type": "string"
        },
        "run_id": {
          "description": "Identifier of latest processing workflow run",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "started_at": {
          "description": "Start datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "default": "new",
          "description": "Status of the package",
          "enum": [
            "new",
            "in progress",
            "done",
            "error",
            "unknown",
            "queued",
            "abandoned",
            "pending"
          ],
          "example": "in progress",
          "type": "string"
        },
        "workflow_id": {
          "description": "Identifier of processing workflow",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.stored-package; view=default",
      "type": "object"
    },
    "StorageAddLocationNotValidResponseBody": {
      "description": "add_location_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageAddLocationRequestBody": {
      "example": {
        "config": {
          "Type": "s3",
          "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
        },
        "description": "abc123",
        "name": "abc123",
        "purpose": "aip_store",
        "source": "minio"
      },
      "properties": {
        "config": {
          "example": {
            "Type": "s3",
            "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
          },
          "properties": {
            "Type": {
              "description": "Union type name, one of:\n- \"amss\"\n- \"s3\"\n- \"sftp\"\n- \"url\"",
              "enum": [
                "amss",
                "s3",
                "sftp",
                "url"
              ],
              "example": "s3",
              "type": "string"
            },
            "Value": {
              "description": "JSON encoded union value",
              "example": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}",
              "type": "string"
            }
          },
          "required": [
            "Type",
            "Value"
          ],
          "type": "object"
        },
        "description": {
          "example": "abc123",
          "type": "string"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "purpose": {
          "enum": [
            "unspecified",
            "aip_store"
          ],
          "example": "aip_store",
          "type": "string"
        },
        "source": {
          "enum": [
            "unspecified",
            "minio",
            "sftp",
            "amss"
          ],
          "example": "minio",
          "type": "string"
        }
      },
      "required": [
        "name",
        "source",
        "purpose"
      ],
      "title": "StorageAddLocationRequestBody",
      "type": "object"
    },
    "StorageAddLocationResponseBody": {
      "example": {
        "uuid": "abc123"
      },
      "properties": {
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "uuid"
      ],
      "title": "StorageAddLocationResponseBody",
      "type": "object"
    },
    "StorageCreateNotValidResponseBody": {
      "description": "create_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageCreateRequestBody": {
      "example": {
        "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "object_key": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "status": "in_review"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "location_id": {
          "description": "Identifier of the package's storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "description": "Name of the package",
          "example": "abc123",
          "type": "string"
        },
        "object_key": {
          "description": "ObjectKey of AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "status": {
          "default": "unspecified",
          "description": "Status of the package",
          "enum": [
            "unspecified",
            "in_review",
            "rejected",
            "stored",
            "moving"
          ],
          "example": "in_review",
          "type": "string"
        }
      },
      "required": [
        "aip_id",
        "name",
        "object_key"
      ],
      "title": "StorageCreateRequestBody",
      "type": "object"
    },
    "StorageCreateResponseBody": {
      "description": "CreateResponseBody result type (default view)",
      "example": {
        "aip_id": "abc123",
        "created_at": "1970-01-01T00:00:01Z",
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "object_key": "abc123",
        "status": "in_review"
      },
      "properties": {
        "aip_id": {
          "example": "abc123",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "object_key": {
          "example": "abc123",
          "type": "string"
        },
        "status": {
          "default": "unspecified",
          "description": "Status of the package",
          "enum": [
            "unspecified",
            "in_review",
            "rejected",
            "stored",
            "moving"
          ],
          "example": "in_review",
          "type": "string"
        }
      },
      "required": [
        "name",
        "aip_id",
        "status",
        "object_key",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage-package; view=default",
      "type": "object"
    },
    "StorageDownloadNotFoundResponseBody": {
      "description": "Storage package not found",
      "example": {
        "aip_id": "abc123",
        "message": "abc123"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of missing package",
          "example": "abc123",
          "type": "string"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "aip_id"
      ],
      "title": "StorageDownloadNotFoundResponseBody",
      "type": "object"
    },
    "StorageLocationPackagesNotFoundResponseBody": {
      "description": "Storage location not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageLocationPackagesNotFoundResponseBody",
      "type": "object"
    },
    "StorageLocationPackagesNotValidResponseBody": {
      "description": "location_packages_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageLocationResponseCollection": {
      "description": "LocationsResponseBody is the result type for an array of LocationResponse (default view)",
      "example": [
        {
          "created_at": "1970-01-01T00:00:01Z",
          "description": "abc123",
          "name": "abc123",
          "purpose": "aip_store",
          "source": "minio",
          "uuid": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/LocationResponse"
      },
      "title": "Mediatype identifier: application/vnd.enduro.storage-location; type=collection; view=default",
      "type": "array"
    },
    "StorageMoveNotAvailableResponseBody": {
      "description": "move_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageMoveNotFoundResponseBody": {
      "description": "Storage package not found",
      "example": {
        "aip_id": "abc123",
        "message": "abc123"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of missing package",
          "example": "abc123",
          "type": "string"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "aip_id"
      ],
      "title": "StorageMoveNotFoundResponseBody",
      "type": "object"
    },
    "StorageMoveNotValidResponseBody": {
      "description": "move_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageMoveRequestBody": {
      "example": {
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        }
      },
      "required": [
        "location_id"
      ],
      "title": "StorageMoveRequestBody",
      "type": "object"
    },
    "StorageMoveStatusFailedDependencyResponseBody": {
      "description": "move_status_failed_dependency_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageMoveStatusNotFoundResponseBody": {
      "description": "Storage package not found",
      "example": {
        "aip_id": "abc123",
        "message": "abc123"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of missing package",
          "example": "abc123",
          "type": "string"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "aip_id"
      ],
      "title": "StorageMoveStatusNotFoundResponseBody",
      "type": "object"
    },
    "StorageMoveStatusResponseBody": {
      "example": {
        "done": false
      },
      "properties": {
        "done": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "done"
      ],
      "title": "StorageMoveStatusResponseBody",
      "type": "object"
    },
    "StoragePackageResponseCollection": {
      "description": "location_packages_response_body is the result type for an array of PackageResponse (default view)",
      "example": [
        {
          "aip_id": "abc123",
          "created_at": "1970-01-01T00:00:01Z",
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "object_key": "abc123",
          "status": "in_review"
        }
      ],
      "items": {
        "$ref": "#/definitions/PackageResponse"
      },
      "title": "Mediatype identifier: application/vnd.enduro.storage-package; type=collection; view=default",
      "type": "array"
    },
    "StorageRejectNotAvailableResponseBody": {
      "description": "reject_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageRejectNotFoundResponseBody": {
      "description": "Storage package not found",
      "example": {
        "aip_id": "abc123",
        "message": "abc123"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of missing package",
          "example": "abc123",
          "type": "string"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "aip_id"
      ],
      "title": "StorageRejectNotFoundResponseBody",
      "type": "object"
    },
    "StorageRejectNotValidResponseBody": {
      "description": "reject_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageShowLocationNotFoundResponseBody": {
      "description": "Storage location not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageShowLocationNotFoundResponseBody",
      "type": "object"
    },
    "StorageShowLocationResponseBody": {
      "description": "show_location_response_body result type (default view)",
      "example": {
        "created_at": "1970-01-01T00:00:01Z",
        "description": "abc123",
        "name": "abc123",
        "purpose": "aip_store",
        "source": "minio",
        "uuid": "abc123"
      },
      "properties": {
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "Description of the location",
          "example": "abc123",
          "type": "string"
        },
        "name": {
          "description": "Name of location",
          "example": "abc123",
          "type": "string"
        },
        "purpose": {
          "default": "unspecified",
          "description": "Purpose of the location",
          "enum": [
            "unspecified",
            "aip_store"
          ],
          "example": "aip_store",
          "type": "string"
        },
        "source": {
          "default": "unspecified",
          "description": "Data source of the location",
          "enum": [
            "unspecified",
            "minio",
            "sftp",
            "amss"
          ],
          "example": "minio",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name",
        "source",
        "purpose",
        "uuid",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage-location; view=default",
      "type": "object"
    },
    "StorageShowNotFoundResponseBody": {
      "description": "Storage package not found",
      "example": {
        "aip_id": "abc123",
        "message": "abc123"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of missing package",
          "example": "abc123",
          "type": "string"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "aip_id"
      ],
      "title": "StorageShowNotFoundResponseBody",
      "type": "object"
    },
    "StorageShowResponseBody": {
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "aip_id": "abc123",
        "created_at": "1970-01-01T00:00:01Z",
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "object_key": "abc123",
        "status": "in_review"
      },
      "properties": {
        "aip_id": {
          "example": "abc123",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "object_key": {
          "example": "abc123",
          "type": "string"
        },
        "status": {
          "default": "unspecified",
          "description": "Status of the package",
          "enum": [
            "unspecified",
            "in_review",
            "rejected",
            "stored",
            "moving"
          ],
          "example": "in_review",
          "type": "string"
        }
      },
      "required": [
        "name",
        "aip_id",
        "status",
        "object_key",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage-package; view=default",
      "type": "object"
    },
    "StorageSubmitNotAvailableResponseBody": {
      "description": "submit_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageSubmitNotValidResponseBody": {
      "description": "submit_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageSubmitRequestBody": {
      "example": {
        "name": "abc123"
      },
      "properties": {
        "name": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "StorageSubmitRequestBody",
      "type": "object"
    },
    "StorageSubmitResponseBody": {
      "example": {
        "url": "abc123"
      },
      "properties": {
        "url": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "title": "StorageSubmitResponseBody",
      "type": "object"
    },
    "StorageUpdateNotAvailableResponseBody": {
      "description": "update_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageUpdateNotValidResponseBody": {
      "description": "update_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "UploadUploadInternalErrorResponseBody": {
      "description": "Fault while processing upload. (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "UploadUploadInvalidMediaTypeResponseBody": {
      "description": "Error returned when the Content-Type header does not define a multipart request. (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "UploadUploadInvalidMultipartRequestResponseBody": {
      "description": "Error returned when the request body is not a valid multipart content. (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    }
  },
  "host": "localhost:9000",
  "info": {
    "title": "Enduro API",
    "version": "0.0.1"
  },
  "paths": {
    "/package": {
      "get": {
        "description": "List all stored packages",
        "operationId": "package#list",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "query",
            "name": "aip_id",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "earliest_created_time",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "latest_created_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Identifier of storage location",
            "format": "uuid",
            "in": "query",
            "name": "location_id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "new",
              "in progress",
              "done",
              "error",
              "unknown",
              "queued",
              "abandoned",
              "pending"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Pagination cursor",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PackageListResponseBody",
              "required": [
                "items"
              ]
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "list package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/monitor": {
      "get": {
        "operationId": "package#monitor",
        "responses": {
          "101": {
            "description": "Switching Protocols response.",
            "schema": {
              "$ref": "#/definitions/PackageMonitorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PackageMonitorNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "ws"
        ],
        "summary": "monitor package",
        "tags": [
          "package"
        ]
      },
      "post": {
        "description": "Request access to the /monitor WebSocket.",
        "operationId": "package#monitor_request",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PackageMonitorRequestNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "monitor_request package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}": {
      "get": {
        "description": "Show package by ID",
        "operationId": "package#show",
        "parameters": [
          {
            "description": "Identifier of package to show",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PackageShowResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PackageShowNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/PackageShowNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "show package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}/confirm": {
      "post": {
        "description": "Signal the package has been reviewed and accepted",
        "operationId": "package#confirm",
        "parameters": [
          {
            "description": "Identifier of package to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ConfirmRequestBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageConfirmRequestBody",
              "required": [
                "location_id"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PackageConfirmNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PackageConfirmNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/PackageConfirmNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "confirm package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}/move": {
      "get": {
        "description": "Retrieve the status of a permanent storage location move of the package",
        "operationId": "package#move_status",
        "parameters": [
          {
            "description": "Identifier of package to move",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PackageMoveStatusResponseBody",
              "required": [
                "done"
              ]
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PackageMoveStatusNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "424": {
            "description": "Failed Dependency response.",
            "schema": {
              "$ref": "#/definitions/PackageMoveStatusFailedDependencyResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "move_status package",
        "tags": [
          "package"
        ]
      },
      "post": {
        "description": "Move a package to a permanent storage location",
        "operationId": "package#move",
        "parameters": [
          {
            "description": "Identifier of package to move",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "MoveRequestBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageMoveRequestBody",
              "required": [
                "location_id"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PackageMoveNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PackageMoveNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/PackageMoveNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "move package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}/preservation-actions": {
      "get": {
        "description": "List all preservation actions by ID",
        "operationId": "package#preservation_actions",
        "parameters": [
          {
            "description": "Identifier of package to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PackagePreservationActionsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PackagePreservationActionsNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "preservation_actions package",
        "tags": [
          "package"
        ]
      }
    },
    "/package/{id}/reject": {
      "post": {
        "description": "Signal the package has been reviewed and rejected",
        "operationId": "package#reject",
        "parameters": [
          {
            "description": "Identifier of package to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PackageRejectNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PackageRejectNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/PackageRejectNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "reject package",
        "tags": [
          "package"
        ]
      }
    },
    "/storage/location": {
      "get": {
        "description": "List locations",
        "operationId": "storage#locations",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageLocationResponseCollection"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "locations storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Add a storage location",
        "operationId": "storage#add_location",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "add_location_request_body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAddLocationRequestBody",
              "required": [
                "name",
                "source",
                "purpose"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created response.",
            "schema": {
              "$ref": "#/definitions/StorageAddLocationResponseBody",
              "required": [
                "uuid"
              ]
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageAddLocationNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "add_location storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/location/{uuid}": {
      "get": {
        "description": "Show location by UUID",
        "operationId": "storage#show_location",
        "parameters": [
          {
            "description": "Identifier of location",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageShowLocationResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageShowLocationNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "show_location storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/location/{uuid}/packages": {
      "get": {
        "description": "List all the packages stored in the location with UUID",
        "operationId": "storage#location_packages",
        "parameters": [
          {
            "description": "Identifier of location",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StoragePackageResponseCollection"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageLocationPackagesNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageLocationPackagesNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "location_packages storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package": {
      "post": {
        "description": "Create a new package",
        "operationId": "storage#create",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CreateRequestBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageCreateRequestBody",
              "required": [
                "aip_id",
                "name",
                "object_key"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageCreateResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageCreateNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "create storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}": {
      "get": {
        "description": "Show package by AIPID",
        "operationId": "storage#show",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageShowResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageShowNotFoundResponseBody",
              "required": [
                "message",
                "aip_id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "show storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/download": {
      "get": {
        "description": "Download package by AIPID",
        "operationId": "storage#download",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageDownloadNotFoundResponseBody",
              "required": [
                "message",
                "aip_id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "download storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/reject": {
      "post": {
        "description": "Reject a package",
        "operationId": "storage#reject",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageRejectNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageRejectNotFoundResponseBody",
              "required": [
                "message",
                "aip_id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/StorageRejectNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "reject storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/store": {
      "get": {
        "description": "Retrieve the status of a permanent storage location move of the package",
        "operationId": "storage#move_status",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveStatusResponseBody",
              "required": [
                "done"
              ]
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveStatusNotFoundResponseBody",
              "required": [
                "message",
                "aip_id"
              ]
            }
          },
          "424": {
            "description": "Failed Dependency response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveStatusFailedDependencyResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "move_status storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Move a package to a permanent storage location",
        "operationId": "storage#move",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "MoveRequestBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageMoveRequestBody",
              "required": [
                "location_id"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveNotFoundResponseBody",
              "required": [
                "message",
                "aip_id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "move storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/submit": {
      "post": {
        "description": "Start the submission of a package",
        "operationId": "storage#submit",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "SubmitRequestBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageSubmitRequestBody",
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response.",
            "schema": {
              "$ref": "#/definitions/StorageSubmitResponseBody",
              "required": [
                "url"
              ]
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageSubmitNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/StorageSubmitNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "submit storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/package/{aip_id}/update": {
      "post": {
        "description": "Signal the storage service that an upload is complete",
        "operationId": "storage#update",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "aip_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageUpdateNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/StorageUpdateNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "update storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/swagger/swagger.json": {
      "get": {
        "description": "JSON document containing the API swagger definition.",
        "operationId": "swagger#/swagger/swagger.json",
        "responses": {
          "200": {
            "description": "File downloaded",
            "schema": {
              "type": "file"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "Download gen/http/openapi.json",
        "tags": [
          "swagger"
        ]
      }
    },
    "/upload/upload": {
      "post": {
        "operationId": "upload#upload",
        "parameters": [
          {
            "default": "multipart/form-data; boundary=goa",
            "description": "Content-Type header, must define value for multipart boundary.",
            "in": "header",
            "name": "Content-Type",
            "pattern": "multipart/[^;]+; boundary=.+",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/UploadUploadInvalidMultipartRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/UploadUploadInternalErrorResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "upload upload",
        "tags": [
          "upload"
        ]
      }
    }
  },
  "produces": [
    "application/json",
    "application/xml",
    "application/gob"
  ],
  "securityDefinitions": {
    "jwt_header_Authorization": {
      "description": "Secures endpoint by requiring a valid JWT token.",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}
