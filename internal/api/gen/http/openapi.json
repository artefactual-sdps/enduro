{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "AIPResponse": {
      "description": "An AIP describes an AIP retrieved by the storage service. (default view)",
      "example": {
        "created_at": "1970-01-01T00:00:01Z",
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "object_key": "abc123",
        "status": "in_review",
        "uuid": "abc123"
      },
      "properties": {
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "object_key": {
          "example": "abc123",
          "type": "string"
        },
        "status": {
          "default": "unspecified",
          "description": "Status of the AIP",
          "enum": [
            "unspecified",
            "in_review",
            "rejected",
            "stored",
            "moving"
          ],
          "example": "in_review",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name",
        "uuid",
        "status",
        "object_key",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage.aip; view=default",
      "type": "object"
    },
    "AboutAboutResponseBody": {
      "description": "AboutResponseBody result type (default view)",
      "example": {
        "poststorage": [
          {
            "task_queue": "abc123",
            "workflow_name": "abc123"
          }
        ],
        "preprocessing": {
          "enabled": false,
          "task_queue": "abc123",
          "workflow_name": "abc123"
        },
        "preservation_system": "abc123",
        "version": "abc123"
      },
      "properties": {
        "poststorage": {
          "$ref": "#/definitions/EnduroPoststorageResponseBodyCollection"
        },
        "preprocessing": {
          "$ref": "#/definitions/EnduroPreprocessingResponseBody"
        },
        "preservation_system": {
          "example": "abc123",
          "type": "string"
        },
        "version": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "version",
        "preservation_system",
        "preprocessing"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.about; view=default",
      "type": "object"
    },
    "EnduroPageResponseBody": {
      "description": "Page represents a subset of search results. (default view)",
      "example": {
        "limit": 1,
        "offset": 1,
        "total": 1
      },
      "properties": {
        "limit": {
          "description": "Maximum items per page",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "offset": {
          "description": "Offset from first result to start of page",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "total": {
          "description": "Total result count before paging",
          "example": 1,
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "limit",
        "offset",
        "total"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.page; view=default",
      "type": "object"
    },
    "EnduroPoststorageResponseBody": {
      "description": "EnduroPoststorageResponseBody result type (default view)",
      "example": {
        "task_queue": "abc123",
        "workflow_name": "abc123"
      },
      "properties": {
        "task_queue": {
          "example": "abc123",
          "type": "string"
        },
        "workflow_name": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "workflow_name",
        "task_queue"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.poststorage; view=default",
      "type": "object"
    },
    "EnduroPoststorageResponseBodyCollection": {
      "description": "EnduroPoststorageCollectionResponseBody is the result type for an array of EnduroPoststorageResponseBody (default view)",
      "example": [
        {
          "task_queue": "abc123",
          "workflow_name": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/EnduroPoststorageResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.poststorage; type=collection; view=default",
      "type": "array"
    },
    "EnduroPreprocessingResponseBody": {
      "description": "EnduroPreprocessingResponseBody result type (default view)",
      "example": {
        "enabled": false,
        "task_queue": "abc123",
        "workflow_name": "abc123"
      },
      "properties": {
        "enabled": {
          "example": false,
          "type": "boolean"
        },
        "task_queue": {
          "example": "abc123",
          "type": "string"
        },
        "workflow_name": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "workflow_name",
        "task_queue"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.preprocessing; view=default",
      "type": "object"
    },
    "IngestConfirmSipNotAvailableResponseBody": {
      "description": "confirm_sip_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestConfirmSipNotFoundResponseBody": {
      "description": "SIP not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing SIP",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "IngestConfirmSipNotFoundResponseBody",
      "type": "object"
    },
    "IngestConfirmSipNotValidResponseBody": {
      "description": "confirm_sip_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestConfirmSipRequestBody": {
      "example": {
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        }
      },
      "required": [
        "location_id"
      ],
      "title": "IngestConfirmSipRequestBody",
      "type": "object"
    },
    "IngestListSipPreservationActionsNotFoundResponseBody": {
      "description": "SIP not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing SIP",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "IngestListSipPreservationActionsNotFoundResponseBody",
      "type": "object"
    },
    "IngestListSipPreservationActionsResponseBody": {
      "description": "list_sip_preservation_actions_response_body result type (default view)",
      "example": {
        "actions": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "sip_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "tasks": [
              {
                "completed_at": "1970-01-01T00:00:01Z",
                "id": 1,
                "name": "abc123",
                "note": "abc123",
                "preservation_action_id": 1,
                "started_at": "1970-01-01T00:00:01Z",
                "status": "in progress",
                "task_id": "abc123"
              }
            ],
            "type": "create aip",
            "workflow_id": "abc123"
          }
        ]
      },
      "properties": {
        "actions": {
          "$ref": "#/definitions/SIPPreservationActionResponseBodyCollection"
        }
      },
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sip.preservation-actions; view=default",
      "type": "object"
    },
    "IngestListSipsNotValidResponseBody": {
      "description": "list_sips_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestListSipsResponseBody": {
      "description": "list_sips_response_body result type (default view)",
      "example": {
        "items": [
          {
            "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "completed_at": "1970-01-01T00:00:01Z",
            "created_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "name": "abc123",
            "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
          }
        ],
        "page": {
          "limit": 1,
          "offset": 1,
          "total": 1
        }
      },
      "properties": {
        "items": {
          "$ref": "#/definitions/SIPResponseBodyCollection"
        },
        "page": {
          "$ref": "#/definitions/EnduroPageResponseBody"
        }
      },
      "required": [
        "items",
        "page"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sips; view=default",
      "type": "object"
    },
    "IngestMonitorNotAvailableResponseBody": {
      "description": "monitor_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestMonitorRequestNotAvailableResponseBody": {
      "description": "monitor_request_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestMonitorResponseBody": {
      "example": {
        "event": {
          "Type": "sip_created_event",
          "Value": "{\"id\":1,\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"id\":1,\"location_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"name\":\"abc123\",\"run_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"in progress\",\"workflow_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}}"
        }
      },
      "properties": {
        "event": {
          "example": {
            "Type": "sip_created_event",
            "Value": "{\"id\":1,\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"id\":1,\"location_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"name\":\"abc123\",\"run_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"in progress\",\"workflow_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}}"
          },
          "properties": {
            "Type": {
              "description": "Union type name, one of:\n- \"monitor_ping_event\"\n- \"sip_created_event\"\n- \"sip_updated_event\"\n- \"sip_status_updated_event\"\n- \"sip_location_updated_event\"\n- \"sip_preservation_action_created_event\"\n- \"sip_preservation_action_updated_event\"\n- \"sip_preservation_task_created_event\"\n- \"sip_preservation_task_updated_event\"",
              "enum": [
                "monitor_ping_event",
                "sip_created_event",
                "sip_updated_event",
                "sip_status_updated_event",
                "sip_location_updated_event",
                "sip_preservation_action_created_event",
                "sip_preservation_action_updated_event",
                "sip_preservation_task_created_event",
                "sip_preservation_task_updated_event"
              ],
              "example": "sip_created_event",
              "type": "string"
            },
            "Value": {
              "description": "JSON encoded union value",
              "example": "{\"id\":1,\"item\":{\"aip_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"completed_at\":\"1970-01-01T00:00:01Z\",\"created_at\":\"1970-01-01T00:00:01Z\",\"id\":1,\"location_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"name\":\"abc123\",\"run_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\",\"started_at\":\"1970-01-01T00:00:01Z\",\"status\":\"in progress\",\"workflow_id\":\"d1845cb6-a5ea-474a-9ab8-26f9bcd919f5\"}}",
              "type": "string"
            }
          },
          "required": [
            "Type",
            "Value"
          ],
          "type": "object"
        }
      },
      "title": "IngestMonitorResponseBody",
      "type": "object"
    },
    "IngestMoveSipNotAvailableResponseBody": {
      "description": "move_sip_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestMoveSipNotFoundResponseBody": {
      "description": "SIP not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing SIP",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "IngestMoveSipNotFoundResponseBody",
      "type": "object"
    },
    "IngestMoveSipNotValidResponseBody": {
      "description": "move_sip_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestMoveSipRequestBody": {
      "example": {
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        }
      },
      "required": [
        "location_id"
      ],
      "title": "IngestMoveSipRequestBody",
      "type": "object"
    },
    "IngestMoveSipStatusFailedDependencyResponseBody": {
      "description": "move_sip_status_failed_dependency_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestMoveSipStatusNotFoundResponseBody": {
      "description": "SIP not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing SIP",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "IngestMoveSipStatusNotFoundResponseBody",
      "type": "object"
    },
    "IngestMoveSipStatusResponseBody": {
      "example": {
        "done": false
      },
      "properties": {
        "done": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "done"
      ],
      "title": "IngestMoveSipStatusResponseBody",
      "type": "object"
    },
    "IngestRejectSipNotAvailableResponseBody": {
      "description": "reject_sip_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestRejectSipNotFoundResponseBody": {
      "description": "SIP not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing SIP",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "IngestRejectSipNotFoundResponseBody",
      "type": "object"
    },
    "IngestRejectSipNotValidResponseBody": {
      "description": "reject_sip_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestShowSipNotAvailableResponseBody": {
      "description": "show_sip_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestShowSipNotFoundResponseBody": {
      "description": "SIP not found",
      "example": {
        "id": 1,
        "message": "abc123"
      },
      "properties": {
        "id": {
          "description": "Identifier of missing SIP",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "id"
      ],
      "title": "IngestShowSipNotFoundResponseBody",
      "type": "object"
    },
    "IngestShowSipResponseBody": {
      "description": "show_sip_response_body result type (default view)",
      "example": {
        "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "completed_at": "1970-01-01T00:00:01Z",
        "created_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "completed_at": {
          "description": "Completion datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Identifier of SIP",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "description": "Name of the SIP",
          "example": "abc123",
          "type": "string"
        },
        "run_id": {
          "description": "Identifier of latest processing workflow run",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "started_at": {
          "description": "Start datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "default": "new",
          "description": "Status of the SIP",
          "enum": [
            "new",
            "in progress",
            "done",
            "error",
            "unknown",
            "queued",
            "abandoned",
            "pending"
          ],
          "example": "in progress",
          "type": "string"
        },
        "workflow_id": {
          "description": "Identifier of processing workflow",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sip; view=default",
      "type": "object"
    },
    "IngestUploadSipInternalErrorResponseBody": {
      "description": "Fault while processing upload. (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestUploadSipInvalidMediaTypeResponseBody": {
      "description": "Error returned when the Content-Type header does not define a multipart request. (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "IngestUploadSipInvalidMultipartRequestResponseBody": {
      "description": "Error returned when the request body is not a valid multipart content. (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "LocationResponse": {
      "description": "A Location describes a location retrieved by the storage service. (default view)",
      "example": {
        "created_at": "1970-01-01T00:00:01Z",
        "description": "abc123",
        "name": "abc123",
        "purpose": "aip_store",
        "source": "minio",
        "uuid": "abc123"
      },
      "properties": {
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "Description of the location",
          "example": "abc123",
          "type": "string"
        },
        "name": {
          "description": "Name of location",
          "example": "abc123",
          "type": "string"
        },
        "purpose": {
          "default": "unspecified",
          "description": "Purpose of the location",
          "enum": [
            "unspecified",
            "aip_store"
          ],
          "example": "aip_store",
          "type": "string"
        },
        "source": {
          "default": "unspecified",
          "description": "Data source of the location",
          "enum": [
            "unspecified",
            "minio",
            "sftp",
            "amss"
          ],
          "example": "minio",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name",
        "source",
        "purpose",
        "uuid",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage.location; view=default",
      "type": "object"
    },
    "SIPPreservationActionResponseBody": {
      "description": "SIPPreservationAction describes a preservation action of a SIP. (default view)",
      "example": {
        "completed_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "sip_id": 1,
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "tasks": [
          {
            "completed_at": "1970-01-01T00:00:01Z",
            "id": 1,
            "name": "abc123",
            "note": "abc123",
            "preservation_action_id": 1,
            "started_at": "1970-01-01T00:00:01Z",
            "status": "in progress",
            "task_id": "abc123"
          }
        ],
        "type": "create aip",
        "workflow_id": "abc123"
      },
      "properties": {
        "completed_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "sip_id": {
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "started_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "unspecified",
            "in progress",
            "done",
            "error",
            "queued",
            "pending"
          ],
          "example": "in progress",
          "type": "string"
        },
        "tasks": {
          "$ref": "#/definitions/SIPPreservationTaskResponseBodyCollection"
        },
        "type": {
          "enum": [
            "unspecified",
            "create aip",
            "create and review aip",
            "move package"
          ],
          "example": "create aip",
          "type": "string"
        },
        "workflow_id": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "id",
        "workflow_id",
        "type",
        "status",
        "started_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sip.preservation-action; view=default",
      "type": "object"
    },
    "SIPPreservationActionResponseBodyCollection": {
      "description": "SIPPreservationActionCollectionResponseBody is the result type for an array of SIPPreservationActionResponseBody (default view)",
      "example": [
        {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "sip_id": 1,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "tasks": [
            {
              "completed_at": "1970-01-01T00:00:01Z",
              "id": 1,
              "name": "abc123",
              "note": "abc123",
              "preservation_action_id": 1,
              "started_at": "1970-01-01T00:00:01Z",
              "status": "in progress",
              "task_id": "abc123"
            }
          ],
          "type": "create aip",
          "workflow_id": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/SIPPreservationActionResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sip.preservation-action; type=collection; view=default",
      "type": "array"
    },
    "SIPPreservationTaskResponseBody": {
      "description": "SIPPreservationTask describes a SIP preservation action task. (default view)",
      "example": {
        "completed_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "name": "abc123",
        "note": "abc123",
        "preservation_action_id": 1,
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "task_id": "abc123"
      },
      "properties": {
        "completed_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "note": {
          "example": "abc123",
          "type": "string"
        },
        "preservation_action_id": {
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "started_at": {
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "unspecified",
            "in progress",
            "done",
            "error",
            "queued",
            "pending"
          ],
          "example": "in progress",
          "type": "string"
        },
        "task_id": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "id",
        "task_id",
        "name",
        "status",
        "started_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sip.preservation-task; view=default",
      "type": "object"
    },
    "SIPPreservationTaskResponseBodyCollection": {
      "description": "SIPPreservationTaskCollectionResponseBody is the result type for an array of SIPPreservationTaskResponseBody (default view)",
      "example": [
        {
          "completed_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "name": "abc123",
          "note": "abc123",
          "preservation_action_id": 1,
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "task_id": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/SIPPreservationTaskResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sip.preservation-task; type=collection; view=default",
      "type": "array"
    },
    "SIPResponseBody": {
      "description": "SIP describes an ingest SIP type. (default view)",
      "example": {
        "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "completed_at": "1970-01-01T00:00:01Z",
        "created_at": "1970-01-01T00:00:01Z",
        "id": 1,
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "started_at": "1970-01-01T00:00:01Z",
        "status": "in progress",
        "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "aip_id": {
          "description": "Identifier of AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "completed_at": {
          "description": "Completion datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Identifier of SIP",
          "example": 1,
          "format": "int64",
          "type": "integer"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "description": "Name of the SIP",
          "example": "abc123",
          "type": "string"
        },
        "run_id": {
          "description": "Identifier of latest processing workflow run",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "started_at": {
          "description": "Start datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "default": "new",
          "description": "Status of the SIP",
          "enum": [
            "new",
            "in progress",
            "done",
            "error",
            "unknown",
            "queued",
            "abandoned",
            "pending"
          ],
          "example": "in progress",
          "type": "string"
        },
        "workflow_id": {
          "description": "Identifier of processing workflow",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sip; view=default",
      "type": "object"
    },
    "SIPResponseBodyCollection": {
      "description": "SIPCollectionResponseBody is the result type for an array of SIPResponseBody (default view)",
      "example": [
        {
          "aip_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "completed_at": "1970-01-01T00:00:01Z",
          "created_at": "1970-01-01T00:00:01Z",
          "id": 1,
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "run_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "started_at": "1970-01-01T00:00:01Z",
          "status": "in progress",
          "workflow_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
        }
      ],
      "items": {
        "$ref": "#/definitions/SIPResponseBody"
      },
      "title": "Mediatype identifier: application/vnd.enduro.ingest.sip; type=collection; view=default",
      "type": "array"
    },
    "StorageAIPResponseCollection": {
      "description": "list_location_aips_response_body is the result type for an array of AIPResponse (default view)",
      "example": [
        {
          "created_at": "1970-01-01T00:00:01Z",
          "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "name": "abc123",
          "object_key": "abc123",
          "status": "in_review",
          "uuid": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/AIPResponse"
      },
      "title": "Mediatype identifier: application/vnd.enduro.storage.aip; type=collection; view=default",
      "type": "array"
    },
    "StorageCreateAipNotValidResponseBody": {
      "description": "create_aip_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageCreateAipRequestBody": {
      "example": {
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "object_key": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "status": "in_review",
        "uuid": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "location_id": {
          "description": "Identifier of the AIP's storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "description": "Name of the AIP",
          "example": "abc123",
          "type": "string"
        },
        "object_key": {
          "description": "ObjectKey of the AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        },
        "status": {
          "default": "unspecified",
          "description": "Status of the the AIP",
          "enum": [
            "unspecified",
            "in_review",
            "rejected",
            "stored",
            "moving"
          ],
          "example": "in_review",
          "type": "string"
        },
        "uuid": {
          "description": "Identifier of the AIP",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "uuid",
        "name",
        "object_key"
      ],
      "title": "StorageCreateAipRequestBody",
      "type": "object"
    },
    "StorageCreateAipResponseBody": {
      "description": "create_aip_response_body result type (default view)",
      "example": {
        "created_at": "1970-01-01T00:00:01Z",
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "object_key": "abc123",
        "status": "in_review",
        "uuid": "abc123"
      },
      "properties": {
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "object_key": {
          "example": "abc123",
          "type": "string"
        },
        "status": {
          "default": "unspecified",
          "description": "Status of the AIP",
          "enum": [
            "unspecified",
            "in_review",
            "rejected",
            "stored",
            "moving"
          ],
          "example": "in_review",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name",
        "uuid",
        "status",
        "object_key",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage.aip; view=default",
      "type": "object"
    },
    "StorageCreateLocationNotValidResponseBody": {
      "description": "create_location_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageCreateLocationRequestBody": {
      "example": {
        "config": {
          "Type": "s3",
          "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
        },
        "description": "abc123",
        "name": "abc123",
        "purpose": "aip_store",
        "source": "minio"
      },
      "properties": {
        "config": {
          "example": {
            "Type": "s3",
            "Value": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}"
          },
          "properties": {
            "Type": {
              "description": "Union type name, one of:\n- \"amss\"\n- \"s3\"\n- \"sftp\"\n- \"url\"",
              "enum": [
                "amss",
                "s3",
                "sftp",
                "url"
              ],
              "example": "s3",
              "type": "string"
            },
            "Value": {
              "description": "JSON encoded union value",
              "example": "{\"bucket\":\"abc123\",\"endpoint\":\"abc123\",\"key\":\"abc123\",\"path_style\":false,\"profile\":\"abc123\",\"region\":\"abc123\",\"secret\":\"abc123\",\"token\":\"abc123\"}",
              "type": "string"
            }
          },
          "required": [
            "Type",
            "Value"
          ],
          "type": "object"
        },
        "description": {
          "example": "abc123",
          "type": "string"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "purpose": {
          "enum": [
            "unspecified",
            "aip_store"
          ],
          "example": "aip_store",
          "type": "string"
        },
        "source": {
          "enum": [
            "unspecified",
            "minio",
            "sftp",
            "amss"
          ],
          "example": "minio",
          "type": "string"
        }
      },
      "required": [
        "name",
        "source",
        "purpose"
      ],
      "title": "StorageCreateLocationRequestBody",
      "type": "object"
    },
    "StorageCreateLocationResponseBody": {
      "example": {
        "uuid": "abc123"
      },
      "properties": {
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "uuid"
      ],
      "title": "StorageCreateLocationResponseBody",
      "type": "object"
    },
    "StorageDownloadAipNotFoundResponseBody": {
      "description": "AIP not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "description": "Identifier of missing AIP",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageDownloadAipNotFoundResponseBody",
      "type": "object"
    },
    "StorageListLocationAipsNotFoundResponseBody": {
      "description": "Storage location not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageListLocationAipsNotFoundResponseBody",
      "type": "object"
    },
    "StorageListLocationAipsNotValidResponseBody": {
      "description": "list_location_aips_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageLocationResponseCollection": {
      "description": "list_locations_response_body is the result type for an array of LocationResponse (default view)",
      "example": [
        {
          "created_at": "1970-01-01T00:00:01Z",
          "description": "abc123",
          "name": "abc123",
          "purpose": "aip_store",
          "source": "minio",
          "uuid": "abc123"
        }
      ],
      "items": {
        "$ref": "#/definitions/LocationResponse"
      },
      "title": "Mediatype identifier: application/vnd.enduro.storage.location; type=collection; view=default",
      "type": "array"
    },
    "StorageMoveAipNotAvailableResponseBody": {
      "description": "move_aip_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageMoveAipNotFoundResponseBody": {
      "description": "AIP not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "description": "Identifier of missing AIP",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageMoveAipNotFoundResponseBody",
      "type": "object"
    },
    "StorageMoveAipNotValidResponseBody": {
      "description": "move_aip_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageMoveAipRequestBody": {
      "example": {
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5"
      },
      "properties": {
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        }
      },
      "required": [
        "location_id"
      ],
      "title": "StorageMoveAipRequestBody",
      "type": "object"
    },
    "StorageMoveAipStatusFailedDependencyResponseBody": {
      "description": "move_aip_status_failed_dependency_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageMoveAipStatusNotFoundResponseBody": {
      "description": "AIP not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "description": "Identifier of missing AIP",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageMoveAipStatusNotFoundResponseBody",
      "type": "object"
    },
    "StorageMoveAipStatusResponseBody": {
      "example": {
        "done": false
      },
      "properties": {
        "done": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "done"
      ],
      "title": "StorageMoveAipStatusResponseBody",
      "type": "object"
    },
    "StorageRejectAipNotAvailableResponseBody": {
      "description": "reject_aip_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageRejectAipNotFoundResponseBody": {
      "description": "AIP not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "description": "Identifier of missing AIP",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageRejectAipNotFoundResponseBody",
      "type": "object"
    },
    "StorageRejectAipNotValidResponseBody": {
      "description": "reject_aip_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageShowAipNotFoundResponseBody": {
      "description": "AIP not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "description": "Identifier of missing AIP",
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageShowAipNotFoundResponseBody",
      "type": "object"
    },
    "StorageShowAipResponseBody": {
      "description": "show_aip_response_body result type (default view)",
      "example": {
        "created_at": "1970-01-01T00:00:01Z",
        "location_id": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
        "name": "abc123",
        "object_key": "abc123",
        "status": "in_review",
        "uuid": "abc123"
      },
      "properties": {
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "location_id": {
          "description": "Identifier of storage location",
          "example": "d1845cb6-a5ea-474a-9ab8-26f9bcd919f5",
          "type": "string"
        },
        "name": {
          "example": "abc123",
          "type": "string"
        },
        "object_key": {
          "example": "abc123",
          "type": "string"
        },
        "status": {
          "default": "unspecified",
          "description": "Status of the AIP",
          "enum": [
            "unspecified",
            "in_review",
            "rejected",
            "stored",
            "moving"
          ],
          "example": "in_review",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name",
        "uuid",
        "status",
        "object_key",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage.aip; view=default",
      "type": "object"
    },
    "StorageShowLocationNotFoundResponseBody": {
      "description": "Storage location not found",
      "example": {
        "message": "abc123",
        "uuid": "abc123"
      },
      "properties": {
        "message": {
          "description": "Message of error",
          "example": "abc123",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "message",
        "uuid"
      ],
      "title": "StorageShowLocationNotFoundResponseBody",
      "type": "object"
    },
    "StorageShowLocationResponseBody": {
      "description": "show_location_response_body result type (default view)",
      "example": {
        "created_at": "1970-01-01T00:00:01Z",
        "description": "abc123",
        "name": "abc123",
        "purpose": "aip_store",
        "source": "minio",
        "uuid": "abc123"
      },
      "properties": {
        "created_at": {
          "description": "Creation datetime",
          "example": "1970-01-01T00:00:01Z",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "Description of the location",
          "example": "abc123",
          "type": "string"
        },
        "name": {
          "description": "Name of location",
          "example": "abc123",
          "type": "string"
        },
        "purpose": {
          "default": "unspecified",
          "description": "Purpose of the location",
          "enum": [
            "unspecified",
            "aip_store"
          ],
          "example": "aip_store",
          "type": "string"
        },
        "source": {
          "default": "unspecified",
          "description": "Data source of the location",
          "enum": [
            "unspecified",
            "minio",
            "sftp",
            "amss"
          ],
          "example": "minio",
          "type": "string"
        },
        "uuid": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name",
        "source",
        "purpose",
        "uuid",
        "created_at"
      ],
      "title": "Mediatype identifier: application/vnd.enduro.storage.location; view=default",
      "type": "object"
    },
    "StorageSubmitAipNotAvailableResponseBody": {
      "description": "submit_aip_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageSubmitAipNotValidResponseBody": {
      "description": "submit_aip_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageSubmitAipRequestBody": {
      "example": {
        "name": "abc123"
      },
      "properties": {
        "name": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "StorageSubmitAipRequestBody",
      "type": "object"
    },
    "StorageSubmitAipResponseBody": {
      "example": {
        "url": "abc123"
      },
      "properties": {
        "url": {
          "example": "abc123",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "title": "StorageSubmitAipResponseBody",
      "type": "object"
    },
    "StorageUpdateAipNotAvailableResponseBody": {
      "description": "update_aip_not_available_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    },
    "StorageUpdateAipNotValidResponseBody": {
      "description": "update_aip_not_valid_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "properties": {
        "fault": {
          "description": "Is the error a server-side fault?",
          "example": false,
          "type": "boolean"
        },
        "id": {
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc",
          "type": "string"
        },
        "message": {
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of this class of errors.",
          "example": "bad_request",
          "type": "string"
        },
        "temporary": {
          "description": "Is the error temporary?",
          "example": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "Is the error a timeout?",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ],
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object"
    }
  },
  "host": "localhost:9000",
  "info": {
    "title": "Enduro API",
    "version": "0.0.1"
  },
  "paths": {
    "/about": {
      "get": {
        "description": "Get information about the system",
        "operationId": "about#about",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AboutAboutResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "about about",
        "tags": [
          "about"
        ]
      }
    },
    "/ingest/monitor": {
      "get": {
        "description": "Obtain access to the /monitor WebSocket",
        "operationId": "ingest#monitor",
        "responses": {
          "101": {
            "description": "Switching Protocols response.",
            "schema": {
              "$ref": "#/definitions/IngestMonitorResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IngestMonitorNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "ws"
        ],
        "summary": "monitor ingest",
        "tags": [
          "ingest"
        ]
      },
      "post": {
        "description": "Request access to the /monitor WebSocket\n\n**Required security scopes for jwt**:\n  * `ingest:sips:list`\n  * `ingest:sips:actions:list`\n  * `ingest:sips:move`\n  * `ingest:sips:read`\n  * `ingest:sips:review`\n  * `ingest:sips:upload`",
        "operationId": "ingest#monitor_request",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IngestMonitorRequestNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "monitor_request ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips": {
      "get": {
        "description": "List all ingested SIPs\n\n**Required security scopes for jwt**:\n  * `ingest:sips:list`",
        "operationId": "ingest#list_sips",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "query",
            "name": "aip_id",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "earliest_created_time",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "latest_created_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Identifier of storage location",
            "format": "uuid",
            "in": "query",
            "name": "location_id",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "new",
              "in progress",
              "done",
              "error",
              "unknown",
              "queued",
              "abandoned",
              "pending"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Limit number of results to return",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Offset from the beginning of the found set",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IngestListSipsResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IngestListSipsNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "list_sips ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/upload": {
      "post": {
        "description": "Upload a SIP to trigger an ingest workflow\n\n**Required security scopes for jwt**:\n  * `ingest:sips:upload`",
        "operationId": "ingest#upload_sip",
        "parameters": [
          {
            "default": "multipart/form-data; boundary=goa",
            "description": "Content-Type header, must define value for multipart boundary.",
            "in": "header",
            "name": "Content-Type",
            "pattern": "multipart/[^;]+; boundary=.+",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IngestUploadSipInvalidMultipartRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IngestUploadSipInternalErrorResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "upload_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{id}": {
      "get": {
        "description": "Show SIP by ID\n\n**Required security scopes for jwt**:\n  * `ingest:sips:read`",
        "operationId": "ingest#show_sip",
        "parameters": [
          {
            "description": "Identifier of SIP to show",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IngestShowSipResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IngestShowSipNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/IngestShowSipNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "show_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{id}/confirm": {
      "post": {
        "description": "Signal the SIP has been reviewed and accepted\n\n**Required security scopes for jwt**:\n  * `ingest:sips:review`",
        "operationId": "ingest#confirm_sip",
        "parameters": [
          {
            "description": "Identifier of SIP to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "confirm_sip_request_body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IngestConfirmSipRequestBody",
              "required": [
                "location_id"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IngestConfirmSipNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IngestConfirmSipNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/IngestConfirmSipNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "confirm_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{id}/move": {
      "get": {
        "description": "Retrieve the status of a permanent storage location move of the SIP\n\n**Required security scopes for jwt**:\n  * `ingest:sips:move`",
        "operationId": "ingest#move_sip_status",
        "parameters": [
          {
            "description": "Identifier of SIP to move",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IngestMoveSipStatusResponseBody",
              "required": [
                "done"
              ]
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IngestMoveSipStatusNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "424": {
            "description": "Failed Dependency response.",
            "schema": {
              "$ref": "#/definitions/IngestMoveSipStatusFailedDependencyResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "move_sip_status ingest",
        "tags": [
          "ingest"
        ]
      },
      "post": {
        "description": "Move a SIP to a permanent storage location\n\n**Required security scopes for jwt**:\n  * `ingest:sips:move`",
        "operationId": "ingest#move_sip",
        "parameters": [
          {
            "description": "Identifier of SIP to move",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "move_sip_request_body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IngestMoveSipRequestBody",
              "required": [
                "location_id"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IngestMoveSipNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IngestMoveSipNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/IngestMoveSipNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "move_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{id}/preservation-actions": {
      "get": {
        "description": "List all preservation actions for a SIP\n\n**Required security scopes for jwt**:\n  * `ingest:sips:actions:list`",
        "operationId": "ingest#list_sip_preservation_actions",
        "parameters": [
          {
            "description": "Identifier of SIP to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IngestListSipPreservationActionsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IngestListSipPreservationActionsNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "list_sip_preservation_actions ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/ingest/sips/{id}/reject": {
      "post": {
        "description": "Signal the SIP has been reviewed and rejected\n\n**Required security scopes for jwt**:\n  * `ingest:sips:review`",
        "operationId": "ingest#reject_sip",
        "parameters": [
          {
            "description": "Identifier of SIP to look up",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IngestRejectSipNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IngestRejectSipNotFoundResponseBody",
              "required": [
                "message",
                "id"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/IngestRejectSipNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "reject_sip ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/storage/aips": {
      "post": {
        "description": "Create a new AIP\n\n**Required security scopes for jwt**:\n  * `storage:aips:create`",
        "operationId": "storage#create_aip",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "create_aip_request_body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageCreateAipRequestBody",
              "required": [
                "uuid",
                "name",
                "object_key"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageCreateAipResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageCreateAipNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "create_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}": {
      "get": {
        "description": "Show AIP by AIPID\n\n**Required security scopes for jwt**:\n  * `storage:aips:read`",
        "operationId": "storage#show_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageShowAipResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageShowAipNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "show_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/download": {
      "get": {
        "description": "Download AIP by AIPID\n\n**Required security scopes for jwt**:\n  * `storage:aips:download`",
        "operationId": "storage#download_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageDownloadAipNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "download_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/reject": {
      "post": {
        "description": "Reject an AIP\n\n**Required security scopes for jwt**:\n  * `storage:aips:review`",
        "operationId": "storage#reject_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageRejectAipNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageRejectAipNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/StorageRejectAipNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "reject_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/store": {
      "get": {
        "description": "Retrieve the status of a permanent storage location move of the AIP\n\n**Required security scopes for jwt**:\n  * `storage:aips:move`",
        "operationId": "storage#move_aip_status",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveAipStatusResponseBody",
              "required": [
                "done"
              ]
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveAipStatusNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          },
          "424": {
            "description": "Failed Dependency response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveAipStatusFailedDependencyResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "move_aip_status storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Move an AIP to a permanent storage location\n\n**Required security scopes for jwt**:\n  * `storage:aips:move`",
        "operationId": "storage#move_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "move_aip_request_body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageMoveAipRequestBody",
              "required": [
                "location_id"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveAipNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveAipNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/StorageMoveAipNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "move_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/submit": {
      "post": {
        "description": "Start the submission of an AIP\n\n**Required security scopes for jwt**:\n  * `storage:aips:submit`",
        "operationId": "storage#submit_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "submit_aip_request_body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageSubmitAipRequestBody",
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response.",
            "schema": {
              "$ref": "#/definitions/StorageSubmitAipResponseBody",
              "required": [
                "url"
              ]
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageSubmitAipNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/StorageSubmitAipNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "submit_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/aips/{uuid}/update": {
      "post": {
        "description": "Signal that an AIP submission is complete\n\n**Required security scopes for jwt**:\n  * `storage:aips:submit`",
        "operationId": "storage#update_aip",
        "parameters": [
          {
            "description": "Identifier of AIP",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageUpdateAipNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/StorageUpdateAipNotAvailableResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "update_aip storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/locations": {
      "get": {
        "description": "List locations\n\n**Required security scopes for jwt**:\n  * `storage:locations:list`",
        "operationId": "storage#list_locations",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageLocationResponseCollection"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "list_locations storage",
        "tags": [
          "storage"
        ]
      },
      "post": {
        "description": "Create a storage location\n\n**Required security scopes for jwt**:\n  * `storage:locations:create`",
        "operationId": "storage#create_location",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "create_location_request_body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageCreateLocationRequestBody",
              "required": [
                "name",
                "source",
                "purpose"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created response.",
            "schema": {
              "$ref": "#/definitions/StorageCreateLocationResponseBody",
              "required": [
                "uuid"
              ]
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageCreateLocationNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "create_location storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/locations/{uuid}": {
      "get": {
        "description": "Show location by UUID\n\n**Required security scopes for jwt**:\n  * `storage:locations:read`",
        "operationId": "storage#show_location",
        "parameters": [
          {
            "description": "Identifier of location",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageShowLocationResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageShowLocationNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "show_location storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/storage/locations/{uuid}/aips": {
      "get": {
        "description": "List all the AIPs stored in the location with UUID\n\n**Required security scopes for jwt**:\n  * `storage:locations:aips:list`",
        "operationId": "storage#list_location_aips",
        "parameters": [
          {
            "description": "Identifier of location",
            "format": "uuid",
            "in": "path",
            "name": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/StorageAIPResponseCollection"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/StorageListLocationAipsNotValidResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/StorageListLocationAipsNotFoundResponseBody",
              "required": [
                "message",
                "uuid"
              ]
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "jwt_header_Authorization": []
          }
        ],
        "summary": "list_location_aips storage",
        "tags": [
          "storage"
        ]
      }
    },
    "/swagger/swagger.json": {
      "get": {
        "description": "JSON document containing the API swagger definition.",
        "operationId": "swagger#/swagger/swagger.json",
        "responses": {
          "200": {
            "description": "File downloaded",
            "schema": {
              "type": "file"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "summary": "Download gen/http/openapi.json",
        "tags": [
          "swagger"
        ]
      }
    }
  },
  "produces": [
    "application/json",
    "application/xml",
    "application/gob"
  ],
  "securityDefinitions": {
    "jwt_header_Authorization": {
      "description": "Secures endpoint by requiring a valid JWT token.\n\n**Security Scopes**:\n  * `ingest:sips:actions:list`: no description\n  * `ingest:sips:list`: no description\n  * `ingest:sips:move`: no description\n  * `ingest:sips:read`: no description\n  * `ingest:sips:review`: no description\n  * `ingest:sips:upload`: no description\n  * `storage:aips:create`: no description\n  * `storage:aips:download`: no description\n  * `storage:aips:move`: no description\n  * `storage:aips:read`: no description\n  * `storage:aips:review`: no description\n  * `storage:aips:submit`: no description\n  * `storage:locations:aips:list`: no description\n  * `storage:locations:create`: no description\n  * `storage:locations:list`: no description\n  * `storage:locations:read`: no description",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}
