// Code generated by goa v3.7.6, DO NOT EDIT.
//
// storage endpoints
//
// Command:
// $ goa-v3.7.6 gen github.com/artefactual-labs/enduro/internal/api/design -o
// internal/api

package storage

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "storage" service endpoints.
type Endpoints struct {
	Submit goa.Endpoint
	Update goa.Endpoint
}

// NewEndpoints wraps the methods of the "storage" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Submit: NewSubmitEndpoint(s),
		Update: NewUpdateEndpoint(s),
	}
}

// Use applies the given middleware to all the "storage" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Submit = m(e.Submit)
	e.Update = m(e.Update)
}

// NewSubmitEndpoint returns an endpoint function that calls the method
// "submit" of service "storage".
func NewSubmitEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.Submit(ctx)
	}
}

// NewUpdateEndpoint returns an endpoint function that calls the method
// "update" of service "storage".
func NewUpdateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*UpdatePayload)
		return s.Update(ctx, p)
	}
}
