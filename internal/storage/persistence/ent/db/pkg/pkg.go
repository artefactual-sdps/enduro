// Code generated by ent, DO NOT EDIT.

package pkg

import (
	"fmt"

	"github.com/artefactual-sdps/enduro/internal/storage/status"
)

const (
	// Label holds the string label denoting the pkg type in the database.
	Label = "pkg"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAipID holds the string denoting the aip_id field in the database.
	FieldAipID = "aip_id"
	// FieldLocation holds the string denoting the location field in the database.
	FieldLocation = "location"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldObjectKey holds the string denoting the object_key field in the database.
	FieldObjectKey = "object_key"
	// Table holds the table name of the pkg in the database.
	Table = "package"
)

// Columns holds all SQL columns for pkg fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldAipID,
	FieldLocation,
	FieldStatus,
	FieldObjectKey,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// StatusValidator is a validator for the "status" field enum values. It is called by the builders before save.
func StatusValidator(s status.PackageStatus) error {
	switch s.String() {
	case "unspecified", "in_review", "rejected", "stored", "moving":
		return nil
	default:
		return fmt.Errorf("pkg: invalid enum value for status field: %q", s)
	}
}
