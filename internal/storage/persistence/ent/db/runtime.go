// Code generated by ent, DO NOT EDIT.

package db

import (
	"time"

	"github.com/artefactual-sdps/enduro/internal/storage/persistence/ent/db/aip"
	"github.com/artefactual-sdps/enduro/internal/storage/persistence/ent/db/deletionrequest"
	"github.com/artefactual-sdps/enduro/internal/storage/persistence/ent/db/location"
	"github.com/artefactual-sdps/enduro/internal/storage/persistence/ent/db/task"
	"github.com/artefactual-sdps/enduro/internal/storage/persistence/ent/db/workflow"
	"github.com/artefactual-sdps/enduro/internal/storage/persistence/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	aipFields := schema.AIP{}.Fields()
	_ = aipFields
	// aipDescCreatedAt is the schema descriptor for created_at field.
	aipDescCreatedAt := aipFields[5].Descriptor()
	// aip.DefaultCreatedAt holds the default value on creation for the created_at field.
	aip.DefaultCreatedAt = aipDescCreatedAt.Default.(func() time.Time)
	deletionrequestFields := schema.DeletionRequest{}.Fields()
	_ = deletionrequestFields
	// deletionrequestDescRequestedAt is the schema descriptor for requested_at field.
	deletionrequestDescRequestedAt := deletionrequestFields[9].Descriptor()
	// deletionrequest.DefaultRequestedAt holds the default value on creation for the requested_at field.
	deletionrequest.DefaultRequestedAt = deletionrequestDescRequestedAt.Default.(func() time.Time)
	// deletionrequestDescAipID is the schema descriptor for aip_id field.
	deletionrequestDescAipID := deletionrequestFields[11].Descriptor()
	// deletionrequest.AipIDValidator is a validator for the "aip_id" field. It is called by the builders before save.
	deletionrequest.AipIDValidator = deletionrequestDescAipID.Validators[0].(func(int) error)
	// deletionrequestDescWorkflowID is the schema descriptor for workflow_id field.
	deletionrequestDescWorkflowID := deletionrequestFields[12].Descriptor()
	// deletionrequest.WorkflowIDValidator is a validator for the "workflow_id" field. It is called by the builders before save.
	deletionrequest.WorkflowIDValidator = deletionrequestDescWorkflowID.Validators[0].(func(int) error)
	locationFields := schema.Location{}.Fields()
	_ = locationFields
	// locationDescCreatedAt is the schema descriptor for created_at field.
	locationDescCreatedAt := locationFields[6].Descriptor()
	// location.DefaultCreatedAt holds the default value on creation for the created_at field.
	location.DefaultCreatedAt = locationDescCreatedAt.Default.(func() time.Time)
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescWorkflowID is the schema descriptor for workflow_id field.
	taskDescWorkflowID := taskFields[6].Descriptor()
	// task.WorkflowIDValidator is a validator for the "workflow_id" field. It is called by the builders before save.
	task.WorkflowIDValidator = taskDescWorkflowID.Validators[0].(func(int) error)
	workflowFields := schema.Workflow{}.Fields()
	_ = workflowFields
	// workflowDescAipID is the schema descriptor for aip_id field.
	workflowDescAipID := workflowFields[6].Descriptor()
	// workflow.AipIDValidator is a validator for the "aip_id" field. It is called by the builders before save.
	workflow.AipIDValidator = workflowDescAipID.Validators[0].(func(int) error)
}
