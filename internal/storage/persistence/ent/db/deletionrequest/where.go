// Code generated by ent, DO NOT EDIT.

package deletionrequest

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/artefactual-sdps/enduro/internal/storage/enums"
	"github.com/artefactual-sdps/enduro/internal/storage/persistence/ent/db/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldID, id))
}

// UUID applies equality check predicate on the "uuid" field. It's identical to UUIDEQ.
func UUID(v uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldUUID, v))
}

// Requester applies equality check predicate on the "requester" field. It's identical to RequesterEQ.
func Requester(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldRequester, v))
}

// RequesterIss applies equality check predicate on the "requester_iss" field. It's identical to RequesterIssEQ.
func RequesterIss(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldRequesterIss, v))
}

// RequesterSub applies equality check predicate on the "requester_sub" field. It's identical to RequesterSubEQ.
func RequesterSub(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldRequesterSub, v))
}

// Reviewer applies equality check predicate on the "reviewer" field. It's identical to ReviewerEQ.
func Reviewer(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReviewer, v))
}

// ReviewerIss applies equality check predicate on the "reviewer_iss" field. It's identical to ReviewerIssEQ.
func ReviewerIss(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReviewerIss, v))
}

// ReviewerSub applies equality check predicate on the "reviewer_sub" field. It's identical to ReviewerSubEQ.
func ReviewerSub(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReviewerSub, v))
}

// Reason applies equality check predicate on the "reason" field. It's identical to ReasonEQ.
func Reason(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReason, v))
}

// RequestedAt applies equality check predicate on the "requested_at" field. It's identical to RequestedAtEQ.
func RequestedAt(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldRequestedAt, v))
}

// ReviewedAt applies equality check predicate on the "reviewed_at" field. It's identical to ReviewedAtEQ.
func ReviewedAt(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReviewedAt, v))
}

// AipID applies equality check predicate on the "aip_id" field. It's identical to AipIDEQ.
func AipID(v int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldAipID, v))
}

// WorkflowID applies equality check predicate on the "workflow_id" field. It's identical to WorkflowIDEQ.
func WorkflowID(v int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldWorkflowID, v))
}

// UUIDEQ applies the EQ predicate on the "uuid" field.
func UUIDEQ(v uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "uuid" field.
func UUIDNEQ(v uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "uuid" field.
func UUIDIn(vs ...uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "uuid" field.
func UUIDNotIn(vs ...uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "uuid" field.
func UUIDGT(v uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "uuid" field.
func UUIDGTE(v uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "uuid" field.
func UUIDLT(v uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "uuid" field.
func UUIDLTE(v uuid.UUID) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldUUID, v))
}

// RequesterEQ applies the EQ predicate on the "requester" field.
func RequesterEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldRequester, v))
}

// RequesterNEQ applies the NEQ predicate on the "requester" field.
func RequesterNEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldRequester, v))
}

// RequesterIn applies the In predicate on the "requester" field.
func RequesterIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldRequester, vs...))
}

// RequesterNotIn applies the NotIn predicate on the "requester" field.
func RequesterNotIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldRequester, vs...))
}

// RequesterGT applies the GT predicate on the "requester" field.
func RequesterGT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldRequester, v))
}

// RequesterGTE applies the GTE predicate on the "requester" field.
func RequesterGTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldRequester, v))
}

// RequesterLT applies the LT predicate on the "requester" field.
func RequesterLT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldRequester, v))
}

// RequesterLTE applies the LTE predicate on the "requester" field.
func RequesterLTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldRequester, v))
}

// RequesterContains applies the Contains predicate on the "requester" field.
func RequesterContains(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContains(FieldRequester, v))
}

// RequesterHasPrefix applies the HasPrefix predicate on the "requester" field.
func RequesterHasPrefix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasPrefix(FieldRequester, v))
}

// RequesterHasSuffix applies the HasSuffix predicate on the "requester" field.
func RequesterHasSuffix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasSuffix(FieldRequester, v))
}

// RequesterEqualFold applies the EqualFold predicate on the "requester" field.
func RequesterEqualFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEqualFold(FieldRequester, v))
}

// RequesterContainsFold applies the ContainsFold predicate on the "requester" field.
func RequesterContainsFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContainsFold(FieldRequester, v))
}

// RequesterIssEQ applies the EQ predicate on the "requester_iss" field.
func RequesterIssEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldRequesterIss, v))
}

// RequesterIssNEQ applies the NEQ predicate on the "requester_iss" field.
func RequesterIssNEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldRequesterIss, v))
}

// RequesterIssIn applies the In predicate on the "requester_iss" field.
func RequesterIssIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldRequesterIss, vs...))
}

// RequesterIssNotIn applies the NotIn predicate on the "requester_iss" field.
func RequesterIssNotIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldRequesterIss, vs...))
}

// RequesterIssGT applies the GT predicate on the "requester_iss" field.
func RequesterIssGT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldRequesterIss, v))
}

// RequesterIssGTE applies the GTE predicate on the "requester_iss" field.
func RequesterIssGTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldRequesterIss, v))
}

// RequesterIssLT applies the LT predicate on the "requester_iss" field.
func RequesterIssLT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldRequesterIss, v))
}

// RequesterIssLTE applies the LTE predicate on the "requester_iss" field.
func RequesterIssLTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldRequesterIss, v))
}

// RequesterIssContains applies the Contains predicate on the "requester_iss" field.
func RequesterIssContains(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContains(FieldRequesterIss, v))
}

// RequesterIssHasPrefix applies the HasPrefix predicate on the "requester_iss" field.
func RequesterIssHasPrefix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasPrefix(FieldRequesterIss, v))
}

// RequesterIssHasSuffix applies the HasSuffix predicate on the "requester_iss" field.
func RequesterIssHasSuffix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasSuffix(FieldRequesterIss, v))
}

// RequesterIssEqualFold applies the EqualFold predicate on the "requester_iss" field.
func RequesterIssEqualFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEqualFold(FieldRequesterIss, v))
}

// RequesterIssContainsFold applies the ContainsFold predicate on the "requester_iss" field.
func RequesterIssContainsFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContainsFold(FieldRequesterIss, v))
}

// RequesterSubEQ applies the EQ predicate on the "requester_sub" field.
func RequesterSubEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldRequesterSub, v))
}

// RequesterSubNEQ applies the NEQ predicate on the "requester_sub" field.
func RequesterSubNEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldRequesterSub, v))
}

// RequesterSubIn applies the In predicate on the "requester_sub" field.
func RequesterSubIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldRequesterSub, vs...))
}

// RequesterSubNotIn applies the NotIn predicate on the "requester_sub" field.
func RequesterSubNotIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldRequesterSub, vs...))
}

// RequesterSubGT applies the GT predicate on the "requester_sub" field.
func RequesterSubGT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldRequesterSub, v))
}

// RequesterSubGTE applies the GTE predicate on the "requester_sub" field.
func RequesterSubGTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldRequesterSub, v))
}

// RequesterSubLT applies the LT predicate on the "requester_sub" field.
func RequesterSubLT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldRequesterSub, v))
}

// RequesterSubLTE applies the LTE predicate on the "requester_sub" field.
func RequesterSubLTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldRequesterSub, v))
}

// RequesterSubContains applies the Contains predicate on the "requester_sub" field.
func RequesterSubContains(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContains(FieldRequesterSub, v))
}

// RequesterSubHasPrefix applies the HasPrefix predicate on the "requester_sub" field.
func RequesterSubHasPrefix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasPrefix(FieldRequesterSub, v))
}

// RequesterSubHasSuffix applies the HasSuffix predicate on the "requester_sub" field.
func RequesterSubHasSuffix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasSuffix(FieldRequesterSub, v))
}

// RequesterSubEqualFold applies the EqualFold predicate on the "requester_sub" field.
func RequesterSubEqualFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEqualFold(FieldRequesterSub, v))
}

// RequesterSubContainsFold applies the ContainsFold predicate on the "requester_sub" field.
func RequesterSubContainsFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContainsFold(FieldRequesterSub, v))
}

// ReviewerEQ applies the EQ predicate on the "reviewer" field.
func ReviewerEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReviewer, v))
}

// ReviewerNEQ applies the NEQ predicate on the "reviewer" field.
func ReviewerNEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldReviewer, v))
}

// ReviewerIn applies the In predicate on the "reviewer" field.
func ReviewerIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldReviewer, vs...))
}

// ReviewerNotIn applies the NotIn predicate on the "reviewer" field.
func ReviewerNotIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldReviewer, vs...))
}

// ReviewerGT applies the GT predicate on the "reviewer" field.
func ReviewerGT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldReviewer, v))
}

// ReviewerGTE applies the GTE predicate on the "reviewer" field.
func ReviewerGTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldReviewer, v))
}

// ReviewerLT applies the LT predicate on the "reviewer" field.
func ReviewerLT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldReviewer, v))
}

// ReviewerLTE applies the LTE predicate on the "reviewer" field.
func ReviewerLTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldReviewer, v))
}

// ReviewerContains applies the Contains predicate on the "reviewer" field.
func ReviewerContains(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContains(FieldReviewer, v))
}

// ReviewerHasPrefix applies the HasPrefix predicate on the "reviewer" field.
func ReviewerHasPrefix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasPrefix(FieldReviewer, v))
}

// ReviewerHasSuffix applies the HasSuffix predicate on the "reviewer" field.
func ReviewerHasSuffix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasSuffix(FieldReviewer, v))
}

// ReviewerIsNil applies the IsNil predicate on the "reviewer" field.
func ReviewerIsNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIsNull(FieldReviewer))
}

// ReviewerNotNil applies the NotNil predicate on the "reviewer" field.
func ReviewerNotNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotNull(FieldReviewer))
}

// ReviewerEqualFold applies the EqualFold predicate on the "reviewer" field.
func ReviewerEqualFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEqualFold(FieldReviewer, v))
}

// ReviewerContainsFold applies the ContainsFold predicate on the "reviewer" field.
func ReviewerContainsFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContainsFold(FieldReviewer, v))
}

// ReviewerIssEQ applies the EQ predicate on the "reviewer_iss" field.
func ReviewerIssEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReviewerIss, v))
}

// ReviewerIssNEQ applies the NEQ predicate on the "reviewer_iss" field.
func ReviewerIssNEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldReviewerIss, v))
}

// ReviewerIssIn applies the In predicate on the "reviewer_iss" field.
func ReviewerIssIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldReviewerIss, vs...))
}

// ReviewerIssNotIn applies the NotIn predicate on the "reviewer_iss" field.
func ReviewerIssNotIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldReviewerIss, vs...))
}

// ReviewerIssGT applies the GT predicate on the "reviewer_iss" field.
func ReviewerIssGT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldReviewerIss, v))
}

// ReviewerIssGTE applies the GTE predicate on the "reviewer_iss" field.
func ReviewerIssGTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldReviewerIss, v))
}

// ReviewerIssLT applies the LT predicate on the "reviewer_iss" field.
func ReviewerIssLT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldReviewerIss, v))
}

// ReviewerIssLTE applies the LTE predicate on the "reviewer_iss" field.
func ReviewerIssLTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldReviewerIss, v))
}

// ReviewerIssContains applies the Contains predicate on the "reviewer_iss" field.
func ReviewerIssContains(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContains(FieldReviewerIss, v))
}

// ReviewerIssHasPrefix applies the HasPrefix predicate on the "reviewer_iss" field.
func ReviewerIssHasPrefix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasPrefix(FieldReviewerIss, v))
}

// ReviewerIssHasSuffix applies the HasSuffix predicate on the "reviewer_iss" field.
func ReviewerIssHasSuffix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasSuffix(FieldReviewerIss, v))
}

// ReviewerIssIsNil applies the IsNil predicate on the "reviewer_iss" field.
func ReviewerIssIsNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIsNull(FieldReviewerIss))
}

// ReviewerIssNotNil applies the NotNil predicate on the "reviewer_iss" field.
func ReviewerIssNotNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotNull(FieldReviewerIss))
}

// ReviewerIssEqualFold applies the EqualFold predicate on the "reviewer_iss" field.
func ReviewerIssEqualFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEqualFold(FieldReviewerIss, v))
}

// ReviewerIssContainsFold applies the ContainsFold predicate on the "reviewer_iss" field.
func ReviewerIssContainsFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContainsFold(FieldReviewerIss, v))
}

// ReviewerSubEQ applies the EQ predicate on the "reviewer_sub" field.
func ReviewerSubEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReviewerSub, v))
}

// ReviewerSubNEQ applies the NEQ predicate on the "reviewer_sub" field.
func ReviewerSubNEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldReviewerSub, v))
}

// ReviewerSubIn applies the In predicate on the "reviewer_sub" field.
func ReviewerSubIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldReviewerSub, vs...))
}

// ReviewerSubNotIn applies the NotIn predicate on the "reviewer_sub" field.
func ReviewerSubNotIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldReviewerSub, vs...))
}

// ReviewerSubGT applies the GT predicate on the "reviewer_sub" field.
func ReviewerSubGT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldReviewerSub, v))
}

// ReviewerSubGTE applies the GTE predicate on the "reviewer_sub" field.
func ReviewerSubGTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldReviewerSub, v))
}

// ReviewerSubLT applies the LT predicate on the "reviewer_sub" field.
func ReviewerSubLT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldReviewerSub, v))
}

// ReviewerSubLTE applies the LTE predicate on the "reviewer_sub" field.
func ReviewerSubLTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldReviewerSub, v))
}

// ReviewerSubContains applies the Contains predicate on the "reviewer_sub" field.
func ReviewerSubContains(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContains(FieldReviewerSub, v))
}

// ReviewerSubHasPrefix applies the HasPrefix predicate on the "reviewer_sub" field.
func ReviewerSubHasPrefix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasPrefix(FieldReviewerSub, v))
}

// ReviewerSubHasSuffix applies the HasSuffix predicate on the "reviewer_sub" field.
func ReviewerSubHasSuffix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasSuffix(FieldReviewerSub, v))
}

// ReviewerSubIsNil applies the IsNil predicate on the "reviewer_sub" field.
func ReviewerSubIsNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIsNull(FieldReviewerSub))
}

// ReviewerSubNotNil applies the NotNil predicate on the "reviewer_sub" field.
func ReviewerSubNotNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotNull(FieldReviewerSub))
}

// ReviewerSubEqualFold applies the EqualFold predicate on the "reviewer_sub" field.
func ReviewerSubEqualFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEqualFold(FieldReviewerSub, v))
}

// ReviewerSubContainsFold applies the ContainsFold predicate on the "reviewer_sub" field.
func ReviewerSubContainsFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContainsFold(FieldReviewerSub, v))
}

// ReasonEQ applies the EQ predicate on the "reason" field.
func ReasonEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReason, v))
}

// ReasonNEQ applies the NEQ predicate on the "reason" field.
func ReasonNEQ(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldReason, v))
}

// ReasonIn applies the In predicate on the "reason" field.
func ReasonIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldReason, vs...))
}

// ReasonNotIn applies the NotIn predicate on the "reason" field.
func ReasonNotIn(vs ...string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldReason, vs...))
}

// ReasonGT applies the GT predicate on the "reason" field.
func ReasonGT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldReason, v))
}

// ReasonGTE applies the GTE predicate on the "reason" field.
func ReasonGTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldReason, v))
}

// ReasonLT applies the LT predicate on the "reason" field.
func ReasonLT(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldReason, v))
}

// ReasonLTE applies the LTE predicate on the "reason" field.
func ReasonLTE(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldReason, v))
}

// ReasonContains applies the Contains predicate on the "reason" field.
func ReasonContains(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContains(FieldReason, v))
}

// ReasonHasPrefix applies the HasPrefix predicate on the "reason" field.
func ReasonHasPrefix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasPrefix(FieldReason, v))
}

// ReasonHasSuffix applies the HasSuffix predicate on the "reason" field.
func ReasonHasSuffix(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldHasSuffix(FieldReason, v))
}

// ReasonEqualFold applies the EqualFold predicate on the "reason" field.
func ReasonEqualFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEqualFold(FieldReason, v))
}

// ReasonContainsFold applies the ContainsFold predicate on the "reason" field.
func ReasonContainsFold(v string) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldContainsFold(FieldReason, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v enums.DeletionRequestStatus) predicate.DeletionRequest {
	vc := v
	return predicate.DeletionRequest(sql.FieldEQ(FieldStatus, vc))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v enums.DeletionRequestStatus) predicate.DeletionRequest {
	vc := v
	return predicate.DeletionRequest(sql.FieldNEQ(FieldStatus, vc))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...enums.DeletionRequestStatus) predicate.DeletionRequest {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.DeletionRequest(sql.FieldIn(FieldStatus, v...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...enums.DeletionRequestStatus) predicate.DeletionRequest {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.DeletionRequest(sql.FieldNotIn(FieldStatus, v...))
}

// RequestedAtEQ applies the EQ predicate on the "requested_at" field.
func RequestedAtEQ(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldRequestedAt, v))
}

// RequestedAtNEQ applies the NEQ predicate on the "requested_at" field.
func RequestedAtNEQ(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldRequestedAt, v))
}

// RequestedAtIn applies the In predicate on the "requested_at" field.
func RequestedAtIn(vs ...time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldRequestedAt, vs...))
}

// RequestedAtNotIn applies the NotIn predicate on the "requested_at" field.
func RequestedAtNotIn(vs ...time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldRequestedAt, vs...))
}

// RequestedAtGT applies the GT predicate on the "requested_at" field.
func RequestedAtGT(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldRequestedAt, v))
}

// RequestedAtGTE applies the GTE predicate on the "requested_at" field.
func RequestedAtGTE(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldRequestedAt, v))
}

// RequestedAtLT applies the LT predicate on the "requested_at" field.
func RequestedAtLT(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldRequestedAt, v))
}

// RequestedAtLTE applies the LTE predicate on the "requested_at" field.
func RequestedAtLTE(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldRequestedAt, v))
}

// ReviewedAtEQ applies the EQ predicate on the "reviewed_at" field.
func ReviewedAtEQ(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldReviewedAt, v))
}

// ReviewedAtNEQ applies the NEQ predicate on the "reviewed_at" field.
func ReviewedAtNEQ(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldReviewedAt, v))
}

// ReviewedAtIn applies the In predicate on the "reviewed_at" field.
func ReviewedAtIn(vs ...time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldReviewedAt, vs...))
}

// ReviewedAtNotIn applies the NotIn predicate on the "reviewed_at" field.
func ReviewedAtNotIn(vs ...time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldReviewedAt, vs...))
}

// ReviewedAtGT applies the GT predicate on the "reviewed_at" field.
func ReviewedAtGT(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGT(FieldReviewedAt, v))
}

// ReviewedAtGTE applies the GTE predicate on the "reviewed_at" field.
func ReviewedAtGTE(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldGTE(FieldReviewedAt, v))
}

// ReviewedAtLT applies the LT predicate on the "reviewed_at" field.
func ReviewedAtLT(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLT(FieldReviewedAt, v))
}

// ReviewedAtLTE applies the LTE predicate on the "reviewed_at" field.
func ReviewedAtLTE(v time.Time) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldLTE(FieldReviewedAt, v))
}

// ReviewedAtIsNil applies the IsNil predicate on the "reviewed_at" field.
func ReviewedAtIsNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIsNull(FieldReviewedAt))
}

// ReviewedAtNotNil applies the NotNil predicate on the "reviewed_at" field.
func ReviewedAtNotNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotNull(FieldReviewedAt))
}

// AipIDEQ applies the EQ predicate on the "aip_id" field.
func AipIDEQ(v int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldAipID, v))
}

// AipIDNEQ applies the NEQ predicate on the "aip_id" field.
func AipIDNEQ(v int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldAipID, v))
}

// AipIDIn applies the In predicate on the "aip_id" field.
func AipIDIn(vs ...int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldAipID, vs...))
}

// AipIDNotIn applies the NotIn predicate on the "aip_id" field.
func AipIDNotIn(vs ...int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldAipID, vs...))
}

// WorkflowIDEQ applies the EQ predicate on the "workflow_id" field.
func WorkflowIDEQ(v int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldEQ(FieldWorkflowID, v))
}

// WorkflowIDNEQ applies the NEQ predicate on the "workflow_id" field.
func WorkflowIDNEQ(v int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNEQ(FieldWorkflowID, v))
}

// WorkflowIDIn applies the In predicate on the "workflow_id" field.
func WorkflowIDIn(vs ...int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIn(FieldWorkflowID, vs...))
}

// WorkflowIDNotIn applies the NotIn predicate on the "workflow_id" field.
func WorkflowIDNotIn(vs ...int) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotIn(FieldWorkflowID, vs...))
}

// WorkflowIDIsNil applies the IsNil predicate on the "workflow_id" field.
func WorkflowIDIsNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldIsNull(FieldWorkflowID))
}

// WorkflowIDNotNil applies the NotNil predicate on the "workflow_id" field.
func WorkflowIDNotNil() predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.FieldNotNull(FieldWorkflowID))
}

// HasAip applies the HasEdge predicate on the "aip" edge.
func HasAip() predicate.DeletionRequest {
	return predicate.DeletionRequest(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AipTable, AipColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAipWith applies the HasEdge predicate on the "aip" edge with a given conditions (other predicates).
func HasAipWith(preds ...predicate.AIP) predicate.DeletionRequest {
	return predicate.DeletionRequest(func(s *sql.Selector) {
		step := newAipStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasWorkflow applies the HasEdge predicate on the "workflow" edge.
func HasWorkflow() predicate.DeletionRequest {
	return predicate.DeletionRequest(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, WorkflowTable, WorkflowColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasWorkflowWith applies the HasEdge predicate on the "workflow" edge with a given conditions (other predicates).
func HasWorkflowWith(preds ...predicate.Workflow) predicate.DeletionRequest {
	return predicate.DeletionRequest(func(s *sql.Selector) {
		step := newWorkflowStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DeletionRequest) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DeletionRequest) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DeletionRequest) predicate.DeletionRequest {
	return predicate.DeletionRequest(sql.NotPredicates(p))
}
